// QCustomLabel3D.sip generated by MetaSIP
//
// This file is part of the QtStackedBar3DVis Python extension module.
//
// Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQtStackedBar3DVis.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


namespace QtStackedBar3DVis
{
%TypeHeaderCode
#include <QCustomLabel3D.h>
%End

    class QCustomLabel3D : QtStackedBar3DVis::QCustomItem3D
    {
%TypeHeaderCode
#include <QCustomLabel3D.h>
%End

    public:
        explicit QCustomLabel3D(QObject *parent /TransferThis/ = 0);
        QCustomLabel3D(const QString &text, const QFont &font, const QVector3D &position, const QVector3D &scaling, const QQuaternion &rotation, QObject *parent /TransferThis/ = 0);
        virtual ~QCustomLabel3D();
        void setText(const QString &text);
        QString text() const;
        void setFont(const QFont &font);
        QFont font() const;
        void setTextColor(const QColor &color);
        QColor textColor() const;
        void setBackgroundColor(const QColor &color);
        QColor backgroundColor() const;
        void setBorderEnabled(bool enabled);
        bool isBorderEnabled() const;
        void setBackgroundEnabled(bool enabled);
        bool isBackgroundEnabled() const;
        void setFacingCamera(bool enabled);
        bool isFacingCamera() const;

    signals:
        void textChanged(const QString &text);
        void fontChanged(const QFont &font);
        void textColorChanged(const QColor &color);
        void backgroundColorChanged(const QColor &color);
        void borderEnabledChanged(bool enabled);
        void backgroundEnabledChanged(bool enabled);
        void facingCameraChanged(bool enabled);
    };
};
