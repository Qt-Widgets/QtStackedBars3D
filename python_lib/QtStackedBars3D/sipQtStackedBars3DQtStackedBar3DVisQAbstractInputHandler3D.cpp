/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.12
 *
 * Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQtStackedBars3D.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtStackedBars3D.h"

#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 26 "sip/QtStackedBars3D/qabstractinputhandler3d.sip"
#include <QAbstractInputHandler3D.h>
#line 32 "sip/QtStackedBars3D/qabstractinputhandler3d.sip"
#include <QAbstractInputHandler3D.h>
#line 49 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"

#line 28 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qobject.sip"
#include <qobject.h>
#line 53 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qpoint.sip"
#include <qpoint.h>
#line 56 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 32 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 71 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 253 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 74 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 205 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 77 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 714 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 80 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 83 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 86 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 247 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 89 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 235 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 92 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 27 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qstring.sip"
#include <qstring.h>
#line 95 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qvariant.sip"
#include <qvariant.h>
#line 98 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 38 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 101 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 30 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 104 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 149 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 107 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 110 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qthread.sip"
#include <qthread.h>
#line 113 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 116 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qregexp.sip"
#include <qregexp.h>
#line 119 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 122 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 125 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractInputHandler3D.cpp"


class sipQtStackedBar3DVis_QAbstractInputHandler3D : public  ::QtStackedBar3DVis::QAbstractInputHandler3D
{
public:
    sipQtStackedBar3DVis_QAbstractInputHandler3D( ::QObject*);
    virtual ~sipQtStackedBar3DVis_QAbstractInputHandler3D();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void wheelEvent( ::QWheelEvent*);
    void mouseMoveEvent( ::QMouseEvent*,const  ::QPoint&);
    void mouseReleaseEvent( ::QMouseEvent*,const  ::QPoint&);
    void mousePressEvent( ::QMouseEvent*,const  ::QPoint&);
    void touchEvent( ::QTouchEvent*);
    void mouseDoubleClickEvent( ::QMouseEvent*);
    bool event( ::QEvent*);
    bool eventFilter( ::QObject*, ::QEvent*);
    void timerEvent( ::QTimerEvent*);
    void childEvent( ::QChildEvent*);
    void customEvent( ::QEvent*);
    void connectNotify(const  ::QMetaMethod&);
    void disconnectNotify(const  ::QMetaMethod&);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQtStackedBar3DVis_QAbstractInputHandler3D(const sipQtStackedBar3DVis_QAbstractInputHandler3D &);
    sipQtStackedBar3DVis_QAbstractInputHandler3D &operator = (const sipQtStackedBar3DVis_QAbstractInputHandler3D &);

    char sipPyMethods[13];
};

sipQtStackedBar3DVis_QAbstractInputHandler3D::sipQtStackedBar3DVis_QAbstractInputHandler3D( ::QObject*a0):  ::QtStackedBar3DVis::QAbstractInputHandler3D(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQtStackedBar3DVis_QAbstractInputHandler3D::~sipQtStackedBar3DVis_QAbstractInputHandler3D()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

const QMetaObject *sipQtStackedBar3DVis_QAbstractInputHandler3D::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtStackedBars3D_qt_metaobject(sipPySelf,sipType_QtStackedBar3DVis_QAbstractInputHandler3D);

    return  ::QtStackedBar3DVis::QAbstractInputHandler3D::metaObject();
}

int sipQtStackedBar3DVis_QAbstractInputHandler3D::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id =  ::QtStackedBar3DVis::QAbstractInputHandler3D::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtStackedBars3D_qt_metacall(sipPySelf,sipType_QtStackedBar3DVis_QAbstractInputHandler3D,_c,_id,_a);

    return _id;
}

void *sipQtStackedBar3DVis_QAbstractInputHandler3D::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtStackedBars3D_qt_metacast(sipPySelf, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, _clname, &sipCpp) ? sipCpp :  ::QtStackedBar3DVis::QAbstractInputHandler3D::qt_metacast(_clname));
}

void sipQtStackedBar3DVis_QAbstractInputHandler3D::wheelEvent( ::QWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_wheelEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QAbstractInputHandler3D::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_2(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QWheelEvent*);

    sipVH_QtStackedBars3D_2(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QAbstractInputHandler3D::mouseMoveEvent( ::QMouseEvent*a0,const  ::QPoint& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QAbstractInputHandler3D::mouseMoveEvent(a0,a1);
        return;
    }

    extern void sipVH_QtStackedBars3D_23(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*,const  ::QPoint&);

    sipVH_QtStackedBars3D_23(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQtStackedBar3DVis_QAbstractInputHandler3D::mouseReleaseEvent( ::QMouseEvent*a0,const  ::QPoint& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QAbstractInputHandler3D::mouseReleaseEvent(a0,a1);
        return;
    }

    extern void sipVH_QtStackedBars3D_23(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*,const  ::QPoint&);

    sipVH_QtStackedBars3D_23(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQtStackedBar3DVis_QAbstractInputHandler3D::mousePressEvent( ::QMouseEvent*a0,const  ::QPoint& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_mousePressEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QAbstractInputHandler3D::mousePressEvent(a0,a1);
        return;
    }

    extern void sipVH_QtStackedBars3D_23(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*,const  ::QPoint&);

    sipVH_QtStackedBars3D_23(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQtStackedBar3DVis_QAbstractInputHandler3D::touchEvent( ::QTouchEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_touchEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QAbstractInputHandler3D::touchEvent(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTouchEvent*);

    sipVH_QtStackedBars3D_1(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QAbstractInputHandler3D::mouseDoubleClickEvent( ::QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QAbstractInputHandler3D::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QMouseEvent*);

    sipVH_QtStackedBars3D_3(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQtStackedBar3DVis_QAbstractInputHandler3D::event( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return  ::QtStackedBar3DVis::QAbstractInputHandler3D::event(a0);

    extern bool sipVH_QtStackedBars3D_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtStackedBars3D_15(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQtStackedBar3DVis_QAbstractInputHandler3D::eventFilter( ::QObject*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return  ::QtStackedBar3DVis::QAbstractInputHandler3D::eventFilter(a0,a1);

    extern bool sipVH_QtStackedBars3D_16(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*, ::QEvent*);

    return sipVH_QtStackedBars3D_16(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQtStackedBar3DVis_QAbstractInputHandler3D::timerEvent( ::QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QAbstractInputHandler3D::timerEvent(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_17(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTimerEvent*);

    sipVH_QtStackedBars3D_17(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QAbstractInputHandler3D::childEvent( ::QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QAbstractInputHandler3D::childEvent(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_18(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QChildEvent*);

    sipVH_QtStackedBars3D_18(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QAbstractInputHandler3D::customEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[10],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QAbstractInputHandler3D::customEvent(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_19(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtStackedBars3D_19(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QAbstractInputHandler3D::connectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QAbstractInputHandler3D::connectNotify(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtStackedBars3D_20(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QAbstractInputHandler3D::disconnectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QAbstractInputHandler3D::disconnectNotify(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtStackedBars3D_20(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractInputHandler3D_mouseDoubleClickEvent, "mouseDoubleClickEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_mouseDoubleClickEvent(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QtStackedBar3DVis::QAbstractInputHandler3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &sipCpp, sipType_QMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAbstractInputHandler3D::mouseDoubleClickEvent(a0) : sipCpp->mouseDoubleClickEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractInputHandler3D, sipName_mouseDoubleClickEvent, doc_QtStackedBar3DVis_QAbstractInputHandler3D_mouseDoubleClickEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractInputHandler3D_touchEvent, "touchEvent(self, QTouchEvent)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_touchEvent(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_touchEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QTouchEvent* a0;
         ::QtStackedBar3DVis::QAbstractInputHandler3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &sipCpp, sipType_QTouchEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAbstractInputHandler3D::touchEvent(a0) : sipCpp->touchEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractInputHandler3D, sipName_touchEvent, doc_QtStackedBar3DVis_QAbstractInputHandler3D_touchEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractInputHandler3D_mousePressEvent, "mousePressEvent(self, QMouseEvent, QPoint)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_mousePressEvent(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
        const  ::QPoint* a1;
         ::QtStackedBar3DVis::QAbstractInputHandler3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &sipCpp, sipType_QMouseEvent, &a0, sipType_QPoint, &a1))
        {
            (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAbstractInputHandler3D::mousePressEvent(a0,*a1) : sipCpp->mousePressEvent(a0,*a1));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractInputHandler3D, sipName_mousePressEvent, doc_QtStackedBar3DVis_QAbstractInputHandler3D_mousePressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractInputHandler3D_mouseReleaseEvent, "mouseReleaseEvent(self, QMouseEvent, QPoint)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_mouseReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
        const  ::QPoint* a1;
         ::QtStackedBar3DVis::QAbstractInputHandler3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &sipCpp, sipType_QMouseEvent, &a0, sipType_QPoint, &a1))
        {
            (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAbstractInputHandler3D::mouseReleaseEvent(a0,*a1) : sipCpp->mouseReleaseEvent(a0,*a1));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractInputHandler3D, sipName_mouseReleaseEvent, doc_QtStackedBar3DVis_QAbstractInputHandler3D_mouseReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractInputHandler3D_mouseMoveEvent, "mouseMoveEvent(self, QMouseEvent, QPoint)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_mouseMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
        const  ::QPoint* a1;
         ::QtStackedBar3DVis::QAbstractInputHandler3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &sipCpp, sipType_QMouseEvent, &a0, sipType_QPoint, &a1))
        {
            (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAbstractInputHandler3D::mouseMoveEvent(a0,*a1) : sipCpp->mouseMoveEvent(a0,*a1));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractInputHandler3D, sipName_mouseMoveEvent, doc_QtStackedBar3DVis_QAbstractInputHandler3D_mouseMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractInputHandler3D_wheelEvent, "wheelEvent(self, QWheelEvent)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_wheelEvent(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_wheelEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QWheelEvent* a0;
         ::QtStackedBar3DVis::QAbstractInputHandler3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &sipCpp, sipType_QWheelEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAbstractInputHandler3D::wheelEvent(a0) : sipCpp->wheelEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractInputHandler3D, sipName_wheelEvent, doc_QtStackedBar3DVis_QAbstractInputHandler3D_wheelEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractInputHandler3D_inputView, "inputView(self) -> QtStackedBar3DVis.QAbstractInputHandler3D.InputView");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_inputView(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_inputView(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractInputHandler3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QAbstractInputHandler3D::InputView sipRes;

            sipRes = sipCpp->inputView();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QtStackedBar3DVis_QAbstractInputHandler3D_InputView);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractInputHandler3D, sipName_inputView, doc_QtStackedBar3DVis_QAbstractInputHandler3D_inputView);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractInputHandler3D_setInputView, "setInputView(self, QtStackedBar3DVis.QAbstractInputHandler3D.InputView)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_setInputView(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_setInputView(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QAbstractInputHandler3D::InputView a0;
         ::QtStackedBar3DVis::QAbstractInputHandler3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &sipCpp, sipType_QtStackedBar3DVis_QAbstractInputHandler3D_InputView, &a0))
        {
            sipCpp->setInputView(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractInputHandler3D, sipName_setInputView, doc_QtStackedBar3DVis_QAbstractInputHandler3D_setInputView);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractInputHandler3D_inputPosition, "inputPosition(self) -> QPoint");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_inputPosition(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_inputPosition(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractInputHandler3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &sipCpp))
        {
             ::QPoint*sipRes;

            sipRes = new  ::QPoint(sipCpp->inputPosition());

            return sipConvertFromNewType(sipRes,sipType_QPoint,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractInputHandler3D, sipName_inputPosition, doc_QtStackedBar3DVis_QAbstractInputHandler3D_inputPosition);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractInputHandler3D_setInputPosition, "setInputPosition(self, QPoint)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_setInputPosition(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_setInputPosition(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QPoint* a0;
         ::QtStackedBar3DVis::QAbstractInputHandler3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &sipCpp, sipType_QPoint, &a0))
        {
            sipCpp->setInputPosition(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractInputHandler3D, sipName_setInputPosition, doc_QtStackedBar3DVis_QAbstractInputHandler3D_setInputPosition);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractInputHandler3D_scene, "scene(self) -> QtStackedBar3DVis.QScene3D");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_scene(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_scene(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractInputHandler3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QScene3D*sipRes;

            sipRes = sipCpp->scene();

            return sipConvertFromType(sipRes,sipType_QtStackedBar3DVis_QScene3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractInputHandler3D, sipName_scene, doc_QtStackedBar3DVis_QAbstractInputHandler3D_scene);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractInputHandler3D_setScene, "setScene(self, QtStackedBar3DVis.QScene3D)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_setScene(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_setScene(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QScene3D* a0;
         ::QtStackedBar3DVis::QAbstractInputHandler3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &sipCpp, sipType_QtStackedBar3DVis_QScene3D, &a0))
        {
            sipCpp->setScene(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractInputHandler3D, sipName_setScene, doc_QtStackedBar3DVis_QAbstractInputHandler3D_setScene);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractInputHandler3D_setPrevDistance, "setPrevDistance(self, int)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_setPrevDistance(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_setPrevDistance(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
         ::QtStackedBar3DVis::QAbstractInputHandler3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pi", &sipSelf, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &sipCpp, &a0))
        {
            sipCpp->setPrevDistance(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractInputHandler3D, sipName_setPrevDistance, doc_QtStackedBar3DVis_QAbstractInputHandler3D_setPrevDistance);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractInputHandler3D_prevDistance, "prevDistance(self) -> int");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_prevDistance(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_prevDistance(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractInputHandler3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->prevDistance();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractInputHandler3D, sipName_prevDistance, doc_QtStackedBar3DVis_QAbstractInputHandler3D_prevDistance);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractInputHandler3D_setPreviousInputPos, "setPreviousInputPos(self, QPoint)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_setPreviousInputPos(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_setPreviousInputPos(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QPoint* a0;
         ::QtStackedBar3DVis::QAbstractInputHandler3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ9", &sipSelf, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &sipCpp, sipType_QPoint, &a0))
        {
            sipCpp->setPreviousInputPos(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractInputHandler3D, sipName_setPreviousInputPos, doc_QtStackedBar3DVis_QAbstractInputHandler3D_setPreviousInputPos);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractInputHandler3D_previousInputPos, "previousInputPos(self) -> QPoint");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_previousInputPos(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractInputHandler3D_previousInputPos(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractInputHandler3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &sipCpp))
        {
             ::QPoint*sipRes;

            sipRes = new  ::QPoint(sipCpp->previousInputPos());

            return sipConvertFromNewType(sipRes,sipType_QPoint,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractInputHandler3D, sipName_previousInputPos, doc_QtStackedBar3DVis_QAbstractInputHandler3D_previousInputPos);

    return NULL;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QtStackedBar3DVis_QAbstractInputHandler3D(void *, const sipTypeDef *);}
static void *cast_QtStackedBar3DVis_QAbstractInputHandler3D(void *sipCppV, const sipTypeDef *targetType)
{
     ::QtStackedBar3DVis::QAbstractInputHandler3D *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QAbstractInputHandler3D *>(sipCppV);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QtStackedBar3DVis_QAbstractInputHandler3D(void *, int);}
static void release_QtStackedBar3DVis_QAbstractInputHandler3D(void *sipCppV, int)
{
     ::QtStackedBar3DVis::QAbstractInputHandler3D *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QAbstractInputHandler3D *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QtStackedBar3DVis_QAbstractInputHandler3D(sipSimpleWrapper *);}
static void dealloc_QtStackedBar3DVis_QAbstractInputHandler3D(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQtStackedBar3DVis_QAbstractInputHandler3D *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QtStackedBar3DVis_QAbstractInputHandler3D(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QtStackedBar3DVis_QAbstractInputHandler3D(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QtStackedBar3DVis_QAbstractInputHandler3D(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQtStackedBar3DVis_QAbstractInputHandler3D *sipCpp = 0;

    {
         ::QObject* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QObject, &a0, sipOwner))
        {
            sipCpp = new sipQtStackedBar3DVis_QAbstractInputHandler3D(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QtStackedBar3DVis_QAbstractInputHandler3D[] = {{4, 0, 1}};


static PyMethodDef methods_QtStackedBar3DVis_QAbstractInputHandler3D[] = {
    {SIP_MLNAME_CAST(sipName_inputPosition), meth_QtStackedBar3DVis_QAbstractInputHandler3D_inputPosition, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractInputHandler3D_inputPosition)},
    {SIP_MLNAME_CAST(sipName_inputView), meth_QtStackedBar3DVis_QAbstractInputHandler3D_inputView, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractInputHandler3D_inputView)},
    {SIP_MLNAME_CAST(sipName_mouseDoubleClickEvent), meth_QtStackedBar3DVis_QAbstractInputHandler3D_mouseDoubleClickEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractInputHandler3D_mouseDoubleClickEvent)},
    {SIP_MLNAME_CAST(sipName_mouseMoveEvent), meth_QtStackedBar3DVis_QAbstractInputHandler3D_mouseMoveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractInputHandler3D_mouseMoveEvent)},
    {SIP_MLNAME_CAST(sipName_mousePressEvent), meth_QtStackedBar3DVis_QAbstractInputHandler3D_mousePressEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractInputHandler3D_mousePressEvent)},
    {SIP_MLNAME_CAST(sipName_mouseReleaseEvent), meth_QtStackedBar3DVis_QAbstractInputHandler3D_mouseReleaseEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractInputHandler3D_mouseReleaseEvent)},
    {SIP_MLNAME_CAST(sipName_prevDistance), meth_QtStackedBar3DVis_QAbstractInputHandler3D_prevDistance, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractInputHandler3D_prevDistance)},
    {SIP_MLNAME_CAST(sipName_previousInputPos), meth_QtStackedBar3DVis_QAbstractInputHandler3D_previousInputPos, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractInputHandler3D_previousInputPos)},
    {SIP_MLNAME_CAST(sipName_scene), meth_QtStackedBar3DVis_QAbstractInputHandler3D_scene, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractInputHandler3D_scene)},
    {SIP_MLNAME_CAST(sipName_setInputPosition), meth_QtStackedBar3DVis_QAbstractInputHandler3D_setInputPosition, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractInputHandler3D_setInputPosition)},
    {SIP_MLNAME_CAST(sipName_setInputView), meth_QtStackedBar3DVis_QAbstractInputHandler3D_setInputView, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractInputHandler3D_setInputView)},
    {SIP_MLNAME_CAST(sipName_setPrevDistance), meth_QtStackedBar3DVis_QAbstractInputHandler3D_setPrevDistance, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractInputHandler3D_setPrevDistance)},
    {SIP_MLNAME_CAST(sipName_setPreviousInputPos), meth_QtStackedBar3DVis_QAbstractInputHandler3D_setPreviousInputPos, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractInputHandler3D_setPreviousInputPos)},
    {SIP_MLNAME_CAST(sipName_setScene), meth_QtStackedBar3DVis_QAbstractInputHandler3D_setScene, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractInputHandler3D_setScene)},
    {SIP_MLNAME_CAST(sipName_touchEvent), meth_QtStackedBar3DVis_QAbstractInputHandler3D_touchEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractInputHandler3D_touchEvent)},
    {SIP_MLNAME_CAST(sipName_wheelEvent), meth_QtStackedBar3DVis_QAbstractInputHandler3D_wheelEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractInputHandler3D_wheelEvent)}
};

static sipEnumMemberDef enummembers_QtStackedBar3DVis_QAbstractInputHandler3D[] = {
    {sipName_InputViewNone, static_cast<int>( ::QtStackedBar3DVis::QAbstractInputHandler3D::InputViewNone), 25},
    {sipName_InputViewOnPrimary, static_cast<int>( ::QtStackedBar3DVis::QAbstractInputHandler3D::InputViewOnPrimary), 25},
    {sipName_InputViewOnSecondary, static_cast<int>( ::QtStackedBar3DVis::QAbstractInputHandler3D::InputViewOnSecondary), 25},
};

PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractInputHandler3D, "\1QtStackedBar3DVis.QAbstractInputHandler3D(parent: QObject = None)");


/* Define this type's signals. */
static const pyqt5QtSignal signals_QtStackedBar3DVis_QAbstractInputHandler3D[] = {
    {"sceneChanged(QScene3D*)|(QtStackedBar3DVis::QScene3D*)", "\1sceneChanged(self, QtStackedBar3DVis.QScene3D)", 0, 0},
    {"inputViewChanged(QAbstractInputHandler3D::InputView)|(QtStackedBar3DVis::QAbstractInputHandler3D::InputView)", "\1inputViewChanged(self, QtStackedBar3DVis.QAbstractInputHandler3D.InputView)", 0, 0},
    {"positionChanged(QPoint)", "\1positionChanged(self, QPoint)", 0, 0},
    {0, 0, 0, 0}
};


static pyqt5ClassPluginDef plugin_QtStackedBar3DVis_QAbstractInputHandler3D = {
    & ::QtStackedBar3DVis::QAbstractInputHandler3D::staticMetaObject,
    0,
    signals_QtStackedBar3DVis_QAbstractInputHandler3D,
    0
};


sipClassTypeDef sipTypeDef_QtStackedBars3D_QtStackedBar3DVis_QAbstractInputHandler3D = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QtStackedBar3DVis__QAbstractInputHandler3D,
        {0},
        &plugin_QtStackedBar3DVis_QAbstractInputHandler3D
    },
    {
        sipNameNr_QAbstractInputHandler3D,
        {11, 255, 0},
        16, methods_QtStackedBar3DVis_QAbstractInputHandler3D,
        3, enummembers_QtStackedBar3DVis_QAbstractInputHandler3D,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QtStackedBar3DVis_QAbstractInputHandler3D,
    -1,
    -1,
    supers_QtStackedBar3DVis_QAbstractInputHandler3D,
    0,
    init_type_QtStackedBar3DVis_QAbstractInputHandler3D,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QtStackedBar3DVis_QAbstractInputHandler3D,
    0,
    0,
    0,
    release_QtStackedBar3DVis_QAbstractInputHandler3D,
    cast_QtStackedBar3DVis_QAbstractInputHandler3D,
    0,
    0,
    0,
    0,
    0,
    0
};
