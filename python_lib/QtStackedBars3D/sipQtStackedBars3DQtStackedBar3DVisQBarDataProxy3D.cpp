/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.12
 *
 * Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQtStackedBars3D.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtStackedBars3D.h"

#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 26 "sip/QtStackedBars3D/qabstractinputhandler3d.sip"
#include <QAbstractInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qabstractseries3d.sip"
#include <QAbstractSeries3D.h>
#line 26 "sip/QtStackedBars3D/qabstractdataproxy3d.sip"
#include <QAbstractDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qbarseries3d.sip"
#include <QBarSeries3D.h>
#line 26 "sip/QtStackedBars3D/qbardataitem3d.sip"
#include <QBarDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qbardataproxy3d.sip"
#include <QBarDataProxy3D.h>
#line 35 "sip/QtStackedBars3D/qbardataproxy3d.sip"
#include <QBarDataProxy3D.h>
#line 59 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"

#line 28 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qobject.sip"
#include <qobject.h>
#line 63 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 26 "sip/QtStackedBars3D/qabstractinputhandler3d.sip"
#include <QAbstractInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qabstractseries3d.sip"
#include <QAbstractSeries3D.h>
#line 26 "sip/QtStackedBars3D/qabstractdataproxy3d.sip"
#include <QAbstractDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qbarseries3d.sip"
#include <QBarSeries3D.h>
#line 32 "sip/QtStackedBars3D/qbarseries3d.sip"
#include <QBarSeries3D.h>
#line 92 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 37 "sip/QtStackedBars3D/qlist.sip"
#include <qlist.h>
#include <qvector.h>
#line 96 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 26 "sip/QtStackedBars3D/qabstractinputhandler3d.sip"
#include <QAbstractInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qabstractseries3d.sip"
#include <QAbstractSeries3D.h>
#line 26 "sip/QtStackedBars3D/qabstractdataproxy3d.sip"
#include <QAbstractDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qbarseries3d.sip"
#include <QBarSeries3D.h>
#line 26 "sip/QtStackedBars3D/qbardataitem3d.sip"
#include <QBarDataItem3D.h>
#line 32 "sip/QtStackedBars3D/qbardataitem3d.sip"
#include <QBarDataItem3D.h>
#line 127 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 36 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qstringlist.sip"
#include <qstringlist.h>
#line 130 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 28 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qpycore_qvector.sip"
#include <qvector.h>
#line 133 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 27 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qstring.sip"
#include <qstring.h>
#line 136 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qpoint.sip"
#include <qpoint.h>
#line 139 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 26 "sip/QtStackedBars3D/qabstractinputhandler3d.sip"
#include <QAbstractInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qabstractseries3d.sip"
#include <QAbstractSeries3D.h>
#line 26 "sip/QtStackedBars3D/qabstractdataproxy3d.sip"
#include <QAbstractDataProxy3D.h>
#line 32 "sip/QtStackedBars3D/qabstractdataproxy3d.sip"
#include <QAbstractDataProxy3D.h>
#line 166 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 169 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 172 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 247 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 175 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 235 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 178 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qvariant.sip"
#include <qvariant.h>
#line 181 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 38 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 184 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 30 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 187 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 149 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 190 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 193 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qthread.sip"
#include <qthread.h>
#line 196 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 199 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qregexp.sip"
#include <qregexp.h>
#line 202 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 205 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 208 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQBarDataProxy3D.cpp"


class sipQtStackedBar3DVis_QBarDataProxy3D : public  ::QtStackedBar3DVis::QBarDataProxy3D
{
public:
    sipQtStackedBar3DVis_QBarDataProxy3D( ::QObject*);
    virtual ~sipQtStackedBar3DVis_QBarDataProxy3D();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void disconnectNotify(const  ::QMetaMethod&);
    void connectNotify(const  ::QMetaMethod&);
    void customEvent( ::QEvent*);
    void childEvent( ::QChildEvent*);
    void timerEvent( ::QTimerEvent*);
    bool eventFilter( ::QObject*, ::QEvent*);
    bool event( ::QEvent*);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQtStackedBar3DVis_QBarDataProxy3D(const sipQtStackedBar3DVis_QBarDataProxy3D &);
    sipQtStackedBar3DVis_QBarDataProxy3D &operator = (const sipQtStackedBar3DVis_QBarDataProxy3D &);

    char sipPyMethods[7];
};

sipQtStackedBar3DVis_QBarDataProxy3D::sipQtStackedBar3DVis_QBarDataProxy3D( ::QObject*a0):  ::QtStackedBar3DVis::QBarDataProxy3D(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQtStackedBar3DVis_QBarDataProxy3D::~sipQtStackedBar3DVis_QBarDataProxy3D()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

const QMetaObject *sipQtStackedBar3DVis_QBarDataProxy3D::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtStackedBars3D_qt_metaobject(sipPySelf,sipType_QtStackedBar3DVis_QBarDataProxy3D);

    return  ::QtStackedBar3DVis::QBarDataProxy3D::metaObject();
}

int sipQtStackedBar3DVis_QBarDataProxy3D::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id =  ::QtStackedBar3DVis::QBarDataProxy3D::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtStackedBars3D_qt_metacall(sipPySelf,sipType_QtStackedBar3DVis_QBarDataProxy3D,_c,_id,_a);

    return _id;
}

void *sipQtStackedBar3DVis_QBarDataProxy3D::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtStackedBars3D_qt_metacast(sipPySelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, _clname, &sipCpp) ? sipCpp :  ::QtStackedBar3DVis::QBarDataProxy3D::qt_metacast(_clname));
}

void sipQtStackedBar3DVis_QBarDataProxy3D::disconnectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QBarDataProxy3D::disconnectNotify(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtStackedBars3D_20(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QBarDataProxy3D::connectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QBarDataProxy3D::connectNotify(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtStackedBars3D_20(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QBarDataProxy3D::customEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QBarDataProxy3D::customEvent(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_19(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtStackedBars3D_19(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QBarDataProxy3D::childEvent( ::QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QBarDataProxy3D::childEvent(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_18(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QChildEvent*);

    sipVH_QtStackedBars3D_18(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QBarDataProxy3D::timerEvent( ::QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QBarDataProxy3D::timerEvent(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_17(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTimerEvent*);

    sipVH_QtStackedBars3D_17(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQtStackedBar3DVis_QBarDataProxy3D::eventFilter( ::QObject*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return  ::QtStackedBar3DVis::QBarDataProxy3D::eventFilter(a0,a1);

    extern bool sipVH_QtStackedBars3D_16(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*, ::QEvent*);

    return sipVH_QtStackedBars3D_16(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQtStackedBar3DVis_QBarDataProxy3D::event( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return  ::QtStackedBar3DVis::QBarDataProxy3D::event(a0);

    extern bool sipVH_QtStackedBars3D_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtStackedBars3D_15(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D_rowCount, "rowCount(self) -> int");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_rowCount(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_rowCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->rowCount();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBarDataProxy3D, sipName_rowCount, doc_QtStackedBar3DVis_QBarDataProxy3D_rowCount);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D_rowLabels, "rowLabels(self) -> List[str]");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_rowLabels(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_rowLabels(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp))
        {
             ::QStringList*sipRes;

            sipRes = new  ::QStringList(sipCpp->rowLabels());

            return sipConvertFromNewType(sipRes,sipType_QStringList,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBarDataProxy3D, sipName_rowLabels, doc_QtStackedBar3DVis_QBarDataProxy3D_rowLabels);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D_setRowLabels, "setRowLabels(self, Iterable[str])");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_setRowLabels(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_setRowLabels(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QStringList* a0;
        int a0State = 0;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, sipType_QStringList,&a0, &a0State))
        {
            sipCpp->setRowLabels(*a0);
            sipReleaseType(const_cast< ::QStringList *>(a0),sipType_QStringList,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBarDataProxy3D, sipName_setRowLabels, doc_QtStackedBar3DVis_QBarDataProxy3D_setRowLabels);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D_columnLabels, "columnLabels(self) -> List[str]");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_columnLabels(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_columnLabels(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp))
        {
             ::QStringList*sipRes;

            sipRes = new  ::QStringList(sipCpp->columnLabels());

            return sipConvertFromNewType(sipRes,sipType_QStringList,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBarDataProxy3D, sipName_columnLabels, doc_QtStackedBar3DVis_QBarDataProxy3D_columnLabels);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D_setColumnLabels, "setColumnLabels(self, Iterable[str])");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_setColumnLabels(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_setColumnLabels(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QStringList* a0;
        int a0State = 0;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, sipType_QStringList,&a0, &a0State))
        {
            sipCpp->setColumnLabels(*a0);
            sipReleaseType(const_cast< ::QStringList *>(a0),sipType_QStringList,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBarDataProxy3D, sipName_setColumnLabels, doc_QtStackedBar3DVis_QBarDataProxy3D_setColumnLabels);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D_array, "array(self) -> object");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_array(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_array(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp))
        {
            const  ::QtStackedBar3DVis::QBarDataArray3D*sipRes;

            sipRes = sipCpp->array();

            return sipConvertFromType(const_cast< ::QtStackedBar3DVis::QBarDataArray3D *>(sipRes),sipType_QList_0601QVector_0100QtStackedBar3DVis_QBarDataItem3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBarDataProxy3D, sipName_array, doc_QtStackedBar3DVis_QBarDataProxy3D_array);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D_rowAt, "rowAt(self, int) -> object");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_rowAt(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_rowAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        const  ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, &a0))
        {
            const  ::QtStackedBar3DVis::QBarDataRow3D*sipRes;

            sipRes = sipCpp->rowAt(a0);

            return sipConvertFromType(const_cast< ::QtStackedBar3DVis::QBarDataRow3D *>(sipRes),sipType_QVector_0100QtStackedBar3DVis_QBarDataItem3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBarDataProxy3D, sipName_rowAt, doc_QtStackedBar3DVis_QBarDataProxy3D_rowAt);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D_itemAt, "itemAt(self, int, int) -> QtStackedBar3DVis.QBarDataItem3D\n"
"itemAt(self, QPoint) -> QtStackedBar3DVis.QBarDataItem3D");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_itemAt(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_itemAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        int a1;
        const  ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bii", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, &a0, &a1))
        {
            const  ::QtStackedBar3DVis::QBarDataItem3D*sipRes;

            sipRes = sipCpp->itemAt(a0,a1);

            return sipConvertFromType(const_cast< ::QtStackedBar3DVis::QBarDataItem3D *>(sipRes),sipType_QtStackedBar3DVis_QBarDataItem3D,NULL);
        }
    }

    {
        const  ::QPoint* a0;
        const  ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, sipType_QPoint, &a0))
        {
            const  ::QtStackedBar3DVis::QBarDataItem3D*sipRes;

            sipRes = sipCpp->itemAt(*a0);

            return sipConvertFromType(const_cast< ::QtStackedBar3DVis::QBarDataItem3D *>(sipRes),sipType_QtStackedBar3DVis_QBarDataItem3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBarDataProxy3D, sipName_itemAt, doc_QtStackedBar3DVis_QBarDataProxy3D_itemAt);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D_resetArray, "resetArray(self)\n"
"resetArray(self, object)\n"
"resetArray(self, object, Iterable[str], Iterable[str])");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_resetArray(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_resetArray(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp))
        {
            sipCpp->resetArray();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::QtStackedBar3DVis::QBarDataArray3D* a0;
        int a0State = 0;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ2", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, sipType_QList_0601QVector_0100QtStackedBar3DVis_QBarDataItem3D,&a0, &a0State))
        {
            sipCpp->resetArray(a0);
            sipReleaseType(a0,sipType_QList_0601QVector_0100QtStackedBar3DVis_QBarDataItem3D,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
         ::QtStackedBar3DVis::QBarDataArray3D* a0;
        int a0State = 0;
        const  ::QStringList* a1;
        int a1State = 0;
        const  ::QStringList* a2;
        int a2State = 0;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ2J1J1", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, sipType_QList_0601QVector_0100QtStackedBar3DVis_QBarDataItem3D,&a0, &a0State, sipType_QStringList,&a1, &a1State, sipType_QStringList,&a2, &a2State))
        {
            sipCpp->resetArray(a0,*a1,*a2);
            sipReleaseType(a0,sipType_QList_0601QVector_0100QtStackedBar3DVis_QBarDataItem3D,a0State);
            sipReleaseType(const_cast< ::QStringList *>(a1),sipType_QStringList,a1State);
            sipReleaseType(const_cast< ::QStringList *>(a2),sipType_QStringList,a2State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBarDataProxy3D, sipName_resetArray, doc_QtStackedBar3DVis_QBarDataProxy3D_resetArray);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D_setRow, "setRow(self, int, object)\n"
"setRow(self, int, object, str)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_setRow(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_setRow(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
         ::QtStackedBar3DVis::QBarDataRow3D* a1;
        int a1State = 0;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ2", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, &a0, sipType_QVector_0100QtStackedBar3DVis_QBarDataItem3D,&a1, &a1State))
        {
            sipCpp->setRow(a0,a1);
            sipReleaseType(a1,sipType_QVector_0100QtStackedBar3DVis_QBarDataItem3D,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        int a0;
         ::QtStackedBar3DVis::QBarDataRow3D* a1;
        int a1State = 0;
        const  ::QString* a2;
        int a2State = 0;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ2J1", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, &a0, sipType_QVector_0100QtStackedBar3DVis_QBarDataItem3D,&a1, &a1State, sipType_QString,&a2, &a2State))
        {
            sipCpp->setRow(a0,a1,*a2);
            sipReleaseType(a1,sipType_QVector_0100QtStackedBar3DVis_QBarDataItem3D,a1State);
            sipReleaseType(const_cast< ::QString *>(a2),sipType_QString,a2State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBarDataProxy3D, sipName_setRow, doc_QtStackedBar3DVis_QBarDataProxy3D_setRow);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D_setRows, "setRows(self, int, object)\n"
"setRows(self, int, object, Iterable[str])");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_setRows(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_setRows(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        const  ::QtStackedBar3DVis::QBarDataArray3D* a1;
        int a1State = 0;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ1", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, &a0, sipType_QList_0601QVector_0100QtStackedBar3DVis_QBarDataItem3D,&a1, &a1State))
        {
            sipCpp->setRows(a0,*a1);
            sipReleaseType(const_cast< ::QtStackedBar3DVis::QBarDataArray3D *>(a1),sipType_QList_0601QVector_0100QtStackedBar3DVis_QBarDataItem3D,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        int a0;
        const  ::QtStackedBar3DVis::QBarDataArray3D* a1;
        int a1State = 0;
        const  ::QStringList* a2;
        int a2State = 0;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ1J1", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, &a0, sipType_QList_0601QVector_0100QtStackedBar3DVis_QBarDataItem3D,&a1, &a1State, sipType_QStringList,&a2, &a2State))
        {
            sipCpp->setRows(a0,*a1,*a2);
            sipReleaseType(const_cast< ::QtStackedBar3DVis::QBarDataArray3D *>(a1),sipType_QList_0601QVector_0100QtStackedBar3DVis_QBarDataItem3D,a1State);
            sipReleaseType(const_cast< ::QStringList *>(a2),sipType_QStringList,a2State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBarDataProxy3D, sipName_setRows, doc_QtStackedBar3DVis_QBarDataProxy3D_setRows);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D_setItem, "setItem(self, int, int, QtStackedBar3DVis.QBarDataItem3D)\n"
"setItem(self, QPoint, QtStackedBar3DVis.QBarDataItem3D)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_setItem(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_setItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        int a1;
        const  ::QtStackedBar3DVis::QBarDataItem3D* a2;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiiJ9", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, &a0, &a1, sipType_QtStackedBar3DVis_QBarDataItem3D, &a2))
        {
            sipCpp->setItem(a0,a1,*a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const  ::QPoint* a0;
        const  ::QtStackedBar3DVis::QBarDataItem3D* a1;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9J9", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, sipType_QPoint, &a0, sipType_QtStackedBar3DVis_QBarDataItem3D, &a1))
        {
            sipCpp->setItem(*a0,*a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBarDataProxy3D, sipName_setItem, doc_QtStackedBar3DVis_QBarDataProxy3D_setItem);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D_addRow, "addRow(self, object) -> int\n"
"addRow(self, object, str) -> int");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_addRow(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_addRow(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QBarDataRow3D* a0;
        int a0State = 0;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ2", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, sipType_QVector_0100QtStackedBar3DVis_QBarDataItem3D,&a0, &a0State))
        {
            int sipRes;

            sipRes = sipCpp->addRow(a0);
            sipReleaseType(a0,sipType_QVector_0100QtStackedBar3DVis_QBarDataItem3D,a0State);

            return SIPLong_FromLong(sipRes);
        }
    }

    {
         ::QtStackedBar3DVis::QBarDataRow3D* a0;
        int a0State = 0;
        const  ::QString* a1;
        int a1State = 0;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ2J1", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, sipType_QVector_0100QtStackedBar3DVis_QBarDataItem3D,&a0, &a0State, sipType_QString,&a1, &a1State))
        {
            int sipRes;

            sipRes = sipCpp->addRow(a0,*a1);
            sipReleaseType(a0,sipType_QVector_0100QtStackedBar3DVis_QBarDataItem3D,a0State);
            sipReleaseType(const_cast< ::QString *>(a1),sipType_QString,a1State);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBarDataProxy3D, sipName_addRow, doc_QtStackedBar3DVis_QBarDataProxy3D_addRow);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D_addRows, "addRows(self, object) -> int\n"
"addRows(self, object, Iterable[str]) -> int");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_addRows(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_addRows(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QBarDataArray3D* a0;
        int a0State = 0;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, sipType_QList_0601QVector_0100QtStackedBar3DVis_QBarDataItem3D,&a0, &a0State))
        {
            int sipRes;

            sipRes = sipCpp->addRows(*a0);
            sipReleaseType(const_cast< ::QtStackedBar3DVis::QBarDataArray3D *>(a0),sipType_QList_0601QVector_0100QtStackedBar3DVis_QBarDataItem3D,a0State);

            return SIPLong_FromLong(sipRes);
        }
    }

    {
        const  ::QtStackedBar3DVis::QBarDataArray3D* a0;
        int a0State = 0;
        const  ::QStringList* a1;
        int a1State = 0;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1J1", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, sipType_QList_0601QVector_0100QtStackedBar3DVis_QBarDataItem3D,&a0, &a0State, sipType_QStringList,&a1, &a1State))
        {
            int sipRes;

            sipRes = sipCpp->addRows(*a0,*a1);
            sipReleaseType(const_cast< ::QtStackedBar3DVis::QBarDataArray3D *>(a0),sipType_QList_0601QVector_0100QtStackedBar3DVis_QBarDataItem3D,a0State);
            sipReleaseType(const_cast< ::QStringList *>(a1),sipType_QStringList,a1State);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBarDataProxy3D, sipName_addRows, doc_QtStackedBar3DVis_QBarDataProxy3D_addRows);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D_insertRow, "insertRow(self, int, object)\n"
"insertRow(self, int, object, str)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_insertRow(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_insertRow(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
         ::QtStackedBar3DVis::QBarDataRow3D* a1;
        int a1State = 0;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ2", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, &a0, sipType_QVector_0100QtStackedBar3DVis_QBarDataItem3D,&a1, &a1State))
        {
            sipCpp->insertRow(a0,a1);
            sipReleaseType(a1,sipType_QVector_0100QtStackedBar3DVis_QBarDataItem3D,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        int a0;
         ::QtStackedBar3DVis::QBarDataRow3D* a1;
        int a1State = 0;
        const  ::QString* a2;
        int a2State = 0;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ2J1", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, &a0, sipType_QVector_0100QtStackedBar3DVis_QBarDataItem3D,&a1, &a1State, sipType_QString,&a2, &a2State))
        {
            sipCpp->insertRow(a0,a1,*a2);
            sipReleaseType(a1,sipType_QVector_0100QtStackedBar3DVis_QBarDataItem3D,a1State);
            sipReleaseType(const_cast< ::QString *>(a2),sipType_QString,a2State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBarDataProxy3D, sipName_insertRow, doc_QtStackedBar3DVis_QBarDataProxy3D_insertRow);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D_insertRows, "insertRows(self, int, object)\n"
"insertRows(self, int, object, Iterable[str])");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_insertRows(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_insertRows(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        const  ::QtStackedBar3DVis::QBarDataArray3D* a1;
        int a1State = 0;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ1", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, &a0, sipType_QList_0601QVector_0100QtStackedBar3DVis_QBarDataItem3D,&a1, &a1State))
        {
            sipCpp->insertRows(a0,*a1);
            sipReleaseType(const_cast< ::QtStackedBar3DVis::QBarDataArray3D *>(a1),sipType_QList_0601QVector_0100QtStackedBar3DVis_QBarDataItem3D,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        int a0;
        const  ::QtStackedBar3DVis::QBarDataArray3D* a1;
        int a1State = 0;
        const  ::QStringList* a2;
        int a2State = 0;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ1J1", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, &a0, sipType_QList_0601QVector_0100QtStackedBar3DVis_QBarDataItem3D,&a1, &a1State, sipType_QStringList,&a2, &a2State))
        {
            sipCpp->insertRows(a0,*a1,*a2);
            sipReleaseType(const_cast< ::QtStackedBar3DVis::QBarDataArray3D *>(a1),sipType_QList_0601QVector_0100QtStackedBar3DVis_QBarDataItem3D,a1State);
            sipReleaseType(const_cast< ::QStringList *>(a2),sipType_QStringList,a2State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBarDataProxy3D, sipName_insertRows, doc_QtStackedBar3DVis_QBarDataProxy3D_insertRows);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D_removeRows, "removeRows(self, int, int, removeLabels: bool = True)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_removeRows(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_removeRows(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        int a1;
        bool a2 = 1;
         ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            sipName_removeLabels,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bii|b", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp, &a0, &a1, &a2))
        {
            sipCpp->removeRows(a0,a1,a2);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBarDataProxy3D, sipName_removeRows, doc_QtStackedBar3DVis_QBarDataProxy3D_removeRows);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D_series, "series(self) -> QtStackedBar3DVis.QBarSeries3D");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_series(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QBarDataProxy3D_series(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QBarDataProxy3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QBarSeries3D*sipRes;

            sipRes = sipCpp->series();

            return sipConvertFromType(sipRes,sipType_QtStackedBar3DVis_QBarSeries3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QBarDataProxy3D, sipName_series, doc_QtStackedBar3DVis_QBarDataProxy3D_series);

    return NULL;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QtStackedBar3DVis_QBarDataProxy3D(void *, const sipTypeDef *);}
static void *cast_QtStackedBar3DVis_QBarDataProxy3D(void *sipCppV, const sipTypeDef *targetType)
{
     ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QBarDataProxy3D *>(sipCppV);

    if (targetType == sipType_QtStackedBar3DVis_QAbstractDataProxy3D)
        return static_cast< ::QtStackedBar3DVis::QAbstractDataProxy3D *>(sipCpp);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QtStackedBar3DVis_QBarDataProxy3D(void *, int);}
static void release_QtStackedBar3DVis_QBarDataProxy3D(void *sipCppV, int)
{
     ::QtStackedBar3DVis::QBarDataProxy3D *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QBarDataProxy3D *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QtStackedBar3DVis_QBarDataProxy3D(sipSimpleWrapper *);}
static void dealloc_QtStackedBar3DVis_QBarDataProxy3D(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQtStackedBar3DVis_QBarDataProxy3D *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QtStackedBar3DVis_QBarDataProxy3D(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QtStackedBar3DVis_QBarDataProxy3D(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QtStackedBar3DVis_QBarDataProxy3D(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQtStackedBar3DVis_QBarDataProxy3D *sipCpp = 0;

    {
         ::QObject* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QObject, &a0, sipOwner))
        {
            sipCpp = new sipQtStackedBar3DVis_QBarDataProxy3D(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QtStackedBar3DVis_QBarDataProxy3D[] = {{15, 255, 1}};


static PyMethodDef methods_QtStackedBar3DVis_QBarDataProxy3D[] = {
    {SIP_MLNAME_CAST(sipName_addRow), meth_QtStackedBar3DVis_QBarDataProxy3D_addRow, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QBarDataProxy3D_addRow)},
    {SIP_MLNAME_CAST(sipName_addRows), meth_QtStackedBar3DVis_QBarDataProxy3D_addRows, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QBarDataProxy3D_addRows)},
    {SIP_MLNAME_CAST(sipName_array), meth_QtStackedBar3DVis_QBarDataProxy3D_array, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QBarDataProxy3D_array)},
    {SIP_MLNAME_CAST(sipName_columnLabels), meth_QtStackedBar3DVis_QBarDataProxy3D_columnLabels, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QBarDataProxy3D_columnLabels)},
    {SIP_MLNAME_CAST(sipName_insertRow), meth_QtStackedBar3DVis_QBarDataProxy3D_insertRow, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QBarDataProxy3D_insertRow)},
    {SIP_MLNAME_CAST(sipName_insertRows), meth_QtStackedBar3DVis_QBarDataProxy3D_insertRows, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QBarDataProxy3D_insertRows)},
    {SIP_MLNAME_CAST(sipName_itemAt), meth_QtStackedBar3DVis_QBarDataProxy3D_itemAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QBarDataProxy3D_itemAt)},
    {SIP_MLNAME_CAST(sipName_removeRows), (PyCFunction)meth_QtStackedBar3DVis_QBarDataProxy3D_removeRows, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QBarDataProxy3D_removeRows)},
    {SIP_MLNAME_CAST(sipName_resetArray), meth_QtStackedBar3DVis_QBarDataProxy3D_resetArray, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QBarDataProxy3D_resetArray)},
    {SIP_MLNAME_CAST(sipName_rowAt), meth_QtStackedBar3DVis_QBarDataProxy3D_rowAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QBarDataProxy3D_rowAt)},
    {SIP_MLNAME_CAST(sipName_rowCount), meth_QtStackedBar3DVis_QBarDataProxy3D_rowCount, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QBarDataProxy3D_rowCount)},
    {SIP_MLNAME_CAST(sipName_rowLabels), meth_QtStackedBar3DVis_QBarDataProxy3D_rowLabels, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QBarDataProxy3D_rowLabels)},
    {SIP_MLNAME_CAST(sipName_series), meth_QtStackedBar3DVis_QBarDataProxy3D_series, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QBarDataProxy3D_series)},
    {SIP_MLNAME_CAST(sipName_setColumnLabels), meth_QtStackedBar3DVis_QBarDataProxy3D_setColumnLabels, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QBarDataProxy3D_setColumnLabels)},
    {SIP_MLNAME_CAST(sipName_setItem), meth_QtStackedBar3DVis_QBarDataProxy3D_setItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QBarDataProxy3D_setItem)},
    {SIP_MLNAME_CAST(sipName_setRow), meth_QtStackedBar3DVis_QBarDataProxy3D_setRow, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QBarDataProxy3D_setRow)},
    {SIP_MLNAME_CAST(sipName_setRowLabels), meth_QtStackedBar3DVis_QBarDataProxy3D_setRowLabels, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QBarDataProxy3D_setRowLabels)},
    {SIP_MLNAME_CAST(sipName_setRows), meth_QtStackedBar3DVis_QBarDataProxy3D_setRows, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QBarDataProxy3D_setRows)}
};

PyDoc_STRVAR(doc_QtStackedBar3DVis_QBarDataProxy3D, "\1QtStackedBar3DVis.QBarDataProxy3D(parent: QObject = None)");


/* Define this type's signals. */
static const pyqt5QtSignal signals_QtStackedBar3DVis_QBarDataProxy3D[] = {
    {"seriesChanged(QBarSeries3D*)|(QtStackedBar3DVis::QBarSeries3D*)", "\1seriesChanged(self, QtStackedBar3DVis.QBarSeries3D)", 0, 0},
    {"columnLabelsChanged()", "\1columnLabelsChanged(self)", 0, 0},
    {"rowLabelsChanged()", "\1rowLabelsChanged(self)", 0, 0},
    {"rowCountChanged(int)", "\1rowCountChanged(self, int)", 0, 0},
    {"itemChanged(int,int)", "\1itemChanged(self, int, int)", 0, 0},
    {"rowsInserted(int,int)", "\1rowsInserted(self, int, int)", 0, 0},
    {"rowsRemoved(int,int)", "\1rowsRemoved(self, int, int)", 0, 0},
    {"rowsChanged(int,int)", "\1rowsChanged(self, int, int)", 0, 0},
    {"rowsAdded(int,int)", "\1rowsAdded(self, int, int)", 0, 0},
    {"arrayReset()", "\1arrayReset(self)", 0, 0},
    {0, 0, 0, 0}
};


static pyqt5ClassPluginDef plugin_QtStackedBar3DVis_QBarDataProxy3D = {
    & ::QtStackedBar3DVis::QBarDataProxy3D::staticMetaObject,
    0,
    signals_QtStackedBar3DVis_QBarDataProxy3D,
    0
};


sipClassTypeDef sipTypeDef_QtStackedBars3D_QtStackedBar3DVis_QBarDataProxy3D = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QtStackedBar3DVis__QBarDataProxy3D,
        {0},
        &plugin_QtStackedBar3DVis_QBarDataProxy3D
    },
    {
        sipNameNr_QBarDataProxy3D,
        {11, 255, 0},
        18, methods_QtStackedBar3DVis_QBarDataProxy3D,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QtStackedBar3DVis_QBarDataProxy3D,
    -1,
    -1,
    supers_QtStackedBar3DVis_QBarDataProxy3D,
    0,
    init_type_QtStackedBar3DVis_QBarDataProxy3D,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QtStackedBar3DVis_QBarDataProxy3D,
    0,
    0,
    0,
    release_QtStackedBar3DVis_QBarDataProxy3D,
    cast_QtStackedBar3DVis_QBarDataProxy3D,
    0,
    0,
    0,
    0,
    0,
    0
};
