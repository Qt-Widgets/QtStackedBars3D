/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.12
 *
 * Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQtStackedBars3D.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtStackedBars3D.h"

#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 32 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 47 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"

#line 30 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qvector3d.sip"
#include <qvector3d.h>
#line 51 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qlocale.sip"
#include <qlocale.h>
#line 54 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 149 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 57 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 26 "sip/QtStackedBars3D/qabstractinputhandler3d.sip"
#include <QAbstractInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qabstractseries3d.sip"
#include <QAbstractSeries3D.h>
#line 26 "sip/QtStackedBars3D/qabstractdataproxy3d.sip"
#include <QAbstractDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qbarseries3d.sip"
#include <QBarSeries3D.h>
#line 26 "sip/QtStackedBars3D/qbardataitem3d.sip"
#include <QBarDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qbardataproxy3d.sip"
#include <QBarDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qcategoryaxis3d.sip"
#include <QCategoryAxis3D.h>
#line 26 "sip/QtStackedBars3D/qcustomitem3d.sip"
#include <QCustomItem3D.h>
#line 32 "sip/QtStackedBars3D/qcustomitem3d.sip"
#include <QCustomItem3D.h>
#line 94 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 32 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 115 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qimage.sip"
#include <qimage.h>
#line 118 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qsize.sip"
#include <qsize.h>
#line 121 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 32 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 140 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 253 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 143 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 205 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 146 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 714 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 149 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 783 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 152 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 413 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 155 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 158 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 32 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 179 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 32 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 196 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 26 "sip/QtStackedBars3D/qabstractinputhandler3d.sip"
#include <QAbstractInputHandler3D.h>
#line 32 "sip/QtStackedBars3D/qabstractinputhandler3d.sip"
#include <QAbstractInputHandler3D.h>
#line 219 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 32 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 234 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 149 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 237 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 149 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 240 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 243 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 246 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qwindow.sip"
#include <qwindow.h>
#line 249 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 189 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qglobal.sip"
#include <QtGlobal>
#line 252 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qregion.sip"
#include <qregion.h>
#line 255 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 293 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 258 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 351 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 261 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 459 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 264 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 448 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 267 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 372 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 270 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 400 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qevent.sip"
#include <qevent.h>
#line 273 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 27 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qstring.sip"
#include <qstring.h>
#line 276 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 28 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qobject.sip"
#include <qobject.h>
#line 279 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qscreen.sip"
#include <qscreen.h>
#line 282 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qcursor.sip"
#include <qcursor.h>
#line 285 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qpoint.sip"
#include <qpoint.h>
#line 288 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qicon.sip"
#include <qicon.h>
#line 291 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qrect.sip"
#include <qrect.h>
#line 294 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qmargins.sip"
#include <qmargins.h>
#line 297 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 300 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qsurfaceformat.sip"
#include <qsurfaceformat.h>
#line 303 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qsurface.sip"
#include <qsurface.h>
#line 306 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 309 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 247 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 312 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 235 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 315 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qvariant.sip"
#include <qvariant.h>
#line 318 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 38 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 321 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 30 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 324 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 149 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 327 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qthread.sip"
#include <qthread.h>
#line 330 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 333 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qregexp.sip"
#include <qregexp.h>
#line 336 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 339 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 342 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractGraph3D.cpp"


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_addInputHandler, "addInputHandler(self, QtStackedBar3DVis.QAbstractInputHandler3D)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_addInputHandler(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_addInputHandler(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QAbstractInputHandler3D* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &a0))
        {
            sipCpp->addInputHandler(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_addInputHandler, doc_QtStackedBar3DVis_QAbstractGraph3D_addInputHandler);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_releaseInputHandler, "releaseInputHandler(self, QtStackedBar3DVis.QAbstractInputHandler3D)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_releaseInputHandler(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_releaseInputHandler(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QAbstractInputHandler3D* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ<", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &a0))
        {
            sipCpp->releaseInputHandler(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_releaseInputHandler, doc_QtStackedBar3DVis_QAbstractGraph3D_releaseInputHandler);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_setActiveInputHandler, "setActiveInputHandler(self, QtStackedBar3DVis.QAbstractInputHandler3D)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setActiveInputHandler(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setActiveInputHandler(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QAbstractInputHandler3D* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QtStackedBar3DVis_QAbstractInputHandler3D, &a0))
        {
            sipCpp->setActiveInputHandler(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_setActiveInputHandler, doc_QtStackedBar3DVis_QAbstractGraph3D_setActiveInputHandler);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_inputHandlers, "inputHandlers(self) -> object");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_inputHandlers(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_inputHandlers(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
            QList< ::QtStackedBar3DVis::QAbstractInputHandler3D*>*sipRes;

            sipRes = new QList< ::QtStackedBar3DVis::QAbstractInputHandler3D*>(sipCpp->inputHandlers());

            return sipConvertFromNewType(sipRes,sipType_QList_0101QtStackedBar3DVis_QAbstractInputHandler3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_inputHandlers, doc_QtStackedBar3DVis_QAbstractGraph3D_inputHandlers);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_addTheme, "addTheme(self, QtStackedBar3DVis.QTheme3D)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_addTheme(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_addTheme(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QTheme3D* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QtStackedBar3DVis_QTheme3D, &a0))
        {
            sipCpp->addTheme(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_addTheme, doc_QtStackedBar3DVis_QAbstractGraph3D_addTheme);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_releaseTheme, "releaseTheme(self, QtStackedBar3DVis.QTheme3D)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_releaseTheme(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_releaseTheme(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QTheme3D* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ<", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QtStackedBar3DVis_QTheme3D, &a0))
        {
            sipCpp->releaseTheme(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_releaseTheme, doc_QtStackedBar3DVis_QAbstractGraph3D_releaseTheme);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_setActiveTheme, "setActiveTheme(self, QtStackedBar3DVis.QTheme3D)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setActiveTheme(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setActiveTheme(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QTheme3D* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QtStackedBar3DVis_QTheme3D, &a0))
        {
            sipCpp->setActiveTheme(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_setActiveTheme, doc_QtStackedBar3DVis_QAbstractGraph3D_setActiveTheme);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_activeTheme, "activeTheme(self) -> QtStackedBar3DVis.QTheme3D");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_activeTheme(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_activeTheme(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QTheme3D*sipRes;

            sipRes = sipCpp->activeTheme();

            return sipConvertFromType(sipRes,sipType_QtStackedBar3DVis_QTheme3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_activeTheme, doc_QtStackedBar3DVis_QAbstractGraph3D_activeTheme);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_themes, "themes(self) -> object");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_themes(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_themes(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
            QList< ::QtStackedBar3DVis::QTheme3D*>*sipRes;

            sipRes = new QList< ::QtStackedBar3DVis::QTheme3D*>(sipCpp->themes());

            return sipConvertFromNewType(sipRes,sipType_QList_0101QtStackedBar3DVis_QTheme3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_themes, doc_QtStackedBar3DVis_QAbstractGraph3D_themes);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_setSelectionMode, "setSelectionMode(self, Union[QtStackedBar3DVis.QAbstractGraph3D.SelectionFlags, QtStackedBar3DVis.QAbstractGraph3D.SelectionFlag])");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setSelectionMode(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setSelectionMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QAbstractGraph3D::SelectionFlags* a0;
        int a0State = 0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QtStackedBar3DVis_QAbstractGraph3D_SelectionFlags, &a0, &a0State))
        {
            sipCpp->setSelectionMode(*a0);
            sipReleaseType(a0,sipType_QtStackedBar3DVis_QAbstractGraph3D_SelectionFlags,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_setSelectionMode, doc_QtStackedBar3DVis_QAbstractGraph3D_setSelectionMode);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_selectionMode, "selectionMode(self) -> QtStackedBar3DVis.QAbstractGraph3D.SelectionFlags");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_selectionMode(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_selectionMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QAbstractGraph3D::SelectionFlags*sipRes;

            sipRes = new  ::QtStackedBar3DVis::QAbstractGraph3D::SelectionFlags(sipCpp->selectionMode());

            return sipConvertFromNewType(sipRes,sipType_QtStackedBar3DVis_QAbstractGraph3D_SelectionFlags,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_selectionMode, doc_QtStackedBar3DVis_QAbstractGraph3D_selectionMode);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_setShadowQuality, "setShadowQuality(self, QtStackedBar3DVis.QAbstractGraph3D.ShadowQuality)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setShadowQuality(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setShadowQuality(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QAbstractGraph3D::ShadowQuality a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QtStackedBar3DVis_QAbstractGraph3D_ShadowQuality, &a0))
        {
            sipCpp->setShadowQuality(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_setShadowQuality, doc_QtStackedBar3DVis_QAbstractGraph3D_setShadowQuality);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_shadowQuality, "shadowQuality(self) -> QtStackedBar3DVis.QAbstractGraph3D.ShadowQuality");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_shadowQuality(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_shadowQuality(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QAbstractGraph3D::ShadowQuality sipRes;

            sipRes = sipCpp->shadowQuality();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QtStackedBar3DVis_QAbstractGraph3D_ShadowQuality);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_shadowQuality, doc_QtStackedBar3DVis_QAbstractGraph3D_shadowQuality);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_scene, "scene(self) -> QtStackedBar3DVis.QScene3D");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_scene(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_scene(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QScene3D*sipRes;

            sipRes = sipCpp->scene();

            return sipConvertFromType(sipRes,sipType_QtStackedBar3DVis_QScene3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_scene, doc_QtStackedBar3DVis_QAbstractGraph3D_scene);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_clearSelection, "clearSelection(self)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_clearSelection(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_clearSelection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
            sipCpp->clearSelection();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_clearSelection, doc_QtStackedBar3DVis_QAbstractGraph3D_clearSelection);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_activeInputHandler, "activeInputHandler(self) -> QtStackedBar3DVis.QAbstractInputHandler3D");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_activeInputHandler(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_activeInputHandler(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QAbstractInputHandler3D*sipRes;

            sipRes = sipCpp->activeInputHandler();

            return sipConvertFromType(sipRes,sipType_QtStackedBar3DVis_QAbstractInputHandler3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_activeInputHandler, doc_QtStackedBar3DVis_QAbstractGraph3D_activeInputHandler);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_shadowsSupported, "shadowsSupported(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_shadowsSupported(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_shadowsSupported(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAbstractGraph3D::shadowsSupported() : sipCpp->shadowsSupported());

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_shadowsSupported, doc_QtStackedBar3DVis_QAbstractGraph3D_shadowsSupported);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_event, "event(self, QEvent) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_event(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_event(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QEvent* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAbstractGraph3D::event(a0) : sipCpp->event(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_event, doc_QtStackedBar3DVis_QAbstractGraph3D_event);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_resizeEvent, "resizeEvent(self, QResizeEvent)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_resizeEvent(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_resizeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QResizeEvent* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QResizeEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAbstractGraph3D::resizeEvent(a0) : sipCpp->resizeEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_resizeEvent, doc_QtStackedBar3DVis_QAbstractGraph3D_resizeEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_exposeEvent, "exposeEvent(self, QExposeEvent)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_exposeEvent(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_exposeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QExposeEvent* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QExposeEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAbstractGraph3D::exposeEvent(a0) : sipCpp->exposeEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_exposeEvent, doc_QtStackedBar3DVis_QAbstractGraph3D_exposeEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_mouseDoubleClickEvent, "mouseDoubleClickEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_mouseDoubleClickEvent(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAbstractGraph3D::mouseDoubleClickEvent(a0) : sipCpp->mouseDoubleClickEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_mouseDoubleClickEvent, doc_QtStackedBar3DVis_QAbstractGraph3D_mouseDoubleClickEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_touchEvent, "touchEvent(self, QTouchEvent)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_touchEvent(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_touchEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QTouchEvent* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QTouchEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAbstractGraph3D::touchEvent(a0) : sipCpp->touchEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_touchEvent, doc_QtStackedBar3DVis_QAbstractGraph3D_touchEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_mousePressEvent, "mousePressEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_mousePressEvent(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAbstractGraph3D::mousePressEvent(a0) : sipCpp->mousePressEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_mousePressEvent, doc_QtStackedBar3DVis_QAbstractGraph3D_mousePressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_mouseReleaseEvent, "mouseReleaseEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_mouseReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAbstractGraph3D::mouseReleaseEvent(a0) : sipCpp->mouseReleaseEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_mouseReleaseEvent, doc_QtStackedBar3DVis_QAbstractGraph3D_mouseReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_mouseMoveEvent, "mouseMoveEvent(self, QMouseEvent)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_mouseMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QMouseEvent* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QMouseEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAbstractGraph3D::mouseMoveEvent(a0) : sipCpp->mouseMoveEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_mouseMoveEvent, doc_QtStackedBar3DVis_QAbstractGraph3D_mouseMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_wheelEvent, "wheelEvent(self, QWheelEvent)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_wheelEvent(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_wheelEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QWheelEvent* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QWheelEvent, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAbstractGraph3D::wheelEvent(a0) : sipCpp->wheelEvent(a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_wheelEvent, doc_QtStackedBar3DVis_QAbstractGraph3D_wheelEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_addCustomItem, "addCustomItem(self, QtStackedBar3DVis.QCustomItem3D) -> int");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_addCustomItem(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_addCustomItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QCustomItem3D* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QtStackedBar3DVis_QCustomItem3D, &a0))
        {
            int sipRes;

            sipRes = sipCpp->addCustomItem(a0);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_addCustomItem, doc_QtStackedBar3DVis_QAbstractGraph3D_addCustomItem);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_removeCustomItems, "removeCustomItems(self)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_removeCustomItems(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_removeCustomItems(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
            sipCpp->removeCustomItems();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_removeCustomItems, doc_QtStackedBar3DVis_QAbstractGraph3D_removeCustomItems);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_removeCustomItem, "removeCustomItem(self, QtStackedBar3DVis.QCustomItem3D)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_removeCustomItem(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_removeCustomItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QCustomItem3D* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QtStackedBar3DVis_QCustomItem3D, &a0))
        {
            sipCpp->removeCustomItem(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_removeCustomItem, doc_QtStackedBar3DVis_QAbstractGraph3D_removeCustomItem);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_removeCustomItemAt, "removeCustomItemAt(self, QVector3D)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_removeCustomItemAt(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_removeCustomItemAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QVector3D* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QVector3D, &a0))
        {
            sipCpp->removeCustomItemAt(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_removeCustomItemAt, doc_QtStackedBar3DVis_QAbstractGraph3D_removeCustomItemAt);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_releaseCustomItem, "releaseCustomItem(self, QtStackedBar3DVis.QCustomItem3D)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_releaseCustomItem(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_releaseCustomItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QCustomItem3D* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ<", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QtStackedBar3DVis_QCustomItem3D, &a0))
        {
            sipCpp->releaseCustomItem(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_releaseCustomItem, doc_QtStackedBar3DVis_QAbstractGraph3D_releaseCustomItem);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_selectedLabelIndex, "selectedLabelIndex(self) -> int");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_selectedLabelIndex(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_selectedLabelIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->selectedLabelIndex();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_selectedLabelIndex, doc_QtStackedBar3DVis_QAbstractGraph3D_selectedLabelIndex);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_selectedAxis, "selectedAxis(self) -> QtStackedBar3DVis.QAbstractAxis3D");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_selectedAxis(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_selectedAxis(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QAbstractAxis3D*sipRes;

            sipRes = sipCpp->selectedAxis();

            return sipConvertFromType(sipRes,sipType_QtStackedBar3DVis_QAbstractAxis3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_selectedAxis, doc_QtStackedBar3DVis_QAbstractGraph3D_selectedAxis);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_selectedCustomItemIndex, "selectedCustomItemIndex(self) -> int");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_selectedCustomItemIndex(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_selectedCustomItemIndex(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->selectedCustomItemIndex();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_selectedCustomItemIndex, doc_QtStackedBar3DVis_QAbstractGraph3D_selectedCustomItemIndex);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_selectedCustomItem, "selectedCustomItem(self) -> QtStackedBar3DVis.QCustomItem3D");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_selectedCustomItem(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_selectedCustomItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QCustomItem3D*sipRes;

            sipRes = sipCpp->selectedCustomItem();

            return sipConvertFromType(sipRes,sipType_QtStackedBar3DVis_QCustomItem3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_selectedCustomItem, doc_QtStackedBar3DVis_QAbstractGraph3D_selectedCustomItem);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_renderToImage, "renderToImage(self, msaaSamples: int = 0, imageSize: QSize = QSize()) -> QImage");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_renderToImage(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_renderToImage(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        int a0 = 0;
        const  ::QSize& a1def = QSize();
        const  ::QSize* a1 = &a1def;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        static const char *sipKwdList[] = {
            sipName_msaaSamples,
            sipName_imageSize,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|iJ9", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, &a0, sipType_QSize, &a1))
        {
             ::QImage*sipRes;

            sipRes = new  ::QImage(sipCpp->renderToImage(a0,*a1));

            return sipConvertFromNewType(sipRes,sipType_QImage,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_renderToImage, doc_QtStackedBar3DVis_QAbstractGraph3D_renderToImage);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_setMeasureFps, "setMeasureFps(self, bool)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setMeasureFps(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setMeasureFps(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, &a0))
        {
            sipCpp->setMeasureFps(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_setMeasureFps, doc_QtStackedBar3DVis_QAbstractGraph3D_setMeasureFps);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_measureFps, "measureFps(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_measureFps(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_measureFps(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->measureFps();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_measureFps, doc_QtStackedBar3DVis_QAbstractGraph3D_measureFps);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_currentFps, "currentFps(self) -> float");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_currentFps(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_currentFps(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->currentFps();

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_currentFps, doc_QtStackedBar3DVis_QAbstractGraph3D_currentFps);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_setOrthoProjection, "setOrthoProjection(self, bool)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setOrthoProjection(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setOrthoProjection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, &a0))
        {
            sipCpp->setOrthoProjection(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_setOrthoProjection, doc_QtStackedBar3DVis_QAbstractGraph3D_setOrthoProjection);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_isOrthoProjection, "isOrthoProjection(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_isOrthoProjection(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_isOrthoProjection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isOrthoProjection();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_isOrthoProjection, doc_QtStackedBar3DVis_QAbstractGraph3D_isOrthoProjection);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_selectedElement, "selectedElement(self) -> QtStackedBar3DVis.QAbstractGraph3D.ElementType");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_selectedElement(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_selectedElement(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QAbstractGraph3D::ElementType sipRes;

            sipRes = sipCpp->selectedElement();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QtStackedBar3DVis_QAbstractGraph3D_ElementType);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_selectedElement, doc_QtStackedBar3DVis_QAbstractGraph3D_selectedElement);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_setAspectRatio, "setAspectRatio(self, float)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setAspectRatio(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setAspectRatio(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, &a0))
        {
            sipCpp->setAspectRatio(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_setAspectRatio, doc_QtStackedBar3DVis_QAbstractGraph3D_setAspectRatio);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_aspectRatio, "aspectRatio(self) -> float");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_aspectRatio(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_aspectRatio(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->aspectRatio();

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_aspectRatio, doc_QtStackedBar3DVis_QAbstractGraph3D_aspectRatio);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_setOptimizationHints, "setOptimizationHints(self, Union[QtStackedBar3DVis.QAbstractGraph3D.OptimizationHints, QtStackedBar3DVis.QAbstractGraph3D.OptimizationHint])");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setOptimizationHints(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setOptimizationHints(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QAbstractGraph3D::OptimizationHints* a0;
        int a0State = 0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QtStackedBar3DVis_QAbstractGraph3D_OptimizationHints, &a0, &a0State))
        {
            sipCpp->setOptimizationHints(*a0);
            sipReleaseType(a0,sipType_QtStackedBar3DVis_QAbstractGraph3D_OptimizationHints,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_setOptimizationHints, doc_QtStackedBar3DVis_QAbstractGraph3D_setOptimizationHints);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_optimizationHints, "optimizationHints(self) -> QtStackedBar3DVis.QAbstractGraph3D.OptimizationHints");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_optimizationHints(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_optimizationHints(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QAbstractGraph3D::OptimizationHints*sipRes;

            sipRes = new  ::QtStackedBar3DVis::QAbstractGraph3D::OptimizationHints(sipCpp->optimizationHints());

            return sipConvertFromNewType(sipRes,sipType_QtStackedBar3DVis_QAbstractGraph3D_OptimizationHints,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_optimizationHints, doc_QtStackedBar3DVis_QAbstractGraph3D_optimizationHints);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_customItems, "customItems(self) -> object");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_customItems(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_customItems(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
            QList< ::QtStackedBar3DVis::QCustomItem3D*>*sipRes;

            sipRes = new QList< ::QtStackedBar3DVis::QCustomItem3D*>(sipCpp->customItems());

            return sipConvertFromNewType(sipRes,sipType_QList_0101QtStackedBar3DVis_QCustomItem3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_customItems, doc_QtStackedBar3DVis_QAbstractGraph3D_customItems);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_setPolar, "setPolar(self, bool)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setPolar(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setPolar(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, &a0))
        {
            sipCpp->setPolar(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_setPolar, doc_QtStackedBar3DVis_QAbstractGraph3D_setPolar);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_isPolar, "isPolar(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_isPolar(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_isPolar(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isPolar();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_isPolar, doc_QtStackedBar3DVis_QAbstractGraph3D_isPolar);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_setRadialLabelOffset, "setRadialLabelOffset(self, float)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setRadialLabelOffset(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setRadialLabelOffset(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        float a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, &a0))
        {
            sipCpp->setRadialLabelOffset(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_setRadialLabelOffset, doc_QtStackedBar3DVis_QAbstractGraph3D_setRadialLabelOffset);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_radialLabelOffset, "radialLabelOffset(self) -> float");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_radialLabelOffset(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_radialLabelOffset(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
            float sipRes;

            sipRes = sipCpp->radialLabelOffset();

            return PyFloat_FromDouble((double)sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_radialLabelOffset, doc_QtStackedBar3DVis_QAbstractGraph3D_radialLabelOffset);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_setHorizontalAspectRatio, "setHorizontalAspectRatio(self, float)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setHorizontalAspectRatio(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setHorizontalAspectRatio(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, &a0))
        {
            sipCpp->setHorizontalAspectRatio(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_setHorizontalAspectRatio, doc_QtStackedBar3DVis_QAbstractGraph3D_setHorizontalAspectRatio);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_horizontalAspectRatio, "horizontalAspectRatio(self) -> float");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_horizontalAspectRatio(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_horizontalAspectRatio(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->horizontalAspectRatio();

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_horizontalAspectRatio, doc_QtStackedBar3DVis_QAbstractGraph3D_horizontalAspectRatio);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_setReflection, "setReflection(self, bool)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setReflection(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setReflection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, &a0))
        {
            sipCpp->setReflection(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_setReflection, doc_QtStackedBar3DVis_QAbstractGraph3D_setReflection);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_isReflection, "isReflection(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_isReflection(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_isReflection(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isReflection();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_isReflection, doc_QtStackedBar3DVis_QAbstractGraph3D_isReflection);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_setReflectivity, "setReflectivity(self, float)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setReflectivity(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setReflectivity(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, &a0))
        {
            sipCpp->setReflectivity(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_setReflectivity, doc_QtStackedBar3DVis_QAbstractGraph3D_setReflectivity);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_reflectivity, "reflectivity(self) -> float");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_reflectivity(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_reflectivity(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->reflectivity();

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_reflectivity, doc_QtStackedBar3DVis_QAbstractGraph3D_reflectivity);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_setLocale, "setLocale(self, QLocale)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setLocale(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setLocale(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QLocale* a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, sipType_QLocale, &a0))
        {
            sipCpp->setLocale(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_setLocale, doc_QtStackedBar3DVis_QAbstractGraph3D_setLocale);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_locale, "locale(self) -> QLocale");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_locale(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_locale(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
             ::QLocale*sipRes;

            sipRes = new  ::QLocale(sipCpp->locale());

            return sipConvertFromNewType(sipRes,sipType_QLocale,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_locale, doc_QtStackedBar3DVis_QAbstractGraph3D_locale);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_queriedGraphPosition, "queriedGraphPosition(self) -> QVector3D");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_queriedGraphPosition(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_queriedGraphPosition(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
             ::QVector3D*sipRes;

            sipRes = new  ::QVector3D(sipCpp->queriedGraphPosition());

            return sipConvertFromNewType(sipRes,sipType_QVector3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_queriedGraphPosition, doc_QtStackedBar3DVis_QAbstractGraph3D_queriedGraphPosition);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_setMargin, "setMargin(self, float)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setMargin(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_setMargin(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::qreal a0;
         ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp, &a0))
        {
            sipCpp->setMargin(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_setMargin, doc_QtStackedBar3DVis_QAbstractGraph3D_setMargin);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_margin, "margin(self) -> float");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_margin(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_margin(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
             ::qreal sipRes;

            sipRes = sipCpp->margin();

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_margin, doc_QtStackedBar3DVis_QAbstractGraph3D_margin);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractGraph3D_hasContext, "hasContext(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_hasContext(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractGraph3D_hasContext(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractGraph3D, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->hasContext();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractGraph3D, sipName_hasContext, doc_QtStackedBar3DVis_QAbstractGraph3D_hasContext);

    return NULL;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QtStackedBar3DVis_QAbstractGraph3D(void *, const sipTypeDef *);}
static void *cast_QtStackedBar3DVis_QAbstractGraph3D(void *sipCppV, const sipTypeDef *targetType)
{
     ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QAbstractGraph3D *>(sipCppV);

    if (targetType == sipType_QWindow)
        return static_cast< ::QWindow *>(sipCpp);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    if (targetType == sipType_QSurface)
        return static_cast< ::QSurface *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QtStackedBar3DVis_QAbstractGraph3D(void *, int);}
static void release_QtStackedBar3DVis_QAbstractGraph3D(void *sipCppV, int)
{
     ::QtStackedBar3DVis::QAbstractGraph3D *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QAbstractGraph3D *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QtStackedBar3DVis_QAbstractGraph3D(sipSimpleWrapper *);}
static void dealloc_QtStackedBar3DVis_QAbstractGraph3D(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QtStackedBar3DVis_QAbstractGraph3D(sipGetAddress(sipSelf), 0);
    }
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QtStackedBar3DVis_QAbstractGraph3D[] = {{21, 1, 1}};


static PyMethodDef methods_QtStackedBar3DVis_QAbstractGraph3D[] = {
    {SIP_MLNAME_CAST(sipName_activeInputHandler), meth_QtStackedBar3DVis_QAbstractGraph3D_activeInputHandler, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_activeInputHandler)},
    {SIP_MLNAME_CAST(sipName_activeTheme), meth_QtStackedBar3DVis_QAbstractGraph3D_activeTheme, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_activeTheme)},
    {SIP_MLNAME_CAST(sipName_addCustomItem), meth_QtStackedBar3DVis_QAbstractGraph3D_addCustomItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_addCustomItem)},
    {SIP_MLNAME_CAST(sipName_addInputHandler), meth_QtStackedBar3DVis_QAbstractGraph3D_addInputHandler, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_addInputHandler)},
    {SIP_MLNAME_CAST(sipName_addTheme), meth_QtStackedBar3DVis_QAbstractGraph3D_addTheme, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_addTheme)},
    {SIP_MLNAME_CAST(sipName_aspectRatio), meth_QtStackedBar3DVis_QAbstractGraph3D_aspectRatio, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_aspectRatio)},
    {SIP_MLNAME_CAST(sipName_clearSelection), meth_QtStackedBar3DVis_QAbstractGraph3D_clearSelection, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_clearSelection)},
    {SIP_MLNAME_CAST(sipName_currentFps), meth_QtStackedBar3DVis_QAbstractGraph3D_currentFps, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_currentFps)},
    {SIP_MLNAME_CAST(sipName_customItems), meth_QtStackedBar3DVis_QAbstractGraph3D_customItems, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_customItems)},
    {SIP_MLNAME_CAST(sipName_event), meth_QtStackedBar3DVis_QAbstractGraph3D_event, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_event)},
    {SIP_MLNAME_CAST(sipName_exposeEvent), meth_QtStackedBar3DVis_QAbstractGraph3D_exposeEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_exposeEvent)},
    {SIP_MLNAME_CAST(sipName_hasContext), meth_QtStackedBar3DVis_QAbstractGraph3D_hasContext, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_hasContext)},
    {SIP_MLNAME_CAST(sipName_horizontalAspectRatio), meth_QtStackedBar3DVis_QAbstractGraph3D_horizontalAspectRatio, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_horizontalAspectRatio)},
    {SIP_MLNAME_CAST(sipName_inputHandlers), meth_QtStackedBar3DVis_QAbstractGraph3D_inputHandlers, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_inputHandlers)},
    {SIP_MLNAME_CAST(sipName_isOrthoProjection), meth_QtStackedBar3DVis_QAbstractGraph3D_isOrthoProjection, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_isOrthoProjection)},
    {SIP_MLNAME_CAST(sipName_isPolar), meth_QtStackedBar3DVis_QAbstractGraph3D_isPolar, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_isPolar)},
    {SIP_MLNAME_CAST(sipName_isReflection), meth_QtStackedBar3DVis_QAbstractGraph3D_isReflection, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_isReflection)},
    {SIP_MLNAME_CAST(sipName_locale), meth_QtStackedBar3DVis_QAbstractGraph3D_locale, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_locale)},
    {SIP_MLNAME_CAST(sipName_margin), meth_QtStackedBar3DVis_QAbstractGraph3D_margin, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_margin)},
    {SIP_MLNAME_CAST(sipName_measureFps), meth_QtStackedBar3DVis_QAbstractGraph3D_measureFps, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_measureFps)},
    {SIP_MLNAME_CAST(sipName_mouseDoubleClickEvent), meth_QtStackedBar3DVis_QAbstractGraph3D_mouseDoubleClickEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_mouseDoubleClickEvent)},
    {SIP_MLNAME_CAST(sipName_mouseMoveEvent), meth_QtStackedBar3DVis_QAbstractGraph3D_mouseMoveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_mouseMoveEvent)},
    {SIP_MLNAME_CAST(sipName_mousePressEvent), meth_QtStackedBar3DVis_QAbstractGraph3D_mousePressEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_mousePressEvent)},
    {SIP_MLNAME_CAST(sipName_mouseReleaseEvent), meth_QtStackedBar3DVis_QAbstractGraph3D_mouseReleaseEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_mouseReleaseEvent)},
    {SIP_MLNAME_CAST(sipName_optimizationHints), meth_QtStackedBar3DVis_QAbstractGraph3D_optimizationHints, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_optimizationHints)},
    {SIP_MLNAME_CAST(sipName_queriedGraphPosition), meth_QtStackedBar3DVis_QAbstractGraph3D_queriedGraphPosition, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_queriedGraphPosition)},
    {SIP_MLNAME_CAST(sipName_radialLabelOffset), meth_QtStackedBar3DVis_QAbstractGraph3D_radialLabelOffset, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_radialLabelOffset)},
    {SIP_MLNAME_CAST(sipName_reflectivity), meth_QtStackedBar3DVis_QAbstractGraph3D_reflectivity, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_reflectivity)},
    {SIP_MLNAME_CAST(sipName_releaseCustomItem), meth_QtStackedBar3DVis_QAbstractGraph3D_releaseCustomItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_releaseCustomItem)},
    {SIP_MLNAME_CAST(sipName_releaseInputHandler), meth_QtStackedBar3DVis_QAbstractGraph3D_releaseInputHandler, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_releaseInputHandler)},
    {SIP_MLNAME_CAST(sipName_releaseTheme), meth_QtStackedBar3DVis_QAbstractGraph3D_releaseTheme, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_releaseTheme)},
    {SIP_MLNAME_CAST(sipName_removeCustomItem), meth_QtStackedBar3DVis_QAbstractGraph3D_removeCustomItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_removeCustomItem)},
    {SIP_MLNAME_CAST(sipName_removeCustomItemAt), meth_QtStackedBar3DVis_QAbstractGraph3D_removeCustomItemAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_removeCustomItemAt)},
    {SIP_MLNAME_CAST(sipName_removeCustomItems), meth_QtStackedBar3DVis_QAbstractGraph3D_removeCustomItems, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_removeCustomItems)},
    {SIP_MLNAME_CAST(sipName_renderToImage), (PyCFunction)meth_QtStackedBar3DVis_QAbstractGraph3D_renderToImage, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_renderToImage)},
    {SIP_MLNAME_CAST(sipName_resizeEvent), meth_QtStackedBar3DVis_QAbstractGraph3D_resizeEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_resizeEvent)},
    {SIP_MLNAME_CAST(sipName_scene), meth_QtStackedBar3DVis_QAbstractGraph3D_scene, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_scene)},
    {SIP_MLNAME_CAST(sipName_selectedAxis), meth_QtStackedBar3DVis_QAbstractGraph3D_selectedAxis, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_selectedAxis)},
    {SIP_MLNAME_CAST(sipName_selectedCustomItem), meth_QtStackedBar3DVis_QAbstractGraph3D_selectedCustomItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_selectedCustomItem)},
    {SIP_MLNAME_CAST(sipName_selectedCustomItemIndex), meth_QtStackedBar3DVis_QAbstractGraph3D_selectedCustomItemIndex, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_selectedCustomItemIndex)},
    {SIP_MLNAME_CAST(sipName_selectedElement), meth_QtStackedBar3DVis_QAbstractGraph3D_selectedElement, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_selectedElement)},
    {SIP_MLNAME_CAST(sipName_selectedLabelIndex), meth_QtStackedBar3DVis_QAbstractGraph3D_selectedLabelIndex, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_selectedLabelIndex)},
    {SIP_MLNAME_CAST(sipName_selectionMode), meth_QtStackedBar3DVis_QAbstractGraph3D_selectionMode, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_selectionMode)},
    {SIP_MLNAME_CAST(sipName_setActiveInputHandler), meth_QtStackedBar3DVis_QAbstractGraph3D_setActiveInputHandler, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_setActiveInputHandler)},
    {SIP_MLNAME_CAST(sipName_setActiveTheme), meth_QtStackedBar3DVis_QAbstractGraph3D_setActiveTheme, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_setActiveTheme)},
    {SIP_MLNAME_CAST(sipName_setAspectRatio), meth_QtStackedBar3DVis_QAbstractGraph3D_setAspectRatio, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_setAspectRatio)},
    {SIP_MLNAME_CAST(sipName_setHorizontalAspectRatio), meth_QtStackedBar3DVis_QAbstractGraph3D_setHorizontalAspectRatio, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_setHorizontalAspectRatio)},
    {SIP_MLNAME_CAST(sipName_setLocale), meth_QtStackedBar3DVis_QAbstractGraph3D_setLocale, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_setLocale)},
    {SIP_MLNAME_CAST(sipName_setMargin), meth_QtStackedBar3DVis_QAbstractGraph3D_setMargin, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_setMargin)},
    {SIP_MLNAME_CAST(sipName_setMeasureFps), meth_QtStackedBar3DVis_QAbstractGraph3D_setMeasureFps, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_setMeasureFps)},
    {SIP_MLNAME_CAST(sipName_setOptimizationHints), meth_QtStackedBar3DVis_QAbstractGraph3D_setOptimizationHints, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_setOptimizationHints)},
    {SIP_MLNAME_CAST(sipName_setOrthoProjection), meth_QtStackedBar3DVis_QAbstractGraph3D_setOrthoProjection, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_setOrthoProjection)},
    {SIP_MLNAME_CAST(sipName_setPolar), meth_QtStackedBar3DVis_QAbstractGraph3D_setPolar, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_setPolar)},
    {SIP_MLNAME_CAST(sipName_setRadialLabelOffset), meth_QtStackedBar3DVis_QAbstractGraph3D_setRadialLabelOffset, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_setRadialLabelOffset)},
    {SIP_MLNAME_CAST(sipName_setReflection), meth_QtStackedBar3DVis_QAbstractGraph3D_setReflection, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_setReflection)},
    {SIP_MLNAME_CAST(sipName_setReflectivity), meth_QtStackedBar3DVis_QAbstractGraph3D_setReflectivity, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_setReflectivity)},
    {SIP_MLNAME_CAST(sipName_setSelectionMode), meth_QtStackedBar3DVis_QAbstractGraph3D_setSelectionMode, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_setSelectionMode)},
    {SIP_MLNAME_CAST(sipName_setShadowQuality), meth_QtStackedBar3DVis_QAbstractGraph3D_setShadowQuality, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_setShadowQuality)},
    {SIP_MLNAME_CAST(sipName_shadowQuality), meth_QtStackedBar3DVis_QAbstractGraph3D_shadowQuality, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_shadowQuality)},
    {SIP_MLNAME_CAST(sipName_shadowsSupported), meth_QtStackedBar3DVis_QAbstractGraph3D_shadowsSupported, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_shadowsSupported)},
    {SIP_MLNAME_CAST(sipName_themes), meth_QtStackedBar3DVis_QAbstractGraph3D_themes, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_themes)},
    {SIP_MLNAME_CAST(sipName_touchEvent), meth_QtStackedBar3DVis_QAbstractGraph3D_touchEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_touchEvent)},
    {SIP_MLNAME_CAST(sipName_wheelEvent), meth_QtStackedBar3DVis_QAbstractGraph3D_wheelEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractGraph3D_wheelEvent)}
};

static sipEnumMemberDef enummembers_QtStackedBar3DVis_QAbstractGraph3D[] = {
    {sipName_ElementAxisXLabel, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::ElementAxisXLabel), 18},
    {sipName_ElementAxisYLabel, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::ElementAxisYLabel), 18},
    {sipName_ElementAxisZLabel, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::ElementAxisZLabel), 18},
    {sipName_ElementCustomItem, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::ElementCustomItem), 18},
    {sipName_ElementNone, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::ElementNone), 18},
    {sipName_ElementSeries, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::ElementSeries), 18},
    {sipName_OptimizationDefault, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::OptimizationDefault), 19},
    {sipName_OptimizationStatic, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::OptimizationStatic), 19},
    {sipName_SelectionColumn, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::SelectionColumn), 21},
    {sipName_SelectionItem, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::SelectionItem), 21},
    {sipName_SelectionItemAndColumn, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::SelectionItemAndColumn), 21},
    {sipName_SelectionItemAndRow, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::SelectionItemAndRow), 21},
    {sipName_SelectionItemRowAndColumn, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::SelectionItemRowAndColumn), 21},
    {sipName_SelectionMultiSeries, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::SelectionMultiSeries), 21},
    {sipName_SelectionNone, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::SelectionNone), 21},
    {sipName_SelectionRow, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::SelectionRow), 21},
    {sipName_SelectionRowAndColumn, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::SelectionRowAndColumn), 21},
    {sipName_SelectionSlice, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::SelectionSlice), 21},
    {sipName_ShadowQualityHigh, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::ShadowQualityHigh), 23},
    {sipName_ShadowQualityLow, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::ShadowQualityLow), 23},
    {sipName_ShadowQualityMedium, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::ShadowQualityMedium), 23},
    {sipName_ShadowQualityNone, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::ShadowQualityNone), 23},
    {sipName_ShadowQualitySoftHigh, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::ShadowQualitySoftHigh), 23},
    {sipName_ShadowQualitySoftLow, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::ShadowQualitySoftLow), 23},
    {sipName_ShadowQualitySoftMedium, static_cast<int>( ::QtStackedBar3DVis::QAbstractGraph3D::ShadowQualitySoftMedium), 23},
};


/* Define this type's signals. */
static const pyqt5QtSignal signals_QtStackedBar3DVis_QAbstractGraph3D[] = {
    {"marginChanged(qreal)", "\1marginChanged(self, float)", 0, 0},
    {"queriedGraphPositionChanged(QVector3D)", "\1queriedGraphPositionChanged(self, QVector3D)", 0, 0},
    {"localeChanged(QLocale)", "\1localeChanged(self, QLocale)", 0, 0},
    {"reflectivityChanged(qreal)", "\1reflectivityChanged(self, float)", 0, 0},
    {"reflectionChanged(bool)", "\1reflectionChanged(self, bool)", 0, 0},
    {"horizontalAspectRatioChanged(qreal)", "\1horizontalAspectRatioChanged(self, float)", 0, 0},
    {"radialLabelOffsetChanged(float)", "\1radialLabelOffsetChanged(self, float)", 0, 0},
    {"polarChanged(bool)", "\1polarChanged(self, bool)", 0, 0},
    {"optimizationHintsChanged(QAbstractGraph3D::OptimizationHints)|(QtStackedBar3DVis::QAbstractGraph3D::OptimizationHints)", "\1optimizationHintsChanged(self, Union[QtStackedBar3DVis.QAbstractGraph3D.OptimizationHints, QtStackedBar3DVis.QAbstractGraph3D.OptimizationHint])", 0, 0},
    {"aspectRatioChanged(qreal)", "\1aspectRatioChanged(self, float)", 0, 0},
    {"orthoProjectionChanged(bool)", "\1orthoProjectionChanged(self, bool)", 0, 0},
    {"currentFpsChanged(qreal)", "\1currentFpsChanged(self, float)", 0, 0},
    {"measureFpsChanged(bool)", "\1measureFpsChanged(self, bool)", 0, 0},
    {"shadowQualityChanged(QAbstractGraph3D::ShadowQuality)|(QtStackedBar3DVis::QAbstractGraph3D::ShadowQuality)", "\1shadowQualityChanged(self, QtStackedBar3DVis.QAbstractGraph3D.ShadowQuality)", 0, 0},
    {"selectionModeChanged(QAbstractGraph3D::SelectionFlags)|(QtStackedBar3DVis::QAbstractGraph3D::SelectionFlags)", "\1selectionModeChanged(self, Union[QtStackedBar3DVis.QAbstractGraph3D.SelectionFlags, QtStackedBar3DVis.QAbstractGraph3D.SelectionFlag])", 0, 0},
    {"activeThemeChanged(QTheme3D*)|(QtStackedBar3DVis::QTheme3D*)", "\1activeThemeChanged(self, QtStackedBar3DVis.QTheme3D)", 0, 0},
    {"activeInputHandlerChanged(QAbstractInputHandler3D*)|(QtStackedBar3DVis::QAbstractInputHandler3D*)", "\1activeInputHandlerChanged(self, QtStackedBar3DVis.QAbstractInputHandler3D)", 0, 0},
    {0, 0, 0, 0}
};


static pyqt5ClassPluginDef plugin_QtStackedBar3DVis_QAbstractGraph3D = {
    & ::QtStackedBar3DVis::QAbstractGraph3D::staticMetaObject,
    0,
    signals_QtStackedBar3DVis_QAbstractGraph3D,
    0
};


sipClassTypeDef sipTypeDef_QtStackedBars3D_QtStackedBar3DVis_QAbstractGraph3D = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QtStackedBar3DVis__QAbstractGraph3D,
        {0},
        &plugin_QtStackedBar3DVis_QAbstractGraph3D
    },
    {
        sipNameNr_QAbstractGraph3D,
        {11, 255, 0},
        63, methods_QtStackedBar3DVis_QAbstractGraph3D,
        25, enummembers_QtStackedBar3DVis_QAbstractGraph3D,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    supers_QtStackedBar3DVis_QAbstractGraph3D,
    0,
    0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QtStackedBar3DVis_QAbstractGraph3D,
    0,
    0,
    0,
    release_QtStackedBar3DVis_QAbstractGraph3D,
    cast_QtStackedBar3DVis_QAbstractGraph3D,
    0,
    0,
    0,
    0,
    0,
    0
};
