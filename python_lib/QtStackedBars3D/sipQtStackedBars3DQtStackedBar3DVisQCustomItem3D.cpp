/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.12
 *
 * Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQtStackedBars3D.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtStackedBars3D.h"

#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qstackedbars3d.sip"
#include <QStackedBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 26 "sip/QtStackedBars3D/qabstractinputhandler3d.sip"
#include <QAbstractInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qabstractseries3d.sip"
#include <QAbstractSeries3D.h>
#line 26 "sip/QtStackedBars3D/qabstractdataproxy3d.sip"
#include <QAbstractDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qbarseries3d.sip"
#include <QBarSeries3D.h>
#line 26 "sip/QtStackedBars3D/qbardataitem3d.sip"
#include <QBarDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qbardataproxy3d.sip"
#include <QBarDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qstackedbarseries3d.sip"
#include <QStackedBarSeries3D.h>
#line 26 "sip/QtStackedBars3D/qstackedbardataitem3d.sip"
#include <QStackedBarDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qstackedbardataproxy3d.sip"
#include <QStackedBarDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qcategoryaxis3d.sip"
#include <QCategoryAxis3D.h>
#line 26 "sip/QtStackedBars3D/qcustomitem3d.sip"
#include <QCustomItem3D.h>
#line 32 "sip/QtStackedBars3D/qcustomitem3d.sip"
#include <QCustomItem3D.h>
#line 71 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"

#line 28 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qobject.sip"
#include <qobject.h>
#line 75 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"
#line 27 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qstring.sip"
#include <qstring.h>
#line 78 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"
#line 30 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qvector3d.sip"
#include <qvector3d.h>
#line 81 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"
#line 30 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qquaternion.sip"
#include <qquaternion.h>
#line 84 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qimage.sip"
#include <qimage.h>
#line 87 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 90 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 93 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"
#line 247 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 96 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"
#line 235 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 99 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qvariant.sip"
#include <qvariant.h>
#line 102 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"
#line 38 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 105 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"
#line 30 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 108 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"
#line 149 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 111 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 114 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qthread.sip"
#include <qthread.h>
#line 117 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 120 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qregexp.sip"
#include <qregexp.h>
#line 123 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 126 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 129 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQCustomItem3D.cpp"


class sipQtStackedBar3DVis_QCustomItem3D : public  ::QtStackedBar3DVis::QCustomItem3D
{
public:
    sipQtStackedBar3DVis_QCustomItem3D( ::QObject*);
    sipQtStackedBar3DVis_QCustomItem3D(const  ::QString&,const  ::QVector3D&,const  ::QVector3D&,const  ::QQuaternion&,const  ::QImage&, ::QObject*);
    virtual ~sipQtStackedBar3DVis_QCustomItem3D();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    bool event( ::QEvent*);
    bool eventFilter( ::QObject*, ::QEvent*);
    void timerEvent( ::QTimerEvent*);
    void childEvent( ::QChildEvent*);
    void customEvent( ::QEvent*);
    void connectNotify(const  ::QMetaMethod&);
    void disconnectNotify(const  ::QMetaMethod&);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQtStackedBar3DVis_QCustomItem3D(const sipQtStackedBar3DVis_QCustomItem3D &);
    sipQtStackedBar3DVis_QCustomItem3D &operator = (const sipQtStackedBar3DVis_QCustomItem3D &);

    char sipPyMethods[7];
};

sipQtStackedBar3DVis_QCustomItem3D::sipQtStackedBar3DVis_QCustomItem3D( ::QObject*a0):  ::QtStackedBar3DVis::QCustomItem3D(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQtStackedBar3DVis_QCustomItem3D::sipQtStackedBar3DVis_QCustomItem3D(const  ::QString& a0,const  ::QVector3D& a1,const  ::QVector3D& a2,const  ::QQuaternion& a3,const  ::QImage& a4, ::QObject*a5):  ::QtStackedBar3DVis::QCustomItem3D(a0,a1,a2,a3,a4,a5), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQtStackedBar3DVis_QCustomItem3D::~sipQtStackedBar3DVis_QCustomItem3D()
{
    sipInstanceDestroyedEx(&sipPySelf);
}

const QMetaObject *sipQtStackedBar3DVis_QCustomItem3D::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtStackedBars3D_qt_metaobject(sipPySelf,sipType_QtStackedBar3DVis_QCustomItem3D);

    return  ::QtStackedBar3DVis::QCustomItem3D::metaObject();
}

int sipQtStackedBar3DVis_QCustomItem3D::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id =  ::QtStackedBar3DVis::QCustomItem3D::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtStackedBars3D_qt_metacall(sipPySelf,sipType_QtStackedBar3DVis_QCustomItem3D,_c,_id,_a);

    return _id;
}

void *sipQtStackedBar3DVis_QCustomItem3D::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtStackedBars3D_qt_metacast(sipPySelf, sipType_QtStackedBar3DVis_QCustomItem3D, _clname, &sipCpp) ? sipCpp :  ::QtStackedBar3DVis::QCustomItem3D::qt_metacast(_clname));
}

bool sipQtStackedBar3DVis_QCustomItem3D::event( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return  ::QtStackedBar3DVis::QCustomItem3D::event(a0);

    extern bool sipVH_QtStackedBars3D_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtStackedBars3D_15(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQtStackedBar3DVis_QCustomItem3D::eventFilter( ::QObject*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return  ::QtStackedBar3DVis::QCustomItem3D::eventFilter(a0,a1);

    extern bool sipVH_QtStackedBars3D_16(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*, ::QEvent*);

    return sipVH_QtStackedBars3D_16(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQtStackedBar3DVis_QCustomItem3D::timerEvent( ::QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QCustomItem3D::timerEvent(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_17(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTimerEvent*);

    sipVH_QtStackedBars3D_17(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QCustomItem3D::childEvent( ::QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QCustomItem3D::childEvent(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_18(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QChildEvent*);

    sipVH_QtStackedBars3D_18(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QCustomItem3D::customEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QCustomItem3D::customEvent(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_19(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtStackedBars3D_19(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QCustomItem3D::connectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QCustomItem3D::connectNotify(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtStackedBars3D_20(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QCustomItem3D::disconnectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QCustomItem3D::disconnectNotify(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtStackedBars3D_20(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_setMeshFile, "setMeshFile(self, str)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setMeshFile(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setMeshFile(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp, sipType_QString,&a0, &a0State))
        {
            sipCpp->setMeshFile(*a0);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_setMeshFile, doc_QtStackedBar3DVis_QCustomItem3D_setMeshFile);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_meshFile, "meshFile(self) -> str");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_meshFile(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_meshFile(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->meshFile());

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_meshFile, doc_QtStackedBar3DVis_QCustomItem3D_meshFile);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_setTextureFile, "setTextureFile(self, str)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setTextureFile(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setTextureFile(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp, sipType_QString,&a0, &a0State))
        {
            sipCpp->setTextureFile(*a0);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_setTextureFile, doc_QtStackedBar3DVis_QCustomItem3D_setTextureFile);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_textureFile, "textureFile(self) -> str");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_textureFile(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_textureFile(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->textureFile());

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_textureFile, doc_QtStackedBar3DVis_QCustomItem3D_textureFile);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_setPosition, "setPosition(self, QVector3D)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setPosition(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setPosition(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QVector3D* a0;
         ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp, sipType_QVector3D, &a0))
        {
            sipCpp->setPosition(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_setPosition, doc_QtStackedBar3DVis_QCustomItem3D_setPosition);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_position, "position(self) -> QVector3D");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_position(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_position(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp))
        {
             ::QVector3D*sipRes;

            sipRes = new  ::QVector3D(sipCpp->position());

            return sipConvertFromNewType(sipRes,sipType_QVector3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_position, doc_QtStackedBar3DVis_QCustomItem3D_position);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_setPositionAbsolute, "setPositionAbsolute(self, bool)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setPositionAbsolute(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setPositionAbsolute(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
         ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp, &a0))
        {
            sipCpp->setPositionAbsolute(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_setPositionAbsolute, doc_QtStackedBar3DVis_QCustomItem3D_setPositionAbsolute);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_isPositionAbsolute, "isPositionAbsolute(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_isPositionAbsolute(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_isPositionAbsolute(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isPositionAbsolute();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_isPositionAbsolute, doc_QtStackedBar3DVis_QCustomItem3D_isPositionAbsolute);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_setScaling, "setScaling(self, QVector3D)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setScaling(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setScaling(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QVector3D* a0;
         ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp, sipType_QVector3D, &a0))
        {
            sipCpp->setScaling(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_setScaling, doc_QtStackedBar3DVis_QCustomItem3D_setScaling);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_scaling, "scaling(self) -> QVector3D");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_scaling(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_scaling(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp))
        {
             ::QVector3D*sipRes;

            sipRes = new  ::QVector3D(sipCpp->scaling());

            return sipConvertFromNewType(sipRes,sipType_QVector3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_scaling, doc_QtStackedBar3DVis_QCustomItem3D_scaling);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_setRotation, "setRotation(self, QQuaternion)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setRotation(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setRotation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QQuaternion* a0;
         ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp, sipType_QQuaternion, &a0))
        {
            sipCpp->setRotation(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_setRotation, doc_QtStackedBar3DVis_QCustomItem3D_setRotation);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_rotation, "rotation(self) -> QQuaternion");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_rotation(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_rotation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp))
        {
             ::QQuaternion*sipRes;

            sipRes = new  ::QQuaternion(sipCpp->rotation());

            return sipConvertFromNewType(sipRes,sipType_QQuaternion,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_rotation, doc_QtStackedBar3DVis_QCustomItem3D_rotation);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_setVisible, "setVisible(self, bool)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setVisible(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setVisible(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
         ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp, &a0))
        {
            sipCpp->setVisible(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_setVisible, doc_QtStackedBar3DVis_QCustomItem3D_setVisible);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_isVisible, "isVisible(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_isVisible(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_isVisible(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isVisible();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_isVisible, doc_QtStackedBar3DVis_QCustomItem3D_isVisible);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_setShadowCasting, "setShadowCasting(self, bool)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setShadowCasting(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setShadowCasting(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
         ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp, &a0))
        {
            sipCpp->setShadowCasting(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_setShadowCasting, doc_QtStackedBar3DVis_QCustomItem3D_setShadowCasting);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_isShadowCasting, "isShadowCasting(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_isShadowCasting(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_isShadowCasting(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isShadowCasting();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_isShadowCasting, doc_QtStackedBar3DVis_QCustomItem3D_isShadowCasting);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_setRotationAxisAndAngle, "setRotationAxisAndAngle(self, QVector3D, float)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setRotationAxisAndAngle(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setRotationAxisAndAngle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QVector3D* a0;
        float a1;
         ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9f", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp, sipType_QVector3D, &a0, &a1))
        {
            sipCpp->setRotationAxisAndAngle(*a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_setRotationAxisAndAngle, doc_QtStackedBar3DVis_QCustomItem3D_setRotationAxisAndAngle);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_setTextureImage, "setTextureImage(self, QImage)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setTextureImage(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setTextureImage(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QImage* a0;
         ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp, sipType_QImage, &a0))
        {
            sipCpp->setTextureImage(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_setTextureImage, doc_QtStackedBar3DVis_QCustomItem3D_setTextureImage);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_setScalingAbsolute, "setScalingAbsolute(self, bool)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setScalingAbsolute(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_setScalingAbsolute(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
         ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp, &a0))
        {
            sipCpp->setScalingAbsolute(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_setScalingAbsolute, doc_QtStackedBar3DVis_QCustomItem3D_setScalingAbsolute);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D_isScalingAbsolute, "isScalingAbsolute(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_isScalingAbsolute(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QCustomItem3D_isScalingAbsolute(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QCustomItem3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QCustomItem3D, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isScalingAbsolute();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QCustomItem3D, sipName_isScalingAbsolute, doc_QtStackedBar3DVis_QCustomItem3D_isScalingAbsolute);

    return NULL;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QtStackedBar3DVis_QCustomItem3D(void *, const sipTypeDef *);}
static void *cast_QtStackedBar3DVis_QCustomItem3D(void *sipCppV, const sipTypeDef *targetType)
{
     ::QtStackedBar3DVis::QCustomItem3D *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QCustomItem3D *>(sipCppV);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QtStackedBar3DVis_QCustomItem3D(void *, int);}
static void release_QtStackedBar3DVis_QCustomItem3D(void *sipCppV, int)
{
     ::QtStackedBar3DVis::QCustomItem3D *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QCustomItem3D *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QtStackedBar3DVis_QCustomItem3D(sipSimpleWrapper *);}
static void dealloc_QtStackedBar3DVis_QCustomItem3D(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQtStackedBar3DVis_QCustomItem3D *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QtStackedBar3DVis_QCustomItem3D(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QtStackedBar3DVis_QCustomItem3D(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QtStackedBar3DVis_QCustomItem3D(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQtStackedBar3DVis_QCustomItem3D *sipCpp = 0;

    {
         ::QObject* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QObject, &a0, sipOwner))
        {
            sipCpp = new sipQtStackedBar3DVis_QCustomItem3D(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    {
        const  ::QString* a0;
        int a0State = 0;
        const  ::QVector3D* a1;
        const  ::QVector3D* a2;
        const  ::QQuaternion* a3;
        const  ::QImage* a4;
         ::QObject* a5 = 0;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            NULL,
            NULL,
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "J1J9J9J9J9|JH", sipType_QString,&a0, &a0State, sipType_QVector3D, &a1, sipType_QVector3D, &a2, sipType_QQuaternion, &a3, sipType_QImage, &a4, sipType_QObject, &a5, sipOwner))
        {
            sipCpp = new sipQtStackedBar3DVis_QCustomItem3D(*a0,*a1,*a2,*a3,*a4,a5);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QtStackedBar3DVis_QCustomItem3D[] = {{5, 0, 1}};


static PyMethodDef methods_QtStackedBar3DVis_QCustomItem3D[] = {
    {SIP_MLNAME_CAST(sipName_isPositionAbsolute), meth_QtStackedBar3DVis_QCustomItem3D_isPositionAbsolute, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_isPositionAbsolute)},
    {SIP_MLNAME_CAST(sipName_isScalingAbsolute), meth_QtStackedBar3DVis_QCustomItem3D_isScalingAbsolute, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_isScalingAbsolute)},
    {SIP_MLNAME_CAST(sipName_isShadowCasting), meth_QtStackedBar3DVis_QCustomItem3D_isShadowCasting, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_isShadowCasting)},
    {SIP_MLNAME_CAST(sipName_isVisible), meth_QtStackedBar3DVis_QCustomItem3D_isVisible, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_isVisible)},
    {SIP_MLNAME_CAST(sipName_meshFile), meth_QtStackedBar3DVis_QCustomItem3D_meshFile, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_meshFile)},
    {SIP_MLNAME_CAST(sipName_position), meth_QtStackedBar3DVis_QCustomItem3D_position, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_position)},
    {SIP_MLNAME_CAST(sipName_rotation), meth_QtStackedBar3DVis_QCustomItem3D_rotation, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_rotation)},
    {SIP_MLNAME_CAST(sipName_scaling), meth_QtStackedBar3DVis_QCustomItem3D_scaling, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_scaling)},
    {SIP_MLNAME_CAST(sipName_setMeshFile), meth_QtStackedBar3DVis_QCustomItem3D_setMeshFile, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_setMeshFile)},
    {SIP_MLNAME_CAST(sipName_setPosition), meth_QtStackedBar3DVis_QCustomItem3D_setPosition, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_setPosition)},
    {SIP_MLNAME_CAST(sipName_setPositionAbsolute), meth_QtStackedBar3DVis_QCustomItem3D_setPositionAbsolute, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_setPositionAbsolute)},
    {SIP_MLNAME_CAST(sipName_setRotation), meth_QtStackedBar3DVis_QCustomItem3D_setRotation, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_setRotation)},
    {SIP_MLNAME_CAST(sipName_setRotationAxisAndAngle), meth_QtStackedBar3DVis_QCustomItem3D_setRotationAxisAndAngle, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_setRotationAxisAndAngle)},
    {SIP_MLNAME_CAST(sipName_setScaling), meth_QtStackedBar3DVis_QCustomItem3D_setScaling, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_setScaling)},
    {SIP_MLNAME_CAST(sipName_setScalingAbsolute), meth_QtStackedBar3DVis_QCustomItem3D_setScalingAbsolute, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_setScalingAbsolute)},
    {SIP_MLNAME_CAST(sipName_setShadowCasting), meth_QtStackedBar3DVis_QCustomItem3D_setShadowCasting, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_setShadowCasting)},
    {SIP_MLNAME_CAST(sipName_setTextureFile), meth_QtStackedBar3DVis_QCustomItem3D_setTextureFile, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_setTextureFile)},
    {SIP_MLNAME_CAST(sipName_setTextureImage), meth_QtStackedBar3DVis_QCustomItem3D_setTextureImage, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_setTextureImage)},
    {SIP_MLNAME_CAST(sipName_setVisible), meth_QtStackedBar3DVis_QCustomItem3D_setVisible, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_setVisible)},
    {SIP_MLNAME_CAST(sipName_textureFile), meth_QtStackedBar3DVis_QCustomItem3D_textureFile, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QCustomItem3D_textureFile)}
};

PyDoc_STRVAR(doc_QtStackedBar3DVis_QCustomItem3D, "\1QtStackedBar3DVis.QCustomItem3D(parent: QObject = None)\n"
"QtStackedBar3DVis.QCustomItem3D(str, QVector3D, QVector3D, QQuaternion, QImage, parent: QObject = None)");


/* Define this type's signals. */
static const pyqt5QtSignal signals_QtStackedBar3DVis_QCustomItem3D[] = {
    {"scalingAbsoluteChanged(bool)", "\1scalingAbsoluteChanged(self, bool)", 0, 0},
    {"shadowCastingChanged(bool)", "\1shadowCastingChanged(self, bool)", 0, 0},
    {"visibleChanged(bool)", "\1visibleChanged(self, bool)", 0, 0},
    {"rotationChanged(QQuaternion)", "\1rotationChanged(self, QQuaternion)", 0, 0},
    {"scalingChanged(QVector3D)", "\1scalingChanged(self, QVector3D)", 0, 0},
    {"positionAbsoluteChanged(bool)", "\1positionAbsoluteChanged(self, bool)", 0, 0},
    {"positionChanged(QVector3D)", "\1positionChanged(self, QVector3D)", 0, 0},
    {"textureFileChanged(QString)", "\1textureFileChanged(self, str)", 0, 0},
    {"meshFileChanged(QString)", "\1meshFileChanged(self, str)", 0, 0},
    {0, 0, 0, 0}
};


static pyqt5ClassPluginDef plugin_QtStackedBar3DVis_QCustomItem3D = {
    & ::QtStackedBar3DVis::QCustomItem3D::staticMetaObject,
    0,
    signals_QtStackedBar3DVis_QCustomItem3D,
    0
};


sipClassTypeDef sipTypeDef_QtStackedBars3D_QtStackedBar3DVis_QCustomItem3D = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QtStackedBar3DVis__QCustomItem3D,
        {0},
        &plugin_QtStackedBar3DVis_QCustomItem3D
    },
    {
        sipNameNr_QCustomItem3D,
        {14, 255, 0},
        20, methods_QtStackedBar3DVis_QCustomItem3D,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QtStackedBar3DVis_QCustomItem3D,
    -1,
    -1,
    supers_QtStackedBar3DVis_QCustomItem3D,
    0,
    init_type_QtStackedBar3DVis_QCustomItem3D,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QtStackedBar3DVis_QCustomItem3D,
    0,
    0,
    0,
    release_QtStackedBar3DVis_QCustomItem3D,
    cast_QtStackedBar3DVis_QCustomItem3D,
    0,
    0,
    0,
    0,
    0,
    0
};
