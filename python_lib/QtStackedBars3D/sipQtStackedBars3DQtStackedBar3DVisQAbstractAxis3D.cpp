/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.7
 *
 * Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQtStackedBars3D.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtStackedBars3D.h"

#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 32 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 45 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractAxis3D.cpp"

#line 27 "/usr/share/sip/PyQt5/QtCore/qstring.sip"
#include <qstring.h>
#line 49 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractAxis3D.cpp"
#line 36 "/usr/share/sip/PyQt5/QtCore/qstringlist.sip"
#include <qstringlist.h>
#line 52 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractAxis3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 55 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractAxis3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 58 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractAxis3D.cpp"
#line 247 "/usr/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 61 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractAxis3D.cpp"
#line 235 "/usr/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 64 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractAxis3D.cpp"
#line 28 "/usr/share/sip/PyQt5/QtCore/qobject.sip"
#include <qobject.h>
#line 67 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractAxis3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qvariant.sip"
#include <qvariant.h>
#line 70 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractAxis3D.cpp"
#line 38 "/usr/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 73 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractAxis3D.cpp"
#line 30 "/usr/share/sip/PyQt5/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 76 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractAxis3D.cpp"
#line 149 "/usr/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 79 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractAxis3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 82 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractAxis3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qthread.sip"
#include <qthread.h>
#line 85 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractAxis3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 88 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractAxis3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qregexp.sip"
#include <qregexp.h>
#line 91 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractAxis3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 94 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractAxis3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 97 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractAxis3D.cpp"


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_title, "title(self) -> str");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_title(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_title(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->title());

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_title, doc_QtStackedBar3DVis_QAbstractAxis3D_title);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_setLabels, "setLabels(self, Iterable[str])");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_setLabels(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_setLabels(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QStringList* a0;
        int a0State = 0;
         ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp, sipType_QStringList,&a0, &a0State))
        {
            sipCpp->setLabels(*a0);
            sipReleaseType(const_cast< ::QStringList *>(a0),sipType_QStringList,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_setLabels, doc_QtStackedBar3DVis_QAbstractAxis3D_setLabels);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_labels, "labels(self) -> List[str]");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_labels(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_labels(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp))
        {
             ::QStringList*sipRes;

            sipRes = new  ::QStringList(sipCpp->labels());

            return sipConvertFromNewType(sipRes,sipType_QStringList,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_labels, doc_QtStackedBar3DVis_QAbstractAxis3D_labels);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_orientation, "orientation(self) -> QtStackedBar3DVis.QAbstractAxis3D.AxisOrientation");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_orientation(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_orientation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QAbstractAxis3D::AxisOrientation sipRes;

            sipRes = sipCpp->orientation();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QtStackedBar3DVis_QAbstractAxis3D_AxisOrientation);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_orientation, doc_QtStackedBar3DVis_QAbstractAxis3D_orientation);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_type, "type(self) -> QtStackedBar3DVis.QAbstractAxis3D.AxisType");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_type(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QAbstractAxis3D::AxisType sipRes;

            sipRes = sipCpp->type();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QtStackedBar3DVis_QAbstractAxis3D_AxisType);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_type, doc_QtStackedBar3DVis_QAbstractAxis3D_type);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_setMin, "setMin(self, float)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_setMin(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_setMin(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        float a0;
         ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp, &a0))
        {
            sipCpp->setMin(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_setMin, doc_QtStackedBar3DVis_QAbstractAxis3D_setMin);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_min, "min(self) -> float");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_min(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_min(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp))
        {
            float sipRes;

            sipRes = sipCpp->min();

            return PyFloat_FromDouble((double)sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_min, doc_QtStackedBar3DVis_QAbstractAxis3D_min);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_setMax, "setMax(self, float)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_setMax(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_setMax(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        float a0;
         ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp, &a0))
        {
            sipCpp->setMax(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_setMax, doc_QtStackedBar3DVis_QAbstractAxis3D_setMax);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_max, "max(self) -> float");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_max(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_max(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp))
        {
            float sipRes;

            sipRes = sipCpp->max();

            return PyFloat_FromDouble((double)sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_max, doc_QtStackedBar3DVis_QAbstractAxis3D_max);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_setAutoAdjustRange, "setAutoAdjustRange(self, bool)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_setAutoAdjustRange(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_setAutoAdjustRange(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
         ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp, &a0))
        {
            sipCpp->setAutoAdjustRange(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_setAutoAdjustRange, doc_QtStackedBar3DVis_QAbstractAxis3D_setAutoAdjustRange);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_isAutoAdjustRange, "isAutoAdjustRange(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_isAutoAdjustRange(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_isAutoAdjustRange(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isAutoAdjustRange();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_isAutoAdjustRange, doc_QtStackedBar3DVis_QAbstractAxis3D_isAutoAdjustRange);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_setRange, "setRange(self, float, float)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_setRange(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_setRange(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        float a0;
        float a1;
         ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bff", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp, &a0, &a1))
        {
            sipCpp->setRange(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_setRange, doc_QtStackedBar3DVis_QAbstractAxis3D_setRange);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_setTitle, "setTitle(self, str)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_setTitle(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_setTitle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp, sipType_QString,&a0, &a0State))
        {
            sipCpp->setTitle(*a0);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_setTitle, doc_QtStackedBar3DVis_QAbstractAxis3D_setTitle);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_setLabelAutoRotation, "setLabelAutoRotation(self, float)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_setLabelAutoRotation(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_setLabelAutoRotation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        float a0;
         ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bf", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp, &a0))
        {
            sipCpp->setLabelAutoRotation(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_setLabelAutoRotation, doc_QtStackedBar3DVis_QAbstractAxis3D_setLabelAutoRotation);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_labelAutoRotation, "labelAutoRotation(self) -> float");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_labelAutoRotation(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_labelAutoRotation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp))
        {
            float sipRes;

            sipRes = sipCpp->labelAutoRotation();

            return PyFloat_FromDouble((double)sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_labelAutoRotation, doc_QtStackedBar3DVis_QAbstractAxis3D_labelAutoRotation);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_setTitleVisible, "setTitleVisible(self, bool)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_setTitleVisible(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_setTitleVisible(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
         ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp, &a0))
        {
            sipCpp->setTitleVisible(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_setTitleVisible, doc_QtStackedBar3DVis_QAbstractAxis3D_setTitleVisible);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_isTitleVisible, "isTitleVisible(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_isTitleVisible(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_isTitleVisible(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isTitleVisible();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_isTitleVisible, doc_QtStackedBar3DVis_QAbstractAxis3D_isTitleVisible);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_setTitleFixed, "setTitleFixed(self, bool)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_setTitleFixed(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_setTitleFixed(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
         ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp, &a0))
        {
            sipCpp->setTitleFixed(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_setTitleFixed, doc_QtStackedBar3DVis_QAbstractAxis3D_setTitleFixed);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractAxis3D_isTitleFixed, "isTitleFixed(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_isTitleFixed(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractAxis3D_isTitleFixed(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractAxis3D, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isTitleFixed();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractAxis3D, sipName_isTitleFixed, doc_QtStackedBar3DVis_QAbstractAxis3D_isTitleFixed);

    return NULL;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QtStackedBar3DVis_QAbstractAxis3D(void *, const sipTypeDef *);}
static void *cast_QtStackedBar3DVis_QAbstractAxis3D(void *sipCppV, const sipTypeDef *targetType)
{
     ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QAbstractAxis3D *>(sipCppV);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QtStackedBar3DVis_QAbstractAxis3D(void *, int);}
static void release_QtStackedBar3DVis_QAbstractAxis3D(void *sipCppV, int)
{
     ::QtStackedBar3DVis::QAbstractAxis3D *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QAbstractAxis3D *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QtStackedBar3DVis_QAbstractAxis3D(sipSimpleWrapper *);}
static void dealloc_QtStackedBar3DVis_QAbstractAxis3D(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QtStackedBar3DVis_QAbstractAxis3D(sipGetAddress(sipSelf), 0);
    }
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QtStackedBar3DVis_QAbstractAxis3D[] = {{4, 0, 1}};


static PyMethodDef methods_QtStackedBar3DVis_QAbstractAxis3D[] = {
    {SIP_MLNAME_CAST(sipName_isAutoAdjustRange), meth_QtStackedBar3DVis_QAbstractAxis3D_isAutoAdjustRange, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_isAutoAdjustRange)},
    {SIP_MLNAME_CAST(sipName_isTitleFixed), meth_QtStackedBar3DVis_QAbstractAxis3D_isTitleFixed, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_isTitleFixed)},
    {SIP_MLNAME_CAST(sipName_isTitleVisible), meth_QtStackedBar3DVis_QAbstractAxis3D_isTitleVisible, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_isTitleVisible)},
    {SIP_MLNAME_CAST(sipName_labelAutoRotation), meth_QtStackedBar3DVis_QAbstractAxis3D_labelAutoRotation, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_labelAutoRotation)},
    {SIP_MLNAME_CAST(sipName_labels), meth_QtStackedBar3DVis_QAbstractAxis3D_labels, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_labels)},
    {SIP_MLNAME_CAST(sipName_max), meth_QtStackedBar3DVis_QAbstractAxis3D_max, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_max)},
    {SIP_MLNAME_CAST(sipName_min), meth_QtStackedBar3DVis_QAbstractAxis3D_min, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_min)},
    {SIP_MLNAME_CAST(sipName_orientation), meth_QtStackedBar3DVis_QAbstractAxis3D_orientation, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_orientation)},
    {SIP_MLNAME_CAST(sipName_setAutoAdjustRange), meth_QtStackedBar3DVis_QAbstractAxis3D_setAutoAdjustRange, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_setAutoAdjustRange)},
    {SIP_MLNAME_CAST(sipName_setLabelAutoRotation), meth_QtStackedBar3DVis_QAbstractAxis3D_setLabelAutoRotation, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_setLabelAutoRotation)},
    {SIP_MLNAME_CAST(sipName_setLabels), meth_QtStackedBar3DVis_QAbstractAxis3D_setLabels, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_setLabels)},
    {SIP_MLNAME_CAST(sipName_setMax), meth_QtStackedBar3DVis_QAbstractAxis3D_setMax, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_setMax)},
    {SIP_MLNAME_CAST(sipName_setMin), meth_QtStackedBar3DVis_QAbstractAxis3D_setMin, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_setMin)},
    {SIP_MLNAME_CAST(sipName_setRange), meth_QtStackedBar3DVis_QAbstractAxis3D_setRange, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_setRange)},
    {SIP_MLNAME_CAST(sipName_setTitle), meth_QtStackedBar3DVis_QAbstractAxis3D_setTitle, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_setTitle)},
    {SIP_MLNAME_CAST(sipName_setTitleFixed), meth_QtStackedBar3DVis_QAbstractAxis3D_setTitleFixed, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_setTitleFixed)},
    {SIP_MLNAME_CAST(sipName_setTitleVisible), meth_QtStackedBar3DVis_QAbstractAxis3D_setTitleVisible, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_setTitleVisible)},
    {SIP_MLNAME_CAST(sipName_title), meth_QtStackedBar3DVis_QAbstractAxis3D_title, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_title)},
    {SIP_MLNAME_CAST(sipName_type), meth_QtStackedBar3DVis_QAbstractAxis3D_type, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractAxis3D_type)}
};

static sipEnumMemberDef enummembers_QtStackedBar3DVis_QAbstractAxis3D[] = {
    {sipName_AxisOrientationNone, static_cast<int>( ::QtStackedBar3DVis::QAbstractAxis3D::AxisOrientationNone), 13},
    {sipName_AxisOrientationX, static_cast<int>( ::QtStackedBar3DVis::QAbstractAxis3D::AxisOrientationX), 13},
    {sipName_AxisOrientationY, static_cast<int>( ::QtStackedBar3DVis::QAbstractAxis3D::AxisOrientationY), 13},
    {sipName_AxisOrientationZ, static_cast<int>( ::QtStackedBar3DVis::QAbstractAxis3D::AxisOrientationZ), 13},
    {sipName_AxisTypeCategory, static_cast<int>( ::QtStackedBar3DVis::QAbstractAxis3D::AxisTypeCategory), 14},
    {sipName_AxisTypeNone, static_cast<int>( ::QtStackedBar3DVis::QAbstractAxis3D::AxisTypeNone), 14},
    {sipName_AxisTypeValue, static_cast<int>( ::QtStackedBar3DVis::QAbstractAxis3D::AxisTypeValue), 14},
};


/* Define this type's signals. */
static const pyqt5QtSignal signals_QtStackedBar3DVis_QAbstractAxis3D[] = {
    {"titleFixedChanged(bool)", "\1titleFixedChanged(self, bool)", 0, 0},
    {"titleVisibilityChanged(bool)", "\1titleVisibilityChanged(self, bool)", 0, 0},
    {"labelAutoRotationChanged(float)", "\1labelAutoRotationChanged(self, float)", 0, 0},
    {"autoAdjustRangeChanged(bool)", "\1autoAdjustRangeChanged(self, bool)", 0, 0},
    {"rangeChanged(float,float)", "\1rangeChanged(self, float, float)", 0, 0},
    {"maxChanged(float)", "\1maxChanged(self, float)", 0, 0},
    {"minChanged(float)", "\1minChanged(self, float)", 0, 0},
    {"orientationChanged(QAbstractAxis3D::AxisOrientation)", "\1orientationChanged(self, QtStackedBar3DVis.QAbstractAxis3D.AxisOrientation)", 0, 0},
    {"labelsChanged()", "\1labelsChanged(self)", 0, 0},
    {"titleChanged(QString)", "\1titleChanged(self, str)", 0, 0},
    {0, 0, 0, 0}
};


static pyqt5ClassPluginDef plugin_QtStackedBar3DVis_QAbstractAxis3D = {
    & ::QtStackedBar3DVis::QAbstractAxis3D::staticMetaObject,
    0,
    signals_QtStackedBar3DVis_QAbstractAxis3D,
    0
};


sipClassTypeDef sipTypeDef_QtStackedBars3D_QtStackedBar3DVis_QAbstractAxis3D = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QtStackedBar3DVis__QAbstractAxis3D,
        {0},
        &plugin_QtStackedBar3DVis_QAbstractAxis3D
    },
    {
        sipNameNr_QAbstractAxis3D,
        {11, 255, 0},
        19, methods_QtStackedBar3DVis_QAbstractAxis3D,
        7, enummembers_QtStackedBar3DVis_QAbstractAxis3D,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    supers_QtStackedBar3DVis_QAbstractAxis3D,
    0,
    0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QtStackedBar3DVis_QAbstractAxis3D,
    0,
    0,
    0,
    release_QtStackedBar3DVis_QAbstractAxis3D,
    cast_QtStackedBar3DVis_QAbstractAxis3D,
    0,
    0,
    0,
    0,
    0,
    0
};
