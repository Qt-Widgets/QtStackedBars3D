/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.12
 *
 * Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQtStackedBars3D.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtStackedBars3D.h"

#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 26 "sip/QtStackedBars3D/qabstractinputhandler3d.sip"
#include <QAbstractInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qabstractseries3d.sip"
#include <QAbstractSeries3D.h>
#line 32 "sip/QtStackedBars3D/qabstractseries3d.sip"
#include <QAbstractSeries3D.h>
#line 51 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"

#line 27 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qstring.sip"
#include <qstring.h>
#line 55 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 165 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qbrush.sip"
#include <qbrush.h>
#line 58 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qcolor.sip"
#include <qcolor.h>
#line 61 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 32 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 78 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 30 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qquaternion.sip"
#include <qquaternion.h>
#line 81 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 30 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qvector3d.sip"
#include <qvector3d.h>
#line 84 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 87 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 90 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 247 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 93 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 235 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 96 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 28 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qobject.sip"
#include <qobject.h>
#line 99 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qvariant.sip"
#include <qvariant.h>
#line 102 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 38 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 105 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 30 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 108 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 149 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 111 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 114 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qthread.sip"
#include <qthread.h>
#line 117 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 120 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qregexp.sip"
#include <qregexp.h>
#line 123 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 126 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"
#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 129 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAbstractSeries3D.cpp"


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_type, "type(self) -> QtStackedBar3DVis.QAbstractSeries3D.SeriesType");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_type(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QAbstractSeries3D::SeriesType sipRes;

            sipRes = sipCpp->type();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QtStackedBar3DVis_QAbstractSeries3D_SeriesType);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_type, doc_QtStackedBar3DVis_QAbstractSeries3D_type);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_setItemLabelFormat, "setItemLabelFormat(self, str)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setItemLabelFormat(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setItemLabelFormat(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp, sipType_QString,&a0, &a0State))
        {
            sipCpp->setItemLabelFormat(*a0);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_setItemLabelFormat, doc_QtStackedBar3DVis_QAbstractSeries3D_setItemLabelFormat);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_itemLabelFormat, "itemLabelFormat(self) -> str");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_itemLabelFormat(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_itemLabelFormat(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->itemLabelFormat());

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_itemLabelFormat, doc_QtStackedBar3DVis_QAbstractSeries3D_itemLabelFormat);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_setVisible, "setVisible(self, bool)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setVisible(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setVisible(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
         ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp, &a0))
        {
            sipCpp->setVisible(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_setVisible, doc_QtStackedBar3DVis_QAbstractSeries3D_setVisible);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_isVisible, "isVisible(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_isVisible(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_isVisible(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isVisible();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_isVisible, doc_QtStackedBar3DVis_QAbstractSeries3D_isVisible);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_setMesh, "setMesh(self, QtStackedBar3DVis.QAbstractSeries3D.Mesh)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setMesh(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setMesh(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QAbstractSeries3D::Mesh a0;
         ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp, sipType_QtStackedBar3DVis_QAbstractSeries3D_Mesh, &a0))
        {
            sipCpp->setMesh(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_setMesh, doc_QtStackedBar3DVis_QAbstractSeries3D_setMesh);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_mesh, "mesh(self) -> QtStackedBar3DVis.QAbstractSeries3D.Mesh");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_mesh(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_mesh(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QAbstractSeries3D::Mesh sipRes;

            sipRes = sipCpp->mesh();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QtStackedBar3DVis_QAbstractSeries3D_Mesh);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_mesh, doc_QtStackedBar3DVis_QAbstractSeries3D_mesh);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_setMeshSmooth, "setMeshSmooth(self, bool)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setMeshSmooth(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setMeshSmooth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
         ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp, &a0))
        {
            sipCpp->setMeshSmooth(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_setMeshSmooth, doc_QtStackedBar3DVis_QAbstractSeries3D_setMeshSmooth);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_isMeshSmooth, "isMeshSmooth(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_isMeshSmooth(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_isMeshSmooth(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isMeshSmooth();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_isMeshSmooth, doc_QtStackedBar3DVis_QAbstractSeries3D_isMeshSmooth);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_setMeshRotation, "setMeshRotation(self, QQuaternion)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setMeshRotation(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setMeshRotation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QQuaternion* a0;
         ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp, sipType_QQuaternion, &a0))
        {
            sipCpp->setMeshRotation(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_setMeshRotation, doc_QtStackedBar3DVis_QAbstractSeries3D_setMeshRotation);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_meshRotation, "meshRotation(self) -> QQuaternion");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_meshRotation(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_meshRotation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp))
        {
             ::QQuaternion*sipRes;

            sipRes = new  ::QQuaternion(sipCpp->meshRotation());

            return sipConvertFromNewType(sipRes,sipType_QQuaternion,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_meshRotation, doc_QtStackedBar3DVis_QAbstractSeries3D_meshRotation);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_setUserDefinedMesh, "setUserDefinedMesh(self, str)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setUserDefinedMesh(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setUserDefinedMesh(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp, sipType_QString,&a0, &a0State))
        {
            sipCpp->setUserDefinedMesh(*a0);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_setUserDefinedMesh, doc_QtStackedBar3DVis_QAbstractSeries3D_setUserDefinedMesh);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_userDefinedMesh, "userDefinedMesh(self) -> str");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_userDefinedMesh(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_userDefinedMesh(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->userDefinedMesh());

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_userDefinedMesh, doc_QtStackedBar3DVis_QAbstractSeries3D_userDefinedMesh);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_setColorStyle, "setColorStyle(self, QtStackedBar3DVis.QTheme3D.ColorStyle)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setColorStyle(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setColorStyle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QTheme3D::ColorStyle a0;
         ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp, sipType_QtStackedBar3DVis_QTheme3D_ColorStyle, &a0))
        {
            sipCpp->setColorStyle(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_setColorStyle, doc_QtStackedBar3DVis_QAbstractSeries3D_setColorStyle);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_colorStyle, "colorStyle(self) -> QtStackedBar3DVis.QTheme3D.ColorStyle");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_colorStyle(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_colorStyle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QTheme3D::ColorStyle sipRes;

            sipRes = sipCpp->colorStyle();

            return sipConvertFromEnum(static_cast<int>(sipRes), sipType_QtStackedBar3DVis_QTheme3D_ColorStyle);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_colorStyle, doc_QtStackedBar3DVis_QAbstractSeries3D_colorStyle);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_setBaseColor, "setBaseColor(self, Union[QColor, Qt.GlobalColor])");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setBaseColor(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setBaseColor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QColor* a0;
        int a0State = 0;
         ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp, sipType_QColor, &a0, &a0State))
        {
            sipCpp->setBaseColor(*a0);
            sipReleaseType(const_cast< ::QColor *>(a0),sipType_QColor,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_setBaseColor, doc_QtStackedBar3DVis_QAbstractSeries3D_setBaseColor);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_baseColor, "baseColor(self) -> QColor");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_baseColor(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_baseColor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp))
        {
             ::QColor*sipRes;

            sipRes = new  ::QColor(sipCpp->baseColor());

            return sipConvertFromNewType(sipRes,sipType_QColor,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_baseColor, doc_QtStackedBar3DVis_QAbstractSeries3D_baseColor);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_setBaseGradient, "setBaseGradient(self, QLinearGradient)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setBaseGradient(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setBaseGradient(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QLinearGradient* a0;
         ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp, sipType_QLinearGradient, &a0))
        {
            sipCpp->setBaseGradient(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_setBaseGradient, doc_QtStackedBar3DVis_QAbstractSeries3D_setBaseGradient);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_baseGradient, "baseGradient(self) -> QLinearGradient");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_baseGradient(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_baseGradient(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp))
        {
             ::QLinearGradient*sipRes;

            sipRes = new  ::QLinearGradient(sipCpp->baseGradient());

            return sipConvertFromNewType(sipRes,sipType_QLinearGradient,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_baseGradient, doc_QtStackedBar3DVis_QAbstractSeries3D_baseGradient);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_setSingleHighlightColor, "setSingleHighlightColor(self, Union[QColor, Qt.GlobalColor])");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setSingleHighlightColor(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setSingleHighlightColor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QColor* a0;
        int a0State = 0;
         ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp, sipType_QColor, &a0, &a0State))
        {
            sipCpp->setSingleHighlightColor(*a0);
            sipReleaseType(const_cast< ::QColor *>(a0),sipType_QColor,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_setSingleHighlightColor, doc_QtStackedBar3DVis_QAbstractSeries3D_setSingleHighlightColor);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_singleHighlightColor, "singleHighlightColor(self) -> QColor");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_singleHighlightColor(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_singleHighlightColor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp))
        {
             ::QColor*sipRes;

            sipRes = new  ::QColor(sipCpp->singleHighlightColor());

            return sipConvertFromNewType(sipRes,sipType_QColor,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_singleHighlightColor, doc_QtStackedBar3DVis_QAbstractSeries3D_singleHighlightColor);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_setSingleHighlightGradient, "setSingleHighlightGradient(self, QLinearGradient)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setSingleHighlightGradient(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setSingleHighlightGradient(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QLinearGradient* a0;
         ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp, sipType_QLinearGradient, &a0))
        {
            sipCpp->setSingleHighlightGradient(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_setSingleHighlightGradient, doc_QtStackedBar3DVis_QAbstractSeries3D_setSingleHighlightGradient);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_singleHighlightGradient, "singleHighlightGradient(self) -> QLinearGradient");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_singleHighlightGradient(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_singleHighlightGradient(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp))
        {
             ::QLinearGradient*sipRes;

            sipRes = new  ::QLinearGradient(sipCpp->singleHighlightGradient());

            return sipConvertFromNewType(sipRes,sipType_QLinearGradient,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_singleHighlightGradient, doc_QtStackedBar3DVis_QAbstractSeries3D_singleHighlightGradient);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_setMultiHighlightColor, "setMultiHighlightColor(self, Union[QColor, Qt.GlobalColor])");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setMultiHighlightColor(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setMultiHighlightColor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QColor* a0;
        int a0State = 0;
         ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp, sipType_QColor, &a0, &a0State))
        {
            sipCpp->setMultiHighlightColor(*a0);
            sipReleaseType(const_cast< ::QColor *>(a0),sipType_QColor,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_setMultiHighlightColor, doc_QtStackedBar3DVis_QAbstractSeries3D_setMultiHighlightColor);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_multiHighlightColor, "multiHighlightColor(self) -> QColor");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_multiHighlightColor(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_multiHighlightColor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp))
        {
             ::QColor*sipRes;

            sipRes = new  ::QColor(sipCpp->multiHighlightColor());

            return sipConvertFromNewType(sipRes,sipType_QColor,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_multiHighlightColor, doc_QtStackedBar3DVis_QAbstractSeries3D_multiHighlightColor);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_setMultiHighlightGradient, "setMultiHighlightGradient(self, QLinearGradient)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setMultiHighlightGradient(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setMultiHighlightGradient(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QLinearGradient* a0;
         ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp, sipType_QLinearGradient, &a0))
        {
            sipCpp->setMultiHighlightGradient(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_setMultiHighlightGradient, doc_QtStackedBar3DVis_QAbstractSeries3D_setMultiHighlightGradient);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_multiHighlightGradient, "multiHighlightGradient(self) -> QLinearGradient");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_multiHighlightGradient(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_multiHighlightGradient(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp))
        {
             ::QLinearGradient*sipRes;

            sipRes = new  ::QLinearGradient(sipCpp->multiHighlightGradient());

            return sipConvertFromNewType(sipRes,sipType_QLinearGradient,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_multiHighlightGradient, doc_QtStackedBar3DVis_QAbstractSeries3D_multiHighlightGradient);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_setName, "setName(self, str)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setName(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setName(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp, sipType_QString,&a0, &a0State))
        {
            sipCpp->setName(*a0);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_setName, doc_QtStackedBar3DVis_QAbstractSeries3D_setName);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_name, "name(self) -> str");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_name(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_name(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->name());

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_name, doc_QtStackedBar3DVis_QAbstractSeries3D_name);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_setMeshAxisAndAngle, "setMeshAxisAndAngle(self, QVector3D, float)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setMeshAxisAndAngle(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setMeshAxisAndAngle(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QVector3D* a0;
        float a1;
         ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9f", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp, sipType_QVector3D, &a0, &a1))
        {
            sipCpp->setMeshAxisAndAngle(*a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_setMeshAxisAndAngle, doc_QtStackedBar3DVis_QAbstractSeries3D_setMeshAxisAndAngle);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_itemLabel, "itemLabel(self) -> str");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_itemLabel(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_itemLabel(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->itemLabel());

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_itemLabel, doc_QtStackedBar3DVis_QAbstractSeries3D_itemLabel);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_setItemLabelVisible, "setItemLabelVisible(self, bool)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setItemLabelVisible(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_setItemLabelVisible(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
         ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp, &a0))
        {
            sipCpp->setItemLabelVisible(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_setItemLabelVisible, doc_QtStackedBar3DVis_QAbstractSeries3D_setItemLabelVisible);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAbstractSeries3D_isItemLabelVisible, "isItemLabelVisible(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_isItemLabelVisible(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAbstractSeries3D_isItemLabelVisible(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QAbstractSeries3D, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->isItemLabelVisible();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractSeries3D, sipName_isItemLabelVisible, doc_QtStackedBar3DVis_QAbstractSeries3D_isItemLabelVisible);

    return NULL;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QtStackedBar3DVis_QAbstractSeries3D(void *, const sipTypeDef *);}
static void *cast_QtStackedBar3DVis_QAbstractSeries3D(void *sipCppV, const sipTypeDef *targetType)
{
     ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QAbstractSeries3D *>(sipCppV);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QtStackedBar3DVis_QAbstractSeries3D(void *, int);}
static void release_QtStackedBar3DVis_QAbstractSeries3D(void *sipCppV, int)
{
     ::QtStackedBar3DVis::QAbstractSeries3D *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QAbstractSeries3D *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QtStackedBar3DVis_QAbstractSeries3D(sipSimpleWrapper *);}
static void dealloc_QtStackedBar3DVis_QAbstractSeries3D(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QtStackedBar3DVis_QAbstractSeries3D(sipGetAddress(sipSelf), 0);
    }
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QtStackedBar3DVis_QAbstractSeries3D[] = {{4, 0, 1}};


static PyMethodDef methods_QtStackedBar3DVis_QAbstractSeries3D[] = {
    {SIP_MLNAME_CAST(sipName_baseColor), meth_QtStackedBar3DVis_QAbstractSeries3D_baseColor, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_baseColor)},
    {SIP_MLNAME_CAST(sipName_baseGradient), meth_QtStackedBar3DVis_QAbstractSeries3D_baseGradient, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_baseGradient)},
    {SIP_MLNAME_CAST(sipName_colorStyle), meth_QtStackedBar3DVis_QAbstractSeries3D_colorStyle, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_colorStyle)},
    {SIP_MLNAME_CAST(sipName_isItemLabelVisible), meth_QtStackedBar3DVis_QAbstractSeries3D_isItemLabelVisible, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_isItemLabelVisible)},
    {SIP_MLNAME_CAST(sipName_isMeshSmooth), meth_QtStackedBar3DVis_QAbstractSeries3D_isMeshSmooth, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_isMeshSmooth)},
    {SIP_MLNAME_CAST(sipName_isVisible), meth_QtStackedBar3DVis_QAbstractSeries3D_isVisible, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_isVisible)},
    {SIP_MLNAME_CAST(sipName_itemLabel), meth_QtStackedBar3DVis_QAbstractSeries3D_itemLabel, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_itemLabel)},
    {SIP_MLNAME_CAST(sipName_itemLabelFormat), meth_QtStackedBar3DVis_QAbstractSeries3D_itemLabelFormat, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_itemLabelFormat)},
    {SIP_MLNAME_CAST(sipName_mesh), meth_QtStackedBar3DVis_QAbstractSeries3D_mesh, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_mesh)},
    {SIP_MLNAME_CAST(sipName_meshRotation), meth_QtStackedBar3DVis_QAbstractSeries3D_meshRotation, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_meshRotation)},
    {SIP_MLNAME_CAST(sipName_multiHighlightColor), meth_QtStackedBar3DVis_QAbstractSeries3D_multiHighlightColor, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_multiHighlightColor)},
    {SIP_MLNAME_CAST(sipName_multiHighlightGradient), meth_QtStackedBar3DVis_QAbstractSeries3D_multiHighlightGradient, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_multiHighlightGradient)},
    {SIP_MLNAME_CAST(sipName_name), meth_QtStackedBar3DVis_QAbstractSeries3D_name, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_name)},
    {SIP_MLNAME_CAST(sipName_setBaseColor), meth_QtStackedBar3DVis_QAbstractSeries3D_setBaseColor, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_setBaseColor)},
    {SIP_MLNAME_CAST(sipName_setBaseGradient), meth_QtStackedBar3DVis_QAbstractSeries3D_setBaseGradient, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_setBaseGradient)},
    {SIP_MLNAME_CAST(sipName_setColorStyle), meth_QtStackedBar3DVis_QAbstractSeries3D_setColorStyle, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_setColorStyle)},
    {SIP_MLNAME_CAST(sipName_setItemLabelFormat), meth_QtStackedBar3DVis_QAbstractSeries3D_setItemLabelFormat, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_setItemLabelFormat)},
    {SIP_MLNAME_CAST(sipName_setItemLabelVisible), meth_QtStackedBar3DVis_QAbstractSeries3D_setItemLabelVisible, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_setItemLabelVisible)},
    {SIP_MLNAME_CAST(sipName_setMesh), meth_QtStackedBar3DVis_QAbstractSeries3D_setMesh, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_setMesh)},
    {SIP_MLNAME_CAST(sipName_setMeshAxisAndAngle), meth_QtStackedBar3DVis_QAbstractSeries3D_setMeshAxisAndAngle, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_setMeshAxisAndAngle)},
    {SIP_MLNAME_CAST(sipName_setMeshRotation), meth_QtStackedBar3DVis_QAbstractSeries3D_setMeshRotation, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_setMeshRotation)},
    {SIP_MLNAME_CAST(sipName_setMeshSmooth), meth_QtStackedBar3DVis_QAbstractSeries3D_setMeshSmooth, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_setMeshSmooth)},
    {SIP_MLNAME_CAST(sipName_setMultiHighlightColor), meth_QtStackedBar3DVis_QAbstractSeries3D_setMultiHighlightColor, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_setMultiHighlightColor)},
    {SIP_MLNAME_CAST(sipName_setMultiHighlightGradient), meth_QtStackedBar3DVis_QAbstractSeries3D_setMultiHighlightGradient, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_setMultiHighlightGradient)},
    {SIP_MLNAME_CAST(sipName_setName), meth_QtStackedBar3DVis_QAbstractSeries3D_setName, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_setName)},
    {SIP_MLNAME_CAST(sipName_setSingleHighlightColor), meth_QtStackedBar3DVis_QAbstractSeries3D_setSingleHighlightColor, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_setSingleHighlightColor)},
    {SIP_MLNAME_CAST(sipName_setSingleHighlightGradient), meth_QtStackedBar3DVis_QAbstractSeries3D_setSingleHighlightGradient, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_setSingleHighlightGradient)},
    {SIP_MLNAME_CAST(sipName_setUserDefinedMesh), meth_QtStackedBar3DVis_QAbstractSeries3D_setUserDefinedMesh, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_setUserDefinedMesh)},
    {SIP_MLNAME_CAST(sipName_setVisible), meth_QtStackedBar3DVis_QAbstractSeries3D_setVisible, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_setVisible)},
    {SIP_MLNAME_CAST(sipName_singleHighlightColor), meth_QtStackedBar3DVis_QAbstractSeries3D_singleHighlightColor, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_singleHighlightColor)},
    {SIP_MLNAME_CAST(sipName_singleHighlightGradient), meth_QtStackedBar3DVis_QAbstractSeries3D_singleHighlightGradient, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_singleHighlightGradient)},
    {SIP_MLNAME_CAST(sipName_type), meth_QtStackedBar3DVis_QAbstractSeries3D_type, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_type)},
    {SIP_MLNAME_CAST(sipName_userDefinedMesh), meth_QtStackedBar3DVis_QAbstractSeries3D_userDefinedMesh, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAbstractSeries3D_userDefinedMesh)}
};

static sipEnumMemberDef enummembers_QtStackedBar3DVis_QAbstractSeries3D[] = {
    {sipName_MeshArrow, static_cast<int>( ::QtStackedBar3DVis::QAbstractSeries3D::MeshArrow), 27},
    {sipName_MeshBar, static_cast<int>( ::QtStackedBar3DVis::QAbstractSeries3D::MeshBar), 27},
    {sipName_MeshBevelBar, static_cast<int>( ::QtStackedBar3DVis::QAbstractSeries3D::MeshBevelBar), 27},
    {sipName_MeshBevelCube, static_cast<int>( ::QtStackedBar3DVis::QAbstractSeries3D::MeshBevelCube), 27},
    {sipName_MeshCone, static_cast<int>( ::QtStackedBar3DVis::QAbstractSeries3D::MeshCone), 27},
    {sipName_MeshCube, static_cast<int>( ::QtStackedBar3DVis::QAbstractSeries3D::MeshCube), 27},
    {sipName_MeshCylinder, static_cast<int>( ::QtStackedBar3DVis::QAbstractSeries3D::MeshCylinder), 27},
    {sipName_MeshMinimal, static_cast<int>( ::QtStackedBar3DVis::QAbstractSeries3D::MeshMinimal), 27},
    {sipName_MeshPoint, static_cast<int>( ::QtStackedBar3DVis::QAbstractSeries3D::MeshPoint), 27},
    {sipName_MeshPyramid, static_cast<int>( ::QtStackedBar3DVis::QAbstractSeries3D::MeshPyramid), 27},
    {sipName_MeshSphere, static_cast<int>( ::QtStackedBar3DVis::QAbstractSeries3D::MeshSphere), 27},
    {sipName_MeshUserDefined, static_cast<int>( ::QtStackedBar3DVis::QAbstractSeries3D::MeshUserDefined), 27},
    {sipName_SeriesTypeBar, static_cast<int>( ::QtStackedBar3DVis::QAbstractSeries3D::SeriesTypeBar), 28},
    {sipName_SeriesTypeNone, static_cast<int>( ::QtStackedBar3DVis::QAbstractSeries3D::SeriesTypeNone), 28},
    {sipName_SeriesTypeScatter, static_cast<int>( ::QtStackedBar3DVis::QAbstractSeries3D::SeriesTypeScatter), 28},
    {sipName_SeriesTypeSurface, static_cast<int>( ::QtStackedBar3DVis::QAbstractSeries3D::SeriesTypeSurface), 28},
};


/* Define this type's signals. */
static const pyqt5QtSignal signals_QtStackedBar3DVis_QAbstractSeries3D[] = {
    {"itemLabelVisibilityChanged(bool)", "\1itemLabelVisibilityChanged(self, bool)", 0, 0},
    {"itemLabelChanged(QString)", "\1itemLabelChanged(self, str)", 0, 0},
    {"nameChanged(QString)", "\1nameChanged(self, str)", 0, 0},
    {"multiHighlightGradientChanged(QLinearGradient)", "\1multiHighlightGradientChanged(self, QLinearGradient)", 0, 0},
    {"multiHighlightColorChanged(QColor)", "\1multiHighlightColorChanged(self, Union[QColor, Qt.GlobalColor])", 0, 0},
    {"singleHighlightGradientChanged(QLinearGradient)", "\1singleHighlightGradientChanged(self, QLinearGradient)", 0, 0},
    {"singleHighlightColorChanged(QColor)", "\1singleHighlightColorChanged(self, Union[QColor, Qt.GlobalColor])", 0, 0},
    {"baseGradientChanged(QLinearGradient)", "\1baseGradientChanged(self, QLinearGradient)", 0, 0},
    {"baseColorChanged(QColor)", "\1baseColorChanged(self, Union[QColor, Qt.GlobalColor])", 0, 0},
    {"colorStyleChanged(QTheme3D::ColorStyle)|(QtStackedBar3DVis::QTheme3D::ColorStyle)", "\1colorStyleChanged(self, QtStackedBar3DVis.QTheme3D.ColorStyle)", 0, 0},
    {"userDefinedMeshChanged(QString)", "\1userDefinedMeshChanged(self, str)", 0, 0},
    {"meshRotationChanged(QQuaternion)", "\1meshRotationChanged(self, QQuaternion)", 0, 0},
    {"meshSmoothChanged(bool)", "\1meshSmoothChanged(self, bool)", 0, 0},
    {"meshChanged(QAbstractSeries3D::Mesh)|(QtStackedBar3DVis::QAbstractSeries3D::Mesh)", "\1meshChanged(self, QtStackedBar3DVis.QAbstractSeries3D.Mesh)", 0, 0},
    {"visibilityChanged(bool)", "\1visibilityChanged(self, bool)", 0, 0},
    {"itemLabelFormatChanged(QString)", "\1itemLabelFormatChanged(self, str)", 0, 0},
    {0, 0, 0, 0}
};


static pyqt5ClassPluginDef plugin_QtStackedBar3DVis_QAbstractSeries3D = {
    & ::QtStackedBar3DVis::QAbstractSeries3D::staticMetaObject,
    0,
    signals_QtStackedBar3DVis_QAbstractSeries3D,
    0
};


sipClassTypeDef sipTypeDef_QtStackedBars3D_QtStackedBar3DVis_QAbstractSeries3D = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QtStackedBar3DVis__QAbstractSeries3D,
        {0},
        &plugin_QtStackedBar3DVis_QAbstractSeries3D
    },
    {
        sipNameNr_QAbstractSeries3D,
        {11, 255, 0},
        33, methods_QtStackedBar3DVis_QAbstractSeries3D,
        16, enummembers_QtStackedBar3DVis_QAbstractSeries3D,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    supers_QtStackedBar3DVis_QAbstractSeries3D,
    0,
    0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QtStackedBar3DVis_QAbstractSeries3D,
    0,
    0,
    0,
    release_QtStackedBar3DVis_QAbstractSeries3D,
    cast_QtStackedBar3DVis_QAbstractSeries3D,
    0,
    0,
    0,
    0,
    0,
    0
};
