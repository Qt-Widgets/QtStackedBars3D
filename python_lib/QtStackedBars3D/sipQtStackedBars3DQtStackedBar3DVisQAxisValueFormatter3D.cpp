/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.7
 *
 * Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQtStackedBars3D.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtStackedBars3D.h"

#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 26 "sip/QtStackedBars3D/qabstractinputhandler3d.sip"
#include <QAbstractInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qabstractseries3d.sip"
#include <QAbstractSeries3D.h>
#line 26 "sip/QtStackedBars3D/qabstractdataproxy3d.sip"
#include <QAbstractDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qbarseries3d.sip"
#include <QBarSeries3D.h>
#line 26 "sip/QtStackedBars3D/qbardataitem3d.sip"
#include <QBarDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qbardataproxy3d.sip"
#include <QBarDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qcategoryaxis3d.sip"
#include <QCategoryAxis3D.h>
#line 26 "sip/QtStackedBars3D/qcustomitem3d.sip"
#include <QCustomItem3D.h>
#line 26 "sip/QtStackedBars3D/qcustomlabel3d.sip"
#include <QCustomLabel3D.h>
#line 26 "sip/QtStackedBars3D/qsurfaceseries3d.sip"
#include <QSurfaceSeries3D.h>
#line 26 "sip/QtStackedBars3D/qsurfacedataitem3d.sip"
#include <QSurfaceDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qsurfacedataproxy3d.sip"
#include <QSurfaceDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qtouchinputhandler3d.sip"
#include <QTouchInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qutils3d.sip"
#include <QUtilsGeneric.h>
#line 26 "sip/QtStackedBars3D/qvalueaxis3d.sip"
#include <QValueAxis3D.h>
#line 26 "sip/QtStackedBars3D/qaxisvalueformatter3d.sip"
#include <QAxisValueFormatter3D.h>
#line 32 "sip/QtStackedBars3D/qaxisvalueformatter3d.sip"
#include <QAxisValueFormatter3D.h>
#line 79 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"

#line 28 "/usr/share/sip/PyQt5/QtCore/qobject.sip"
#include <qobject.h>
#line 83 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qlocale.sip"
#include <qlocale.h>
#line 86 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 36 "/usr/share/sip/PyQt5/QtCore/qstringlist.sip"
#include <qstringlist.h>
#line 89 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 134 "/usr/share/sip/PyQt5/QtGui/qpygui_qvector.sip"
#include <qvector.h>
#line 92 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 26 "sip/QtStackedBars3D/qabstractinputhandler3d.sip"
#include <QAbstractInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qabstractseries3d.sip"
#include <QAbstractSeries3D.h>
#line 26 "sip/QtStackedBars3D/qabstractdataproxy3d.sip"
#include <QAbstractDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qbarseries3d.sip"
#include <QBarSeries3D.h>
#line 26 "sip/QtStackedBars3D/qbardataitem3d.sip"
#include <QBarDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qbardataproxy3d.sip"
#include <QBarDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qcategoryaxis3d.sip"
#include <QCategoryAxis3D.h>
#line 26 "sip/QtStackedBars3D/qcustomitem3d.sip"
#include <QCustomItem3D.h>
#line 26 "sip/QtStackedBars3D/qcustomlabel3d.sip"
#include <QCustomLabel3D.h>
#line 26 "sip/QtStackedBars3D/qsurfaceseries3d.sip"
#include <QSurfaceSeries3D.h>
#line 26 "sip/QtStackedBars3D/qsurfacedataitem3d.sip"
#include <QSurfaceDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qsurfacedataproxy3d.sip"
#include <QSurfaceDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qtouchinputhandler3d.sip"
#include <QTouchInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qutils3d.sip"
#include <QUtilsGeneric.h>
#line 26 "sip/QtStackedBars3D/qvalueaxis3d.sip"
#include <QValueAxis3D.h>
#line 32 "sip/QtStackedBars3D/qvalueaxis3d.sip"
#include <QValueAxis3D.h>
#line 143 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 27 "/usr/share/sip/PyQt5/QtCore/qstring.sip"
#include <qstring.h>
#line 146 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 149 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 152 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 247 "/usr/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 155 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 235 "/usr/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 158 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qvariant.sip"
#include <qvariant.h>
#line 161 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 38 "/usr/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 164 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 30 "/usr/share/sip/PyQt5/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 167 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 149 "/usr/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 170 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 173 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qthread.sip"
#include <qthread.h>
#line 176 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 179 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qregexp.sip"
#include <qregexp.h>
#line 182 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 185 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 188 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQAxisValueFormatter3D.cpp"


class sipQtStackedBar3DVis_QAxisValueFormatter3D : public  ::QtStackedBar3DVis::QAxisValueFormatter3D
{
public:
    sipQtStackedBar3DVis_QAxisValueFormatter3D( ::QObject*);
    virtual ~sipQtStackedBar3DVis_QAxisValueFormatter3D();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void populateCopy( ::QtStackedBar3DVis::QAxisValueFormatter3D&) const;
    float valueAt(float) const;
    float positionAt(float) const;
     ::QString stringForValue( ::qreal,const  ::QString&) const;
    void recalculate();
     ::QtStackedBar3DVis::QAxisValueFormatter3D* createNewInstance() const;
    bool event( ::QEvent*);
    bool eventFilter( ::QObject*, ::QEvent*);
    void timerEvent( ::QTimerEvent*);
    void childEvent( ::QChildEvent*);
    void customEvent( ::QEvent*);
    void connectNotify(const  ::QMetaMethod&);
    void disconnectNotify(const  ::QMetaMethod&);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQtStackedBar3DVis_QAxisValueFormatter3D(const sipQtStackedBar3DVis_QAxisValueFormatter3D &);
    sipQtStackedBar3DVis_QAxisValueFormatter3D &operator = (const sipQtStackedBar3DVis_QAxisValueFormatter3D &);

    char sipPyMethods[13];
};

sipQtStackedBar3DVis_QAxisValueFormatter3D::sipQtStackedBar3DVis_QAxisValueFormatter3D( ::QObject*a0):  ::QtStackedBar3DVis::QAxisValueFormatter3D(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQtStackedBar3DVis_QAxisValueFormatter3D::~sipQtStackedBar3DVis_QAxisValueFormatter3D()
{
    sipInstanceDestroyed(sipPySelf);
}

const QMetaObject *sipQtStackedBar3DVis_QAxisValueFormatter3D::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtStackedBars3D_qt_metaobject(sipPySelf,sipType_QtStackedBar3DVis_QAxisValueFormatter3D);

    return  ::QtStackedBar3DVis::QAxisValueFormatter3D::metaObject();
}

int sipQtStackedBar3DVis_QAxisValueFormatter3D::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id =  ::QtStackedBar3DVis::QAxisValueFormatter3D::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtStackedBars3D_qt_metacall(sipPySelf,sipType_QtStackedBar3DVis_QAxisValueFormatter3D,_c,_id,_a);

    return _id;
}

void *sipQtStackedBar3DVis_QAxisValueFormatter3D::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtStackedBars3D_qt_metacast(sipPySelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, _clname, &sipCpp) ? sipCpp :  ::QtStackedBar3DVis::QAxisValueFormatter3D::qt_metacast(_clname));
}

void sipQtStackedBar3DVis_QAxisValueFormatter3D::populateCopy( ::QtStackedBar3DVis::QAxisValueFormatter3D& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[0]),sipPySelf,NULL,sipName_populateCopy);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QAxisValueFormatter3D::populateCopy(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_28(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QtStackedBar3DVis::QAxisValueFormatter3D&);

    sipVH_QtStackedBars3D_28(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

float sipQtStackedBar3DVis_QAxisValueFormatter3D::valueAt(float a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[1]),sipPySelf,NULL,sipName_valueAt);

    if (!sipMeth)
        return  ::QtStackedBar3DVis::QAxisValueFormatter3D::valueAt(a0);

    extern float sipVH_QtStackedBars3D_27(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, float);

    return sipVH_QtStackedBars3D_27(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

float sipQtStackedBar3DVis_QAxisValueFormatter3D::positionAt(float a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[2]),sipPySelf,NULL,sipName_positionAt);

    if (!sipMeth)
        return  ::QtStackedBar3DVis::QAxisValueFormatter3D::positionAt(a0);

    extern float sipVH_QtStackedBars3D_27(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, float);

    return sipVH_QtStackedBars3D_27(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

 ::QString sipQtStackedBar3DVis_QAxisValueFormatter3D::stringForValue( ::qreal a0,const  ::QString& a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[3]),sipPySelf,NULL,sipName_stringForValue);

    if (!sipMeth)
        return  ::QtStackedBar3DVis::QAxisValueFormatter3D::stringForValue(a0,a1);

    extern  ::QString sipVH_QtStackedBars3D_26(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::qreal,const  ::QString&);

    return sipVH_QtStackedBars3D_26(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQtStackedBar3DVis_QAxisValueFormatter3D::recalculate()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_recalculate);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QAxisValueFormatter3D::recalculate();
        return;
    }

    extern void sipVH_QtStackedBars3D_25(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    sipVH_QtStackedBars3D_25(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

 ::QtStackedBar3DVis::QAxisValueFormatter3D* sipQtStackedBar3DVis_QAxisValueFormatter3D::createNewInstance() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[5]),sipPySelf,NULL,sipName_createNewInstance);

    if (!sipMeth)
        return  ::QtStackedBar3DVis::QAxisValueFormatter3D::createNewInstance();

    extern  ::QtStackedBar3DVis::QAxisValueFormatter3D* sipVH_QtStackedBars3D_24(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtStackedBars3D_24(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth);
}

bool sipQtStackedBar3DVis_QAxisValueFormatter3D::event( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return  ::QtStackedBar3DVis::QAxisValueFormatter3D::event(a0);

    extern bool sipVH_QtStackedBars3D_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtStackedBars3D_15(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQtStackedBar3DVis_QAxisValueFormatter3D::eventFilter( ::QObject*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return  ::QtStackedBar3DVis::QAxisValueFormatter3D::eventFilter(a0,a1);

    extern bool sipVH_QtStackedBars3D_16(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*, ::QEvent*);

    return sipVH_QtStackedBars3D_16(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

void sipQtStackedBar3DVis_QAxisValueFormatter3D::timerEvent( ::QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QAxisValueFormatter3D::timerEvent(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_17(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTimerEvent*);

    sipVH_QtStackedBars3D_17(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QAxisValueFormatter3D::childEvent( ::QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QAxisValueFormatter3D::childEvent(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_18(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QChildEvent*);

    sipVH_QtStackedBars3D_18(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QAxisValueFormatter3D::customEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[10],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QAxisValueFormatter3D::customEvent(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_19(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtStackedBars3D_19(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QAxisValueFormatter3D::connectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QAxisValueFormatter3D::connectNotify(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtStackedBars3D_20(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QAxisValueFormatter3D::disconnectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QAxisValueFormatter3D::disconnectNotify(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtStackedBars3D_20(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D_setAllowNegatives, "setAllowNegatives(self, bool)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_setAllowNegatives(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_setAllowNegatives(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
         ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pb", &sipSelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &sipCpp, &a0))
        {
            sipCpp->setAllowNegatives(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAxisValueFormatter3D, sipName_setAllowNegatives, doc_QtStackedBar3DVis_QAxisValueFormatter3D_setAllowNegatives);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D_allowNegatives, "allowNegatives(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_allowNegatives(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_allowNegatives(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->allowNegatives();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAxisValueFormatter3D, sipName_allowNegatives, doc_QtStackedBar3DVis_QAxisValueFormatter3D_allowNegatives);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D_setAllowZero, "setAllowZero(self, bool)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_setAllowZero(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_setAllowZero(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
         ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pb", &sipSelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &sipCpp, &a0))
        {
            sipCpp->setAllowZero(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAxisValueFormatter3D, sipName_setAllowZero, doc_QtStackedBar3DVis_QAxisValueFormatter3D_setAllowZero);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D_allowZero, "allowZero(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_allowZero(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_allowZero(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->allowZero();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAxisValueFormatter3D, sipName_allowZero, doc_QtStackedBar3DVis_QAxisValueFormatter3D_allowZero);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D_createNewInstance, "createNewInstance(self) -> QtStackedBar3DVis.QAxisValueFormatter3D");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_createNewInstance(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_createNewInstance(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QAxisValueFormatter3D*sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAxisValueFormatter3D::createNewInstance() : sipCpp->createNewInstance());

            return sipConvertFromNewType(sipRes,sipType_QtStackedBar3DVis_QAxisValueFormatter3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAxisValueFormatter3D, sipName_createNewInstance, doc_QtStackedBar3DVis_QAxisValueFormatter3D_createNewInstance);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D_recalculate, "recalculate(self)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_recalculate(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_recalculate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAxisValueFormatter3D::recalculate() : sipCpp->recalculate());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAxisValueFormatter3D, sipName_recalculate, doc_QtStackedBar3DVis_QAxisValueFormatter3D_recalculate);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D_stringForValue, "stringForValue(self, float, str) -> str");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_stringForValue(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_stringForValue(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::qreal a0;
        const  ::QString* a1;
        int a1State = 0;
        const  ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pdJ1", &sipSelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &sipCpp, &a0, sipType_QString,&a1, &a1State))
        {
             ::QString*sipRes;

            sipRes = new  ::QString((sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAxisValueFormatter3D::stringForValue(a0,*a1) : sipCpp->stringForValue(a0,*a1)));
            sipReleaseType(const_cast< ::QString *>(a1),sipType_QString,a1State);

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAxisValueFormatter3D, sipName_stringForValue, doc_QtStackedBar3DVis_QAxisValueFormatter3D_stringForValue);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D_positionAt, "positionAt(self, float) -> float");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_positionAt(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_positionAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        float a0;
        const  ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pf", &sipSelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &sipCpp, &a0))
        {
            float sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAxisValueFormatter3D::positionAt(a0) : sipCpp->positionAt(a0));

            return PyFloat_FromDouble((double)sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAxisValueFormatter3D, sipName_positionAt, doc_QtStackedBar3DVis_QAxisValueFormatter3D_positionAt);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D_valueAt, "valueAt(self, float) -> float");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_valueAt(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_valueAt(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        float a0;
        const  ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pf", &sipSelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &sipCpp, &a0))
        {
            float sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAxisValueFormatter3D::valueAt(a0) : sipCpp->valueAt(a0));

            return PyFloat_FromDouble((double)sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAxisValueFormatter3D, sipName_valueAt, doc_QtStackedBar3DVis_QAxisValueFormatter3D_valueAt);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D_populateCopy, "populateCopy(self, QtStackedBar3DVis.QAxisValueFormatter3D)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_populateCopy(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_populateCopy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::QtStackedBar3DVis::QAxisValueFormatter3D* a0;
        const  ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ9", &sipSelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &sipCpp, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &a0))
        {
            (sipSelfWasArg ? sipCpp-> ::QtStackedBar3DVis::QAxisValueFormatter3D::populateCopy(*a0) : sipCpp->populateCopy(*a0));

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAxisValueFormatter3D, sipName_populateCopy, doc_QtStackedBar3DVis_QAxisValueFormatter3D_populateCopy);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D_markDirty, "markDirty(self, labelsChange: bool = False)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_markDirty(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_markDirty(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0 = 0;
         ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp;

        static const char *sipKwdList[] = {
            sipName_labelsChange,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "p|b", &sipSelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &sipCpp, &a0))
        {
            sipCpp->markDirty(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAxisValueFormatter3D, sipName_markDirty, doc_QtStackedBar3DVis_QAxisValueFormatter3D_markDirty);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D_axis, "axis(self) -> QtStackedBar3DVis.QValueAxis3D");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_axis(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_axis(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QValueAxis3D*sipRes;

            sipRes = sipCpp->axis();

            return sipConvertFromType(sipRes,sipType_QtStackedBar3DVis_QValueAxis3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAxisValueFormatter3D, sipName_axis, doc_QtStackedBar3DVis_QAxisValueFormatter3D_axis);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D_gridPositions, "gridPositions(self) -> List[float]");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_gridPositions(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_gridPositions(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &sipCpp))
        {
             ::QVector<float>*sipRes;

            sipRes = &sipCpp->gridPositions();

            return sipConvertFromType(sipRes,sipType_QVector_2200,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAxisValueFormatter3D, sipName_gridPositions, doc_QtStackedBar3DVis_QAxisValueFormatter3D_gridPositions);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D_subGridPositions, "subGridPositions(self) -> List[float]");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_subGridPositions(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_subGridPositions(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &sipCpp))
        {
             ::QVector<float>*sipRes;

            sipRes = &sipCpp->subGridPositions();

            return sipConvertFromType(sipRes,sipType_QVector_2200,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAxisValueFormatter3D, sipName_subGridPositions, doc_QtStackedBar3DVis_QAxisValueFormatter3D_subGridPositions);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D_labelPositions, "labelPositions(self) -> List[float]");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_labelPositions(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_labelPositions(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &sipCpp))
        {
             ::QVector<float>*sipRes;

            sipRes = &sipCpp->labelPositions();

            return sipConvertFromType(sipRes,sipType_QVector_2200,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAxisValueFormatter3D, sipName_labelPositions, doc_QtStackedBar3DVis_QAxisValueFormatter3D_labelPositions);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D_labelStrings, "labelStrings(self) -> List[str]");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_labelStrings(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_labelStrings(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &sipCpp))
        {
             ::QStringList*sipRes;

            sipRes = &sipCpp->labelStrings();

            return sipConvertFromType(sipRes,sipType_QStringList,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAxisValueFormatter3D, sipName_labelStrings, doc_QtStackedBar3DVis_QAxisValueFormatter3D_labelStrings);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D_setLocale, "setLocale(self, QLocale)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_setLocale(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_setLocale(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QLocale* a0;
         ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ9", &sipSelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &sipCpp, sipType_QLocale, &a0))
        {
            sipCpp->setLocale(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAxisValueFormatter3D, sipName_setLocale, doc_QtStackedBar3DVis_QAxisValueFormatter3D_setLocale);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D_locale, "locale(self) -> QLocale");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_locale(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QAxisValueFormatter3D_locale(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &sipCpp))
        {
             ::QLocale*sipRes;

            sipRes = new  ::QLocale(sipCpp->locale());

            return sipConvertFromNewType(sipRes,sipType_QLocale,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAxisValueFormatter3D, sipName_locale, doc_QtStackedBar3DVis_QAxisValueFormatter3D_locale);

    return NULL;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QtStackedBar3DVis_QAxisValueFormatter3D(void *, const sipTypeDef *);}
static void *cast_QtStackedBar3DVis_QAxisValueFormatter3D(void *sipCppV, const sipTypeDef *targetType)
{
     ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QAxisValueFormatter3D *>(sipCppV);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QtStackedBar3DVis_QAxisValueFormatter3D(void *, int);}
static void release_QtStackedBar3DVis_QAxisValueFormatter3D(void *sipCppV, int)
{
     ::QtStackedBar3DVis::QAxisValueFormatter3D *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QAxisValueFormatter3D *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QtStackedBar3DVis_QAxisValueFormatter3D(sipSimpleWrapper *);}
static void dealloc_QtStackedBar3DVis_QAxisValueFormatter3D(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQtStackedBar3DVis_QAxisValueFormatter3D *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QtStackedBar3DVis_QAxisValueFormatter3D(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QtStackedBar3DVis_QAxisValueFormatter3D(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QtStackedBar3DVis_QAxisValueFormatter3D(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQtStackedBar3DVis_QAxisValueFormatter3D *sipCpp = 0;

    {
         ::QObject* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QObject, &a0, sipOwner))
        {
            sipCpp = new sipQtStackedBar3DVis_QAxisValueFormatter3D(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QtStackedBar3DVis_QAxisValueFormatter3D[] = {{4, 0, 1}};


static PyMethodDef methods_QtStackedBar3DVis_QAxisValueFormatter3D[] = {
    {SIP_MLNAME_CAST(sipName_allowNegatives), meth_QtStackedBar3DVis_QAxisValueFormatter3D_allowNegatives, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAxisValueFormatter3D_allowNegatives)},
    {SIP_MLNAME_CAST(sipName_allowZero), meth_QtStackedBar3DVis_QAxisValueFormatter3D_allowZero, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAxisValueFormatter3D_allowZero)},
    {SIP_MLNAME_CAST(sipName_axis), meth_QtStackedBar3DVis_QAxisValueFormatter3D_axis, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAxisValueFormatter3D_axis)},
    {SIP_MLNAME_CAST(sipName_createNewInstance), meth_QtStackedBar3DVis_QAxisValueFormatter3D_createNewInstance, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAxisValueFormatter3D_createNewInstance)},
    {SIP_MLNAME_CAST(sipName_gridPositions), meth_QtStackedBar3DVis_QAxisValueFormatter3D_gridPositions, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAxisValueFormatter3D_gridPositions)},
    {SIP_MLNAME_CAST(sipName_labelPositions), meth_QtStackedBar3DVis_QAxisValueFormatter3D_labelPositions, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAxisValueFormatter3D_labelPositions)},
    {SIP_MLNAME_CAST(sipName_labelStrings), meth_QtStackedBar3DVis_QAxisValueFormatter3D_labelStrings, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAxisValueFormatter3D_labelStrings)},
    {SIP_MLNAME_CAST(sipName_locale), meth_QtStackedBar3DVis_QAxisValueFormatter3D_locale, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAxisValueFormatter3D_locale)},
    {SIP_MLNAME_CAST(sipName_markDirty), (PyCFunction)meth_QtStackedBar3DVis_QAxisValueFormatter3D_markDirty, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAxisValueFormatter3D_markDirty)},
    {SIP_MLNAME_CAST(sipName_populateCopy), meth_QtStackedBar3DVis_QAxisValueFormatter3D_populateCopy, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAxisValueFormatter3D_populateCopy)},
    {SIP_MLNAME_CAST(sipName_positionAt), meth_QtStackedBar3DVis_QAxisValueFormatter3D_positionAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAxisValueFormatter3D_positionAt)},
    {SIP_MLNAME_CAST(sipName_recalculate), meth_QtStackedBar3DVis_QAxisValueFormatter3D_recalculate, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAxisValueFormatter3D_recalculate)},
    {SIP_MLNAME_CAST(sipName_setAllowNegatives), meth_QtStackedBar3DVis_QAxisValueFormatter3D_setAllowNegatives, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAxisValueFormatter3D_setAllowNegatives)},
    {SIP_MLNAME_CAST(sipName_setAllowZero), meth_QtStackedBar3DVis_QAxisValueFormatter3D_setAllowZero, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAxisValueFormatter3D_setAllowZero)},
    {SIP_MLNAME_CAST(sipName_setLocale), meth_QtStackedBar3DVis_QAxisValueFormatter3D_setLocale, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAxisValueFormatter3D_setLocale)},
    {SIP_MLNAME_CAST(sipName_stringForValue), meth_QtStackedBar3DVis_QAxisValueFormatter3D_stringForValue, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAxisValueFormatter3D_stringForValue)},
    {SIP_MLNAME_CAST(sipName_subGridPositions), meth_QtStackedBar3DVis_QAxisValueFormatter3D_subGridPositions, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAxisValueFormatter3D_subGridPositions)},
    {SIP_MLNAME_CAST(sipName_valueAt), meth_QtStackedBar3DVis_QAxisValueFormatter3D_valueAt, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QAxisValueFormatter3D_valueAt)}
};

PyDoc_STRVAR(doc_QtStackedBar3DVis_QAxisValueFormatter3D, "\1QtStackedBar3DVis.QAxisValueFormatter3D(parent: QObject = None)");


static pyqt5ClassPluginDef plugin_QtStackedBar3DVis_QAxisValueFormatter3D = {
    & ::QtStackedBar3DVis::QAxisValueFormatter3D::staticMetaObject,
    0,
    0,
    0
};


sipClassTypeDef sipTypeDef_QtStackedBars3D_QtStackedBar3DVis_QAxisValueFormatter3D = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QtStackedBar3DVis__QAxisValueFormatter3D,
        {0},
        &plugin_QtStackedBar3DVis_QAxisValueFormatter3D
    },
    {
        sipNameNr_QAxisValueFormatter3D,
        {11, 255, 0},
        18, methods_QtStackedBar3DVis_QAxisValueFormatter3D,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QtStackedBar3DVis_QAxisValueFormatter3D,
    -1,
    -1,
    supers_QtStackedBar3DVis_QAxisValueFormatter3D,
    0,
    init_type_QtStackedBar3DVis_QAxisValueFormatter3D,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QtStackedBar3DVis_QAxisValueFormatter3D,
    0,
    0,
    0,
    release_QtStackedBar3DVis_QAxisValueFormatter3D,
    cast_QtStackedBar3DVis_QAxisValueFormatter3D,
    0,
    0,
    0,
    0,
    0,
    0
};
