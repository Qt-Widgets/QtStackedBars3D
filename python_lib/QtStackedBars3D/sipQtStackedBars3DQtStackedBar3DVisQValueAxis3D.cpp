/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.7
 *
 * Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQtStackedBars3D.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtStackedBars3D.h"

#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 26 "sip/QtStackedBars3D/qabstractinputhandler3d.sip"
#include <QAbstractInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qabstractseries3d.sip"
#include <QAbstractSeries3D.h>
#line 26 "sip/QtStackedBars3D/qabstractdataproxy3d.sip"
#include <QAbstractDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qbarseries3d.sip"
#include <QBarSeries3D.h>
#line 26 "sip/QtStackedBars3D/qbardataitem3d.sip"
#include <QBarDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qbardataproxy3d.sip"
#include <QBarDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qcategoryaxis3d.sip"
#include <QCategoryAxis3D.h>
#line 26 "sip/QtStackedBars3D/qcustomitem3d.sip"
#include <QCustomItem3D.h>
#line 26 "sip/QtStackedBars3D/qcustomlabel3d.sip"
#include <QCustomLabel3D.h>
#line 26 "sip/QtStackedBars3D/qsurfaceseries3d.sip"
#include <QSurfaceSeries3D.h>
#line 26 "sip/QtStackedBars3D/qsurfacedataitem3d.sip"
#include <QSurfaceDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qsurfacedataproxy3d.sip"
#include <QSurfaceDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qtouchinputhandler3d.sip"
#include <QTouchInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qutils3d.sip"
#include <QUtilsGeneric.h>
#line 26 "sip/QtStackedBars3D/qvalueaxis3d.sip"
#include <QValueAxis3D.h>
#line 32 "sip/QtStackedBars3D/qvalueaxis3d.sip"
#include <QValueAxis3D.h>
#line 77 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"

#line 28 "/usr/share/sip/PyQt5/QtCore/qobject.sip"
#include <qobject.h>
#line 81 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"
#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 26 "sip/QtStackedBars3D/qabstractinputhandler3d.sip"
#include <QAbstractInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qabstractseries3d.sip"
#include <QAbstractSeries3D.h>
#line 26 "sip/QtStackedBars3D/qabstractdataproxy3d.sip"
#include <QAbstractDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qbarseries3d.sip"
#include <QBarSeries3D.h>
#line 26 "sip/QtStackedBars3D/qbardataitem3d.sip"
#include <QBarDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qbardataproxy3d.sip"
#include <QBarDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qcategoryaxis3d.sip"
#include <QCategoryAxis3D.h>
#line 26 "sip/QtStackedBars3D/qcustomitem3d.sip"
#include <QCustomItem3D.h>
#line 26 "sip/QtStackedBars3D/qcustomlabel3d.sip"
#include <QCustomLabel3D.h>
#line 26 "sip/QtStackedBars3D/qsurfaceseries3d.sip"
#include <QSurfaceSeries3D.h>
#line 26 "sip/QtStackedBars3D/qsurfacedataitem3d.sip"
#include <QSurfaceDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qsurfacedataproxy3d.sip"
#include <QSurfaceDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qtouchinputhandler3d.sip"
#include <QTouchInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qutils3d.sip"
#include <QUtilsGeneric.h>
#line 26 "sip/QtStackedBars3D/qvalueaxis3d.sip"
#include <QValueAxis3D.h>
#line 26 "sip/QtStackedBars3D/qaxisvalueformatter3d.sip"
#include <QAxisValueFormatter3D.h>
#line 32 "sip/QtStackedBars3D/qaxisvalueformatter3d.sip"
#include <QAxisValueFormatter3D.h>
#line 134 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"
#line 27 "/usr/share/sip/PyQt5/QtCore/qstring.sip"
#include <qstring.h>
#line 137 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"
#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 32 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 156 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"
#line 36 "/usr/share/sip/PyQt5/QtCore/qstringlist.sip"
#include <qstringlist.h>
#line 159 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 162 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 165 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"
#line 247 "/usr/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 168 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"
#line 235 "/usr/share/sip/PyQt5/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 171 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qvariant.sip"
#include <qvariant.h>
#line 174 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"
#line 38 "/usr/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 177 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"
#line 30 "/usr/share/sip/PyQt5/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 180 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"
#line 149 "/usr/share/sip/PyQt5/QtCore/qpycore_qlist.sip"
#include <qlist.h>
#line 183 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 186 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qthread.sip"
#include <qthread.h>
#line 189 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 192 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qregexp.sip"
#include <qregexp.h>
#line 195 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qregularexpression.sip"
#include <qregularexpression.h>
#line 198 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"
#line 26 "/usr/share/sip/PyQt5/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 201 "/home/faichele/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQValueAxis3D.cpp"


class sipQtStackedBar3DVis_QValueAxis3D : public  ::QtStackedBar3DVis::QValueAxis3D
{
public:
    sipQtStackedBar3DVis_QValueAxis3D( ::QObject*);
    virtual ~sipQtStackedBar3DVis_QValueAxis3D();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void disconnectNotify(const  ::QMetaMethod&);
    void connectNotify(const  ::QMetaMethod&);
    void customEvent( ::QEvent*);
    void childEvent( ::QChildEvent*);
    void timerEvent( ::QTimerEvent*);
    bool eventFilter( ::QObject*, ::QEvent*);
    bool event( ::QEvent*);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQtStackedBar3DVis_QValueAxis3D(const sipQtStackedBar3DVis_QValueAxis3D &);
    sipQtStackedBar3DVis_QValueAxis3D &operator = (const sipQtStackedBar3DVis_QValueAxis3D &);

    char sipPyMethods[7];
};

sipQtStackedBar3DVis_QValueAxis3D::sipQtStackedBar3DVis_QValueAxis3D( ::QObject*a0):  ::QtStackedBar3DVis::QValueAxis3D(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQtStackedBar3DVis_QValueAxis3D::~sipQtStackedBar3DVis_QValueAxis3D()
{
    sipInstanceDestroyed(sipPySelf);
}

const QMetaObject *sipQtStackedBar3DVis_QValueAxis3D::metaObject() const
{
    if (sipGetInterpreter())
        return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : sip_QtStackedBars3D_qt_metaobject(sipPySelf,sipType_QtStackedBar3DVis_QValueAxis3D);

    return  ::QtStackedBar3DVis::QValueAxis3D::metaObject();
}

int sipQtStackedBar3DVis_QValueAxis3D::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id =  ::QtStackedBar3DVis::QValueAxis3D::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtStackedBars3D_qt_metacall(sipPySelf,sipType_QtStackedBar3DVis_QValueAxis3D,_c,_id,_a);

    return _id;
}

void *sipQtStackedBar3DVis_QValueAxis3D::qt_metacast(const char *_clname)
{
    void *sipCpp;

    return (sip_QtStackedBars3D_qt_metacast(sipPySelf, sipType_QtStackedBar3DVis_QValueAxis3D, _clname, &sipCpp) ? sipCpp :  ::QtStackedBar3DVis::QValueAxis3D::qt_metacast(_clname));
}

void sipQtStackedBar3DVis_QValueAxis3D::disconnectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QValueAxis3D::disconnectNotify(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtStackedBars3D_20(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QValueAxis3D::connectNotify(const  ::QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QValueAxis3D::connectNotify(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const  ::QMetaMethod&);

    sipVH_QtStackedBars3D_20(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QValueAxis3D::customEvent( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QValueAxis3D::customEvent(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_19(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    sipVH_QtStackedBars3D_19(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QValueAxis3D::childEvent( ::QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QValueAxis3D::childEvent(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_18(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QChildEvent*);

    sipVH_QtStackedBars3D_18(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

void sipQtStackedBar3DVis_QValueAxis3D::timerEvent( ::QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
         ::QtStackedBar3DVis::QValueAxis3D::timerEvent(a0);
        return;
    }

    extern void sipVH_QtStackedBars3D_17(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QTimerEvent*);

    sipVH_QtStackedBars3D_17(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}

bool sipQtStackedBar3DVis_QValueAxis3D::eventFilter( ::QObject*a0, ::QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return  ::QtStackedBar3DVis::QValueAxis3D::eventFilter(a0,a1);

    extern bool sipVH_QtStackedBars3D_16(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QObject*, ::QEvent*);

    return sipVH_QtStackedBars3D_16(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0, a1);
}

bool sipQtStackedBar3DVis_QValueAxis3D::event( ::QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return  ::QtStackedBar3DVis::QValueAxis3D::event(a0);

    extern bool sipVH_QtStackedBars3D_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *,  ::QEvent*);

    return sipVH_QtStackedBars3D_15(sipGILState, sipImportedVirtErrorHandlers_QtStackedBars3D_QtCore[0].iveh_handler, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QValueAxis3D_setSegmentCount, "setSegmentCount(self, int)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_setSegmentCount(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_setSegmentCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
         ::QtStackedBar3DVis::QValueAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QtStackedBar3DVis_QValueAxis3D, &sipCpp, &a0))
        {
            sipCpp->setSegmentCount(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QValueAxis3D, sipName_setSegmentCount, doc_QtStackedBar3DVis_QValueAxis3D_setSegmentCount);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QValueAxis3D_segmentCount, "segmentCount(self) -> int");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_segmentCount(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_segmentCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QValueAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QValueAxis3D, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->segmentCount();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QValueAxis3D, sipName_segmentCount, doc_QtStackedBar3DVis_QValueAxis3D_segmentCount);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QValueAxis3D_setSubSegmentCount, "setSubSegmentCount(self, int)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_setSubSegmentCount(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_setSubSegmentCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
         ::QtStackedBar3DVis::QValueAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QtStackedBar3DVis_QValueAxis3D, &sipCpp, &a0))
        {
            sipCpp->setSubSegmentCount(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QValueAxis3D, sipName_setSubSegmentCount, doc_QtStackedBar3DVis_QValueAxis3D_setSubSegmentCount);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QValueAxis3D_subSegmentCount, "subSegmentCount(self) -> int");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_subSegmentCount(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_subSegmentCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QValueAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QValueAxis3D, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->subSegmentCount();

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QValueAxis3D, sipName_subSegmentCount, doc_QtStackedBar3DVis_QValueAxis3D_subSegmentCount);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QValueAxis3D_setLabelFormat, "setLabelFormat(self, str)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_setLabelFormat(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_setLabelFormat(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QString* a0;
        int a0State = 0;
         ::QtStackedBar3DVis::QValueAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QtStackedBar3DVis_QValueAxis3D, &sipCpp, sipType_QString,&a0, &a0State))
        {
            sipCpp->setLabelFormat(*a0);
            sipReleaseType(const_cast< ::QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QValueAxis3D, sipName_setLabelFormat, doc_QtStackedBar3DVis_QValueAxis3D_setLabelFormat);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QValueAxis3D_labelFormat, "labelFormat(self) -> str");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_labelFormat(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_labelFormat(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QValueAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QValueAxis3D, &sipCpp))
        {
             ::QString*sipRes;

            sipRes = new  ::QString(sipCpp->labelFormat());

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QValueAxis3D, sipName_labelFormat, doc_QtStackedBar3DVis_QValueAxis3D_labelFormat);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QValueAxis3D_setFormatter, "setFormatter(self, QtStackedBar3DVis.QAxisValueFormatter3D)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_setFormatter(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_setFormatter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QAxisValueFormatter3D* a0;
         ::QtStackedBar3DVis::QValueAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QtStackedBar3DVis_QValueAxis3D, &sipCpp, sipType_QtStackedBar3DVis_QAxisValueFormatter3D, &a0))
        {
            sipCpp->setFormatter(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QValueAxis3D, sipName_setFormatter, doc_QtStackedBar3DVis_QValueAxis3D_setFormatter);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QValueAxis3D_formatter, "formatter(self) -> QtStackedBar3DVis.QAxisValueFormatter3D");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_formatter(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_formatter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QValueAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QValueAxis3D, &sipCpp))
        {
             ::QtStackedBar3DVis::QAxisValueFormatter3D*sipRes;

            sipRes = sipCpp->formatter();

            return sipConvertFromType(sipRes,sipType_QtStackedBar3DVis_QAxisValueFormatter3D,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QValueAxis3D, sipName_formatter, doc_QtStackedBar3DVis_QValueAxis3D_formatter);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QValueAxis3D_setReversed, "setReversed(self, bool)");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_setReversed(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_setReversed(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
         ::QtStackedBar3DVis::QValueAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QtStackedBar3DVis_QValueAxis3D, &sipCpp, &a0))
        {
            sipCpp->setReversed(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QValueAxis3D, sipName_setReversed, doc_QtStackedBar3DVis_QValueAxis3D_setReversed);

    return NULL;
}


PyDoc_STRVAR(doc_QtStackedBar3DVis_QValueAxis3D_reversed, "reversed(self) -> bool");

extern "C" {static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_reversed(PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_QValueAxis3D_reversed(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QValueAxis3D *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QtStackedBar3DVis_QValueAxis3D, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->reversed();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QValueAxis3D, sipName_reversed, doc_QtStackedBar3DVis_QValueAxis3D_reversed);

    return NULL;
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_QtStackedBar3DVis_QValueAxis3D(void *, const sipTypeDef *);}
static void *cast_QtStackedBar3DVis_QValueAxis3D(void *sipCppV, const sipTypeDef *targetType)
{
     ::QtStackedBar3DVis::QValueAxis3D *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QValueAxis3D *>(sipCppV);

    if (targetType == sipType_QtStackedBar3DVis_QAbstractAxis3D)
        return static_cast< ::QtStackedBar3DVis::QAbstractAxis3D *>(sipCpp);

    if (targetType == sipType_QObject)
        return static_cast< ::QObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_QtStackedBar3DVis_QValueAxis3D(void *, int);}
static void release_QtStackedBar3DVis_QValueAxis3D(void *sipCppV, int)
{
     ::QtStackedBar3DVis::QValueAxis3D *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QValueAxis3D *>(sipCppV);

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();
}


extern "C" {static void dealloc_QtStackedBar3DVis_QValueAxis3D(sipSimpleWrapper *);}
static void dealloc_QtStackedBar3DVis_QValueAxis3D(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerivedClass(sipSelf))
        reinterpret_cast<sipQtStackedBar3DVis_QValueAxis3D *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsOwnedByPython(sipSelf))
    {
        release_QtStackedBar3DVis_QValueAxis3D(sipGetAddress(sipSelf), sipIsDerivedClass(sipSelf));
    }
}


extern "C" {static void *init_type_QtStackedBar3DVis_QValueAxis3D(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QtStackedBar3DVis_QValueAxis3D(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQtStackedBar3DVis_QValueAxis3D *sipCpp = 0;

    {
         ::QObject* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QObject, &a0, sipOwner))
        {
            sipCpp = new sipQtStackedBar3DVis_QValueAxis3D(a0);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QtStackedBar3DVis_QValueAxis3D[] = {{12, 255, 1}};


static PyMethodDef methods_QtStackedBar3DVis_QValueAxis3D[] = {
    {SIP_MLNAME_CAST(sipName_formatter), meth_QtStackedBar3DVis_QValueAxis3D_formatter, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QValueAxis3D_formatter)},
    {SIP_MLNAME_CAST(sipName_labelFormat), meth_QtStackedBar3DVis_QValueAxis3D_labelFormat, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QValueAxis3D_labelFormat)},
    {SIP_MLNAME_CAST(sipName_reversed), meth_QtStackedBar3DVis_QValueAxis3D_reversed, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QValueAxis3D_reversed)},
    {SIP_MLNAME_CAST(sipName_segmentCount), meth_QtStackedBar3DVis_QValueAxis3D_segmentCount, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QValueAxis3D_segmentCount)},
    {SIP_MLNAME_CAST(sipName_setFormatter), meth_QtStackedBar3DVis_QValueAxis3D_setFormatter, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QValueAxis3D_setFormatter)},
    {SIP_MLNAME_CAST(sipName_setLabelFormat), meth_QtStackedBar3DVis_QValueAxis3D_setLabelFormat, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QValueAxis3D_setLabelFormat)},
    {SIP_MLNAME_CAST(sipName_setReversed), meth_QtStackedBar3DVis_QValueAxis3D_setReversed, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QValueAxis3D_setReversed)},
    {SIP_MLNAME_CAST(sipName_setSegmentCount), meth_QtStackedBar3DVis_QValueAxis3D_setSegmentCount, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QValueAxis3D_setSegmentCount)},
    {SIP_MLNAME_CAST(sipName_setSubSegmentCount), meth_QtStackedBar3DVis_QValueAxis3D_setSubSegmentCount, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QValueAxis3D_setSubSegmentCount)},
    {SIP_MLNAME_CAST(sipName_subSegmentCount), meth_QtStackedBar3DVis_QValueAxis3D_subSegmentCount, METH_VARARGS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_QValueAxis3D_subSegmentCount)}
};

PyDoc_STRVAR(doc_QtStackedBar3DVis_QValueAxis3D, "\1QtStackedBar3DVis.QValueAxis3D(parent: QObject = None)");


/* Define this type's signals. */
static const pyqt5QtSignal signals_QtStackedBar3DVis_QValueAxis3D[] = {
    {"reversedChanged(bool)", "\1reversedChanged(self, bool)", 0, 0},
    {"formatterChanged(QAxisValueFormatter3D*)", "\1formatterChanged(self, QtStackedBar3DVis.QAxisValueFormatter3D)", 0, 0},
    {"labelFormatChanged(QString)", "\1labelFormatChanged(self, str)", 0, 0},
    {"subSegmentCountChanged(int)", "\1subSegmentCountChanged(self, int)", 0, 0},
    {"segmentCountChanged(int)", "\1segmentCountChanged(self, int)", 0, 0},
    {0, 0, 0, 0}
};


static pyqt5ClassPluginDef plugin_QtStackedBar3DVis_QValueAxis3D = {
    & ::QtStackedBar3DVis::QValueAxis3D::staticMetaObject,
    0,
    signals_QtStackedBar3DVis_QValueAxis3D,
    0
};


sipClassTypeDef sipTypeDef_QtStackedBars3D_QtStackedBar3DVis_QValueAxis3D = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_SUPER_INIT|SIP_TYPE_LIMITED_API|SIP_TYPE_CLASS,
        sipNameNr_QtStackedBar3DVis__QValueAxis3D,
        {0},
        &plugin_QtStackedBar3DVis_QValueAxis3D
    },
    {
        sipNameNr_QValueAxis3D,
        {11, 255, 0},
        10, methods_QtStackedBar3DVis_QValueAxis3D,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QtStackedBar3DVis_QValueAxis3D,
    -1,
    -1,
    supers_QtStackedBar3DVis_QValueAxis3D,
    0,
    init_type_QtStackedBar3DVis_QValueAxis3D,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QtStackedBar3DVis_QValueAxis3D,
    0,
    0,
    0,
    release_QtStackedBar3DVis_QValueAxis3D,
    cast_QtStackedBar3DVis_QValueAxis3D,
    0,
    0,
    0,
    0,
    0,
    0
};
