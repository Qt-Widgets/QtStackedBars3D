/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.12
 *
 * Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQtStackedBars3D.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtStackedBars3D.h"

#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qstackedbars3d.sip"
#include <QStackedBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 26 "sip/QtStackedBars3D/qabstractinputhandler3d.sip"
#include <QAbstractInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qabstractseries3d.sip"
#include <QAbstractSeries3D.h>
#line 26 "sip/QtStackedBars3D/qabstractdataproxy3d.sip"
#include <QAbstractDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qbarseries3d.sip"
#include <QBarSeries3D.h>
#line 26 "sip/QtStackedBars3D/qbardataitem3d.sip"
#include <QBarDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qbardataproxy3d.sip"
#include <QBarDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qstackedbarseries3d.sip"
#include <QStackedBarSeries3D.h>
#line 26 "sip/QtStackedBars3D/qstackedbardataitem3d.sip"
#include <QStackedBarDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qstackedbardataproxy3d.sip"
#include <QStackedBarDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qcategoryaxis3d.sip"
#include <QCategoryAxis3D.h>
#line 26 "sip/QtStackedBars3D/qcustomitem3d.sip"
#include <QCustomItem3D.h>
#line 26 "sip/QtStackedBars3D/qcustomlabel3d.sip"
#include <QCustomLabel3D.h>
#line 26 "sip/QtStackedBars3D/qsurfaceseries3d.sip"
#include <QSurfaceSeries3D.h>
#line 26 "sip/QtStackedBars3D/qsurfacedataitem3d.sip"
#include <QSurfaceDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qsurfacedataproxy3d.sip"
#include <QSurfaceDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qtouchinputhandler3d.sip"
#include <QTouchInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qutils3d.sip"
#include <QUtilsGeneric.h>
#line 26 "sip/QtStackedBars3D/qvalueaxis3d.sip"
#include <QValueAxis3D.h>
#line 26 "sip/QtStackedBars3D/qaxisvalueformatter3d.sip"
#include <QAxisValueFormatter3D.h>
#line 85 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVis.cpp"

#line 26 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtGui/qsurfaceformat.sip"
#include <qsurfaceformat.h>
#line 89 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVis.cpp"


PyDoc_STRVAR(doc_QtStackedBar3DVis_qDefaultSurfaceFormat, "qDefaultSurfaceFormat(antialias: bool = True) -> QSurfaceFormat");

extern "C" {static PyObject *meth_QtStackedBar3DVis_qDefaultSurfaceFormat(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QtStackedBar3DVis_qDefaultSurfaceFormat(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0 = 1;

        static const char *sipKwdList[] = {
            sipName_antialias,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "|b", &a0))
        {
             ::QSurfaceFormat*sipRes;

            sipRes = new  ::QSurfaceFormat( ::QtStackedBar3DVis::qDefaultSurfaceFormat(a0));

            return sipConvertFromNewType(sipRes,sipType_QSurfaceFormat,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_qDefaultSurfaceFormat, doc_QtStackedBar3DVis_qDefaultSurfaceFormat);

    return NULL;
}


static PyMethodDef methods_QtStackedBar3DVis[] = {
    {SIP_MLNAME_CAST(sipName_qDefaultSurfaceFormat), (PyCFunction)meth_QtStackedBar3DVis_qDefaultSurfaceFormat, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QtStackedBar3DVis_qDefaultSurfaceFormat)}
};


static pyqt5ClassPluginDef plugin_QtStackedBar3DVis = {
    0,
    0,
    0,
    0
};


sipClassTypeDef sipTypeDef_QtStackedBars3D_QtStackedBar3DVis = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_NAMESPACE,
        sipNameNr_QtStackedBar3DVis,
        {0},
        &plugin_QtStackedBar3DVis
    },
    {
        sipNameNr_QtStackedBar3DVis,
        {0, 0, 1},
        1, methods_QtStackedBar3DVis,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    0,
    0,
    0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
};
