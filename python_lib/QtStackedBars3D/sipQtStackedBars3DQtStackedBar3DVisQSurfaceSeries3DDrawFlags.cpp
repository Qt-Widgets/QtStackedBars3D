/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.12
 *
 * Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQtStackedBars3D.
 * 
 * This file may be used under the terms of the GNU General Public License
 * version 3.0 as published by the Free Software Foundation and appearing in
 * the file LICENSE included in the packaging of this file.  Please review the
 * following information to ensure the GNU General Public License version 3.0
 * requirements will be met: http://www.gnu.org/copyleft/gpl.html.
 * 
 * If you do not wish to use this file under the terms of the GPL version 3.0
 * then you may purchase a commercial license.  For more information contact
 * info@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtStackedBars3D.h"

#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qstackedbars3d.sip"
#include <QStackedBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 26 "sip/QtStackedBars3D/qabstractinputhandler3d.sip"
#include <QAbstractInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qabstractseries3d.sip"
#include <QAbstractSeries3D.h>
#line 26 "sip/QtStackedBars3D/qabstractdataproxy3d.sip"
#include <QAbstractDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qbarseries3d.sip"
#include <QBarSeries3D.h>
#line 26 "sip/QtStackedBars3D/qbardataitem3d.sip"
#include <QBarDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qbardataproxy3d.sip"
#include <QBarDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qstackedbarseries3d.sip"
#include <QStackedBarSeries3D.h>
#line 26 "sip/QtStackedBars3D/qstackedbardataitem3d.sip"
#include <QStackedBarDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qstackedbardataproxy3d.sip"
#include <QStackedBarDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qcategoryaxis3d.sip"
#include <QCategoryAxis3D.h>
#line 26 "sip/QtStackedBars3D/qcustomitem3d.sip"
#include <QCustomItem3D.h>
#line 26 "sip/QtStackedBars3D/qcustomlabel3d.sip"
#include <QCustomLabel3D.h>
#line 26 "sip/QtStackedBars3D/qsurfaceseries3d.sip"
#include <QSurfaceSeries3D.h>
#line 32 "sip/QtStackedBars3D/qsurfaceseries3d.sip"
#include <QSurfaceSeries3D.h>
#line 75 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQSurfaceSeries3DDrawFlags.cpp"

#line 26 "sip/QtStackedBars3D/qbars3d.sip"
#include <QBars3D.h>
#line 26 "sip/QtStackedBars3D/qstackedbars3d.sip"
#include <QStackedBars3D.h>
#line 26 "sip/QtStackedBars3D/qcamera3d.sip"
#include <QCamera3D.h>
#line 26 "sip/QtStackedBars3D/qinputhandler3d.sip"
#include <QInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qlight3d.sip"
#include <QLight3D.h>
#line 26 "sip/QtStackedBars3D/qobject3d.sip"
#include <QObject3D.h>
#line 26 "sip/QtStackedBars3D/qscene3d.sip"
#include <QScene3D.h>
#line 26 "sip/QtStackedBars3D/qtheme3d.sip"
#include <QTheme3D.h>
#line 26 "sip/QtStackedBars3D/qabstractaxis3d.sip"
#include <QAbstractAxis3D.h>
#line 26 "sip/QtStackedBars3D/qabstractgraph3d.sip"
#include <QAbstractGraph3D.h>
#line 26 "sip/QtStackedBars3D/qabstractinputhandler3d.sip"
#include <QAbstractInputHandler3D.h>
#line 26 "sip/QtStackedBars3D/qabstractseries3d.sip"
#include <QAbstractSeries3D.h>
#line 26 "sip/QtStackedBars3D/qabstractdataproxy3d.sip"
#include <QAbstractDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qbarseries3d.sip"
#include <QBarSeries3D.h>
#line 26 "sip/QtStackedBars3D/qbardataitem3d.sip"
#include <QBarDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qbardataproxy3d.sip"
#include <QBarDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qstackedbarseries3d.sip"
#include <QStackedBarSeries3D.h>
#line 26 "sip/QtStackedBars3D/qstackedbardataitem3d.sip"
#include <QStackedBarDataItem3D.h>
#line 26 "sip/QtStackedBars3D/qstackedbardataproxy3d.sip"
#include <QStackedBarDataProxy3D.h>
#line 26 "sip/QtStackedBars3D/qcategoryaxis3d.sip"
#include <QCategoryAxis3D.h>
#line 26 "sip/QtStackedBars3D/qcustomitem3d.sip"
#include <QCustomItem3D.h>
#line 26 "sip/QtStackedBars3D/qcustomlabel3d.sip"
#include <QCustomLabel3D.h>
#line 26 "sip/QtStackedBars3D/qsurfaceseries3d.sip"
#include <QSurfaceSeries3D.h>
#line 32 "sip/QtStackedBars3D/qsurfaceseries3d.sip"
#include <QSurfaceSeries3D.h>
#line 125 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQSurfaceSeries3DDrawFlags.cpp"


extern "C" {static long slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___hash__(PyObject *);}
static long slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___hash__(PyObject *sipSelf)
{
     ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags));

    if (!sipCpp)
        return 0;


    {
        {
            long sipRes = 0;

#line 116 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qglobal.sip"
        sipRes = sipCpp->operator QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags::Int();
#line 143 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQSurfaceSeries3DDrawFlags.cpp"

            return sipRes;
        }
    }

    return 0;
}


extern "C" {static int slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___bool__(PyObject *);}
static int slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___bool__(PyObject *sipSelf)
{
     ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags));

    if (!sipCpp)
        return -1;


    {
        {
            int sipRes = 0;

#line 111 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qglobal.sip"
        sipRes = (sipCpp->operator QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags::Int() != 0);
#line 168 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQSurfaceSeries3DDrawFlags.cpp"

            return sipRes;
        }
    }

    return 0;
}


extern "C" {static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___ne__(PyObject *,PyObject *);}
static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___ne__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags));

    if (!sipCpp)
        return 0;

    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags* a0;
        int a0State = 0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J1", sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags, &a0, &a0State))
        {
            bool sipRes = 0;

#line 106 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qglobal.sip"
        sipRes = (sipCpp->operator QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags::Int() != a0->operator QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags::Int());
#line 198 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQSurfaceSeries3DDrawFlags.cpp"
            sipReleaseType(const_cast< ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *>(a0),sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,a0State);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    return sipPySlotExtend(&sipModuleAPI_QtStackedBars3D, ne_slot, sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___eq__(PyObject *,PyObject *);}
static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___eq__(PyObject *sipSelf,PyObject *sipArg)
{
     ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags));

    if (!sipCpp)
        return 0;

    PyObject *sipParseErr = NULL;

    {
        const  ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags* a0;
        int a0State = 0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J1", sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags, &a0, &a0State))
        {
            bool sipRes = 0;

#line 101 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qglobal.sip"
        sipRes = (sipCpp->operator QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags::Int() == a0->operator QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags::Int());
#line 234 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQSurfaceSeries3DDrawFlags.cpp"
            sipReleaseType(const_cast< ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *>(a0),sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,a0State);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    return sipPySlotExtend(&sipModuleAPI_QtStackedBars3D, eq_slot, sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___ixor__(PyObject *,PyObject *);}
static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___ixor__(PyObject *sipSelf,PyObject *sipArg)
{
    if (!PyObject_TypeCheck(sipSelf, sipTypeAsPyTypeObject(sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags)))
    {
        Py_INCREF(Py_NotImplemented);
        return Py_NotImplemented;
    }

     ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags));

    if (!sipCpp)
        return 0;

    PyObject *sipParseErr = NULL;

    {
        int a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1i", &a0))
        {
#line 95 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qglobal.sip"
        *sipCpp = QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags(*sipCpp ^ a0);
#line 273 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQSurfaceSeries3DDrawFlags.cpp"

            Py_INCREF(sipSelf);
            return sipSelf;
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    PyErr_Clear();

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}


extern "C" {static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___xor__(PyObject *,PyObject *);}
static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___xor__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags* a0;
        int a0State = 0;
        int a1;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "J1i", sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags, &a0, &a0State, &a1))
        {
             ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags*sipRes;

            sipRes = new  ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags((*a0 ^ a1));
            sipReleaseType(a0,sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,a0State);

            return sipConvertFromNewType(sipRes,sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    return sipPySlotExtend(&sipModuleAPI_QtStackedBars3D, xor_slot, NULL, sipArg0, sipArg1);
}


extern "C" {static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___ior__(PyObject *,PyObject *);}
static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___ior__(PyObject *sipSelf,PyObject *sipArg)
{
    if (!PyObject_TypeCheck(sipSelf, sipTypeAsPyTypeObject(sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags)))
    {
        Py_INCREF(Py_NotImplemented);
        return Py_NotImplemented;
    }

     ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags));

    if (!sipCpp)
        return 0;

    PyObject *sipParseErr = NULL;

    {
        int a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1i", &a0))
        {
#line 89 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qglobal.sip"
        *sipCpp = QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags(*sipCpp | a0);
#line 345 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQSurfaceSeries3DDrawFlags.cpp"

            Py_INCREF(sipSelf);
            return sipSelf;
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    PyErr_Clear();

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}


extern "C" {static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___or__(PyObject *,PyObject *);}
static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags* a0;
        int a0State = 0;
        int a1;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "J1i", sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags, &a0, &a0State, &a1))
        {
             ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags*sipRes;

            sipRes = new  ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags((*a0 | a1));
            sipReleaseType(a0,sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,a0State);

            return sipConvertFromNewType(sipRes,sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    return sipPySlotExtend(&sipModuleAPI_QtStackedBars3D, or_slot, NULL, sipArg0, sipArg1);
}


extern "C" {static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___iand__(PyObject *,PyObject *);}
static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___iand__(PyObject *sipSelf,PyObject *sipArg)
{
    if (!PyObject_TypeCheck(sipSelf, sipTypeAsPyTypeObject(sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags)))
    {
        Py_INCREF(Py_NotImplemented);
        return Py_NotImplemented;
    }

     ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags));

    if (!sipCpp)
        return 0;

    PyObject *sipParseErr = NULL;

    {
        int a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1i", &a0))
        {
            sipCpp-> ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags::operator&=(a0);

            Py_INCREF(sipSelf);
            return sipSelf;
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    PyErr_Clear();

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}


extern "C" {static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___and__(PyObject *,PyObject *);}
static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___and__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
         ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags* a0;
        int a0State = 0;
        int a1;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "J1i", sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags, &a0, &a0State, &a1))
        {
             ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags*sipRes;

            sipRes = new  ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags((*a0 & a1));
            sipReleaseType(a0,sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,a0State);

            return sipConvertFromNewType(sipRes,sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    return sipPySlotExtend(&sipModuleAPI_QtStackedBars3D, and_slot, NULL, sipArg0, sipArg1);
}


extern "C" {static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___invert__(PyObject *);}
static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___invert__(PyObject *sipSelf)
{
     ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags));

    if (!sipCpp)
        return 0;


    {
        {
             ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags*sipRes;

            sipRes = new  ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags(~(*sipCpp));

            return sipConvertFromNewType(sipRes,sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,NULL);
        }
    }

    return 0;
}


extern "C" {static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___int__(PyObject *);}
static PyObject *slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___int__(PyObject *sipSelf)
{
     ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *sipCpp = reinterpret_cast< ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags));

    if (!sipCpp)
        return 0;


    {
        {
            int sipRes;

            sipRes = *sipCpp;

            return SIPLong_FromLong(sipRes);
        }
    }

    return 0;
}


/* Call the instance's destructor. */
extern "C" {static void release_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags(void *, int);}
static void release_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags(void *sipCppV, int)
{
    delete reinterpret_cast< ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *>(sipCppV);
}


extern "C" {static void assign_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags(void *, SIP_SSIZE_T, void *);}
static void assign_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *>(sipSrc);
}


extern "C" {static void *array_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags(SIP_SSIZE_T);}
static void *array_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags(SIP_SSIZE_T sipNrElem)
{
    return new  ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags[sipNrElem];
}


extern "C" {static void *copy_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags(const void *, SIP_SSIZE_T);}
static void *copy_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new  ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags(reinterpret_cast<const  ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags(sipSimpleWrapper *);}
static void dealloc_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            sipCpp = new  ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags();

            return sipCpp;
        }
    }

    {
        int a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "i", &a0))
        {
            sipCpp = new  ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags(a0);

            return sipCpp;
        }
    }

    {
        const  ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags* a0;
        int a0State = 0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J1", sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags, &a0, &a0State))
        {
            sipCpp = new  ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags(*a0);
            sipReleaseType(const_cast< ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *>(a0),sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,a0State);

            return sipCpp;
        }
    }

    return NULL;
}


extern "C" {static int convertTo_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags(PyObject *, void **, int *, PyObject *);}
static int convertTo_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
     ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags **sipCppPtr = reinterpret_cast< ::QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags **>(sipCppPtrV);

#line 121 "/trunet/data/volume2/virtualenvs/zyklio_python_packages_dbg/share/sip/PyQt5/QtCore/qglobal.sip"
// Allow an instance of the base enum whenever a QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags is expected.

if (sipIsErr == NULL)
    return (PyObject_TypeCheck(sipPy, sipTypeAsPyTypeObject(sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlag)) ||
            sipCanConvertToType(sipPy, sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags, SIP_NO_CONVERTORS));

if (PyObject_TypeCheck(sipPy, sipTypeAsPyTypeObject(sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlag)))
{
    *sipCppPtr = new QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags(int(SIPLong_AsLong(sipPy)));

    return sipGetState(sipTransferObj);
}

*sipCppPtr = reinterpret_cast<QtStackedBar3DVis::QSurfaceSeries3D::DrawFlags *>(sipConvertToType(sipPy, sipType_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags, sipTransferObj, SIP_NO_CONVERTORS, 0, sipIsErr));

return 0;
#line 613 "/trunet/data/volume2/src/QtStackedBars3D/python_lib/QtStackedBars3D/sipQtStackedBars3DQtStackedBar3DVisQSurfaceSeries3DDrawFlags.cpp"
}


/* Define this type's Python slots. */
static sipPySlotDef slots_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags[] = {
    {(void *)slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___hash__, hash_slot},
    {(void *)slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___bool__, bool_slot},
    {(void *)slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___ne__, ne_slot},
    {(void *)slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___eq__, eq_slot},
    {(void *)slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___ixor__, ixor_slot},
    {(void *)slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___xor__, xor_slot},
    {(void *)slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___ior__, ior_slot},
    {(void *)slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___or__, or_slot},
    {(void *)slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___iand__, iand_slot},
    {(void *)slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___and__, and_slot},
    {(void *)slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___invert__, invert_slot},
    {(void *)slot_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags___int__, int_slot},
    {0, (sipPySlotType)0}
};

PyDoc_STRVAR(doc_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags, "\1QtStackedBar3DVis.QSurfaceSeries3D.DrawFlags()\n"
"QtStackedBar3DVis.QSurfaceSeries3D.DrawFlags(Union[QtStackedBar3DVis.QSurfaceSeries3D.DrawFlags, QtStackedBar3DVis.QSurfaceSeries3D.DrawFlag])\n"
"QtStackedBar3DVis.QSurfaceSeries3D.DrawFlags(QtStackedBar3DVis.QSurfaceSeries3D.DrawFlags)");


static pyqt5ClassPluginDef plugin_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags = {
    0,
    1,
    0,
    0
};


sipClassTypeDef sipTypeDef_QtStackedBars3D_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_QtStackedBar3DVis__QSurfaceSeries3D__DrawFlags,
        {0},
        &plugin_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags
    },
    {
        sipNameNr_DrawFlags,
        {52, 255, 0},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,
    -1,
    sipNameNr_sip_simplewrapper,
    0,
    slots_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,
    init_type_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,
    assign_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,
    array_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,
    copy_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,
    release_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,
    0,
    convertTo_QtStackedBar3DVis_QSurfaceSeries3D_DrawFlags,
    0,
    0,
    0,
    0,
    0
};
